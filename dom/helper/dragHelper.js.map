{"version":3,"sources":["../../.src/dom/helper/dragHelper.js"],"names":["pointerParse","clientX","clientY","x","y","DragHelper","element","option","$element","eq","delegates","startFn","moveFn","endFn","dragParams","firstDrag","lastDrag","resetOptions","delegate","delegateElement","each","push","css","getOptions","getCurrentPointerDrag","originalEvent","pointerDrag","moveX","moveY","offsetX","offsetY","leftValue","offset","left","topValue","top","dragEnter","elementOffset","predict","pointer","undefined","event","document","on","dragMove","dragExit","attr","off","removeAttr"],"mappings":"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","sourcesContent":["import $ from '../plugins/jquery';\nimport { rebase } from '../../functions';\n\n//드래그\nconst pointerParse = ({ clientX, clientY })=>{\n  return {\n    x:clientX,\n    y:clientY\n  };\n};\n\nexport default function DragHelper(element,option){\n  const $element = $(element).eq(0);\n  const delegates = [];\n  let startFn;\n  let moveFn;\n  let endFn;\n  \n  let dragParams = null;\n  let firstDrag  = null;\n  let lastDrag   = null;\n  \n  const resetOptions = function(){\n    const delegate = (delegateElement)=>{\n      $(delegateElement).each(function(){\n        delegates.push(this);\n        $(this).css(\"pointer-events\",\"none\");\n      });\n    };\n    \n    const getOptions = rebase(typeof option === \"function\" ? option({ element:$element, delegate }) : option);\n    startFn = getOptions[\"start\"];\n    moveFn = getOptions[\"move\"];\n    endFn = getOptions[\"end\"];\n  };\n  \n  const getCurrentPointerDrag = function(originalEvent){\n    const pointerDrag = pointerParse(originalEvent);\n  \n    //현재 이동한 거리\n    pointerDrag.moveX = pointerDrag.x - lastDrag.x;\n    pointerDrag.moveY = pointerDrag.y - lastDrag.y;\n    \n    //처음으로부터 변경된 거리\n    pointerDrag.offsetX = pointerDrag.x - firstDrag.x;\n    pointerDrag.offsetY = pointerDrag.y - firstDrag.y;\n    \n    //처음으로 부터 변경되어 엘리먼트 오프셋 크기\n    pointerDrag.leftValue = dragParams.offset.left + pointerDrag.offsetX;\n    pointerDrag.topValue  = dragParams.offset.top + pointerDrag.offsetY;\n    \n    pointerDrag.left = pointerDrag.leftValue + \"px\";\n    pointerDrag.top  = pointerDrag.topValue + pointerDrag.offsetY + \"px\";\n    \n    return pointerDrag;\n  }\n  \n  const dragEnter = function({ originalEvent }){\n    //init\n    resetOptions();\n    \n    //\n    const elementOffset = $element.predict();\n    const pointerDrag   = pointerParse(originalEvent);\n    \n    firstDrag = pointerDrag;\n    lastDrag  = pointerDrag;\n    \n    dragParams = { offset:elementOffset, pointer:undefined, event:originalEvent };\n    dragParams.pointer = getCurrentPointerDrag(originalEvent);\n    \n    startFn && startFn(dragParams);\n    \n    $(document)\n    .on(\"mousemove\",dragMove)\n    .on(\"mouseup\",dragExit);\n    \n    $(\"body\").attr(\"dragging\", \"\");\n  };\n  \n  const dragMove = function({ originalEvent }){\n    const pointerDrag = pointerParse(originalEvent);\n    if(!moveFn){\n      lastDrag = pointerDrag;\n      return;\n    } else {\n      dragParams.pointer = getCurrentPointerDrag(originalEvent);\n      dragParams.event   = originalEvent;\n      moveFn(dragParams);\n      lastDrag = pointerDrag;\n    }\n  };\n  \n  const dragExit = function({ originalEvent }){\n    dragParams.pointer = getCurrentPointerDrag(originalEvent);\n    dragParams.event   = originalEvent;\n    endFn && endFn(dragParams);\n    dragParams = undefined;\n    \n    $(document)\n    .off(\"mousemove\",dragMove)\n    .off(\"mouseup\",dragExit);\n    \n    $(\"body\").removeAttr(\"dragging\");\n  };\n  \n  $element.on(\"mousedown\",dragEnter);\n  \n  return $element;\n}"],"file":"dragHelper.js"}