{"version":3,"file":"pado.dom.js","sources":["../.src/dom/plugins/jquery.js","../.src/dom/helper/dragHelper.js","../.src/functions/isLike.js","../.src/functions/cast.js","../.src/dom/helper/repeatHelper.js","../.src/dom/index.js","../.src/pado.dom.js"],"sourcesContent":["let $;\n\ntry {\n  $ = require('jquery');\n} catch(e) {\n  try {\n    $ = jQuery || $;\n    if(!$){\n      throw new Error(\"No jQuery\");\n    }\n  } catch(e2){\n    throw new Error(\"pado/dom sometimes requires jquery.\");\n  }\n}\n\n$.fn.extend({\n  //파라메터 노드가 제이쿼리가 가진 노드 안에 있는지 확인\n  containsIn (node){\n    var [ target ] = $(node).eq(0);\n    if(target) for(var i=0,l=this.length;i<l;i++){\n      if(this[i] === target) return true;\n      if(this.eq(i).find(target).length) return true;\n    }\n    return false;\n  },\n  //파라메터 노드가 제이쿼리가 가진 노드 밖에 있는지 확인\n  containsOut (node){\n    return !this.containsIn(node);\n  }\n});\n\nexport default $;","import $ from '../plugins/jquery';\n\n//드래그\nconst pointerParse = ({ clientX, clientY })=>{\n  return {\n    x:clientX,\n    y:clientY\n  };\n};\n\nexport default function DragHelper(element,option){\n  const $element = $(element).eq(0);\n  \n  let startFn;\n  let moveFn;\n  let endFn;\n  \n  let dragParams = null;\n  let firstDrag  = null;\n  let lastDrag   = null;\n  \n  const resetOptions = function(){\n    const getOptions = (typeof option === \"function\" ? option($element) : option);\n    startFn = getOptions[\"start\"];\n    moveFn = getOptions[\"move\"];\n    endFn = getOptions[\"end\"];\n  };\n  \n  const getCurrentPointerDrag = function(originalEvent){\n    const pointerDrag = pointerParse(originalEvent);\n  \n    //현재 이동한 거리\n    pointerDrag.moveX = pointerDrag.x - lastDrag.x;\n    pointerDrag.moveY = pointerDrag.y - lastDrag.y;\n    \n    //처음으로부터 변경된 거리\n    pointerDrag.offsetX = pointerDrag.x - firstDrag.x;\n    pointerDrag.offsetY = pointerDrag.y - firstDrag.y;\n  \n    //처음으로 부터 변경되어 엘리먼트 오프셋 크기\n    pointerDrag.left = dragParams.offset.left + pointerDrag.offsetX + \"px\";\n    pointerDrag.top  = dragParams.offset.top + pointerDrag.offsetY + \"px\";\n    \n    return pointerDrag;\n  }\n  \n  const dragEnter = function({ originalEvent }){\n    //init\n    resetOptions();\n    \n    //\n    const elementOffset = $element.offsetAll();\n    const pointerDrag   = pointerParse(originalEvent);\n    \n    firstDrag = pointerDrag;\n    lastDrag  = pointerDrag;\n    \n    dragParams = { offset:elementOffset, pointer:undefined };\n    dragParams.pointer = getCurrentPointerDrag(originalEvent);\n    \n    startFn && startFn(dragParams);\n    \n    $(document)\n    .on(\"mousemove\",dragMove)\n    .on(\"mouseup\",dragExit);\n    \n    $(\"body\").attr(\"dragging\", \"\");\n  };\n  \n  const dragMove = function({ originalEvent }){\n    const pointerDrag = pointerParse(originalEvent);\n    if(!moveFn){\n      lastDrag = pointerDrag;\n      return;\n    } else {\n      dragParams.pointer = getCurrentPointerDrag(originalEvent);\n      moveFn(dragParams);\n      lastDrag = pointerDrag;\n    }\n  };\n  \n  const dragExit = function({ originalEvent }){\n    dragParams.pointer = getCurrentPointerDrag(originalEvent);\n    endFn && endFn(dragParams);\n    dragParams = undefined;\n    \n    $(document)\n    .off(\"mousemove\",dragMove)\n    .off(\"mouseup\",dragExit);\n    \n    $(\"body\").removeAttr(\"dragging\");\n  };\n  \n  $element.on(\"mousedown\",dragEnter);\n  \n  return $element;\n}","export const isAbsoluteNaN = function(it){\n  return it!==it && typeof it === \"number\"\n}\n\nexport const isNone = function(data) {\n  return isAbsoluteNaN(data) || data === undefined || data === null\n}\n\nexport const isNumber = function(it){\n  return (typeof it === \"number\" && !isAbsoluteNaN(it))\n}\n\nexport const isInfinity = function(it){\n  return it === Number.POSITIVE_INFINITY || it === Number.NEGATIVE_INFINITY\n}\n\nexport const isInteger = function(value) {\n  //NaN, null, undefined\n  if(isNone(value) === true) return false\n  \n  if(typeof value === \"string\") {\n    value = value.trim()\n  }\n\n  if(!(/string|number/.test(typeof value)) || isInfinity(value) || isNaN(value)) {\n    return false\n  }\n\n  return value == parseInt(value, 10);\n}\n\nexport const isArray = function(data) {\n  return Array.isArray(data) || data instanceof Array;\n}\n\nexport const isObject   = it=>(it !== null && typeof it === \"object\") ? true : false\nexport const isFunction = (it)=>typeof it === \"function\"\n\n/*\n  * likeObject is have hasOwnProperty\n*/\nexport const likeObject = (it)=>isObject(it) || isFunction(it)\n\nexport const likeString = function(data) {\n  if(typeof data === \"string\") return true\n  if(isNumber(data)) return true\n  return false;\n}\n\nexport const likeNumber = function(data) {\n  if(isNumber(data) || isInfinity(data)) return true\n  if(typeof data === \"string\") return String(parseFloat(t)) === String(t)\n  return false;\n}\n\nexport const likeArray = (function(nodeFn,webFn){\n  let definedNodeList\n  \n  try {\n    definedNodeList = (0 instanceof NodeList)\n    definedNodeList = true\n  } catch(e) {\n    definedNodeList = false;\n  }\n  \n  return definedNodeList ? webFn : nodeFn;\n}(\n  //nodeFn\n  function(data){\n    return isArray(data)\n  },\n  //webFn\n  function(data){\n    return isArray(data) || data instanceof NodeList\n  }\n))\n\n//TODO : native isPlainObject\nexport const isNode = (a)=>isObject(a) && typeof a.nodeType === \"number\"\n\nexport const isEmpty = function(it){\n  if (typeof it === \"undefined\") return true;\n  if (typeof it === \"string\")return it.trim().length < 1 ? true : false;\n  if (typeof it === \"object\"){\n    if(it == null) return true;\n    if(it instanceof RegExp) return false;      \n    if(isArray(it)) {\n      return !it.length;\n    } else {\n      for (var prop in it) return false; return true;\n    }\n  }\n  if (typeof it === \"number\"){\n    //NaN check || false\n    return it!==it || false;\n  }\n  if (typeof it === \"function\")return false;\n  if (typeof it === \"boolean\")return false;\n  return true;\n}\n\nexport const likeRegexp = (s)=> (typeof s === \"string\") || (s instanceof RegExp)\n\nexport const isPlainObject = data => typeof data === \"object\" && data.constructor === Object\n\nexport const isEnumerableObject = data => isPlainObject(data) || isArray(data)\n\n// none(undfinec, null, NaN), value(1,\"1\"), hash({}), array([]), node, object(new, Date), function, boolean\nexport const eqof = function(it){\n  const typeIt = typeof it;\n  switch(typeIt){\n  case \"number\":\n    if(isAbsoluteNaN(it)) return \"none\";\n  case \"string\":\n    return \"value\";\n    break;\n  case \"object\":\n    if(isNone(it)) return \"none\";\n    if(likeArray(it)) return \"array\";\n    if(isNode(it)) return \"node\";\n    if(!isPlainObject(it)) return \"object\";\n    return \"hash\";\n    break;\n  case \"undefined\":\n    return \"none\";\n    break;\n  case \"function\":\n  case \"boolean\":\n  default:\n    return typeIt;\n    break;\n  }\n}\n\nconst baseEq = function(value, other, filter, depth=0, strict){\n  if(arguments.length < 2) return false;\n  \n  const valueType = eqof(value);\n  const otherType = eqof(other);\n  \n  if(valueType !== otherType) return false;\n  \n  switch(valueType){\n  case \"none\":\n    return true;\n  case \"array\":\n    if(value.length !== other.length){\n      return false;\n    }\n    return value.every((vValue,i)=>{\n      const oValue = other[i];\n      return (typeof filter === \"function\" && filter(i,[vValue,oValue],depth) === false) ? true : baseEq(vValue,oValue,filter,depth+1,strict);\n    });\n    break;\n  case \"hash\":\n    const vKeys = Object.keys(value), oKeys = Object.keys(other);\n    if(vKeys.length !== oKeys.length || !baseEq(vKeys.sort(),oKeys.sort())) return false;\n    return vKeys.every((key)=>{\n      const vValue = value[key];\n      const oValue = other[key];\n      return (typeof filter === \"function\" && filter(key,[vValue,oValue],depth) === false) ? true : baseEq(vValue,oValue,filter,depth+1,strict);\n    });\n    break;\n  case \"node\":\n  case \"object\":\n  case \"function\":\n  case \"boolean\":\n  case \"value\":\n  default:\n    return strict ? value === other : value == other;\n  }\n}\n\nexport const isEqual   = (value, other, filter, depth)=>baseEq(value, other, filter, depth, true);\nexport const likeEqual = (value, other, filter, depth)=>baseEq(\n  value,\n  other,\n  (key,values,depth)=>/^(\\$|\\_)/.test(key) ? false : typeof filter === \"function\" ? filter(key,values,depth) : true, \n  depth, \n  true\n);\nexport const eqeq      = (value, other, filter, depth)=>baseEq(value, other, filter, depth, false);\n\nexport const isExsist = function(value){\n  if(value === true){\n    return true;\n  }\n  if(value === false){\n    return false;\n  }\n  if(typeof value === \"string\" || typeof value === \"number\"){\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport const notExsist = value=>!isExsist(value)\n\nexport const likePromise = (target)=>(typeof target === \"object\" && target !== null && typeof target['then'] === \"function\" && typeof target['catch'] === \"function\");","import {\n  isArray,\n  isNone,\n  isAbsoluteNaN,\n  isPlainObject,\n  isObject\n} from './isLike'\n\nexport const asArray = function(data, defaultArray = undefined) {\n  if(isArray(data)) {\n    return data;\n  }\n  if(isNone(data)) {\n    return isArray(defaultArray) ? defaultArray\n      : isNone(defaultArray) ? [] : [defaultArray];\n  }\n  if(typeof data === \"object\" && typeof data.toArray === \"function\") {\n    return data.toArray();\n  }\n  return [data];\n};\n\nexport const toArray = function(data,option){\n  if(typeof data === \"undefined\" || data === null || data === NaN ) return [];\n  if(isArray(data)) return Array.prototype.slice.call(data);\n  if(typeof data === \"object\" && typeof data.toArray === \"function\") return data.toArray();\n  if(typeof data === \"string\", typeof option === \"string\") return data.split(option);\n  return [data];\n}\n\nexport const asObject = function(data, defaultKey = \"default\") {\n  if(isPlainObject(data)){\n    return data;\n  } else {\n    return { [defaultKey]:data }\n  }\n};\n\nexport const toNumber = function(v,d){\n  switch(typeof v){ case \"number\":return v;case \"string\":var r=v.replace(/[^.\\d\\-]/g,\"\")*1;return isAbsoluteNaN(r)?0:r;break; }\n  switch(typeof d){ case \"number\":return d;case \"string\":var r=d*1;return isAbsoluteNaN(r)?0:r;break; }\n  return 0;\n}\n\nexport const cleanObject = function(data){\n  if(data instanceof Array){\n    Array.prototype.splice.call(data,0,data.length)\n  } else if(typeof data == \"object\") {\n    Object.keys(data).forEach(key=>{ delete data[key] })\n  }\n  return data\n}\n\nexport const clone = function(target){\n  switch(typeof target){\n  case \"undefined\": case \"function\": case \"boolean\": case \"number\": case \"string\": return target; break;\n  case \"object\":\n    if(target === null) return target;\n    \n    if(isArray(target)){\n      let r=[];\n      for(let i=0,length=target.length;i<length;i++)r.push(target[i]);\n      return r;\n    }\n    \n    if(!isPlainObject(target)){\n      if(target instanceof Date){\n        let r=new Date();\n        r.setTime(target.getTime());\n        return r;\n      }\n      return target;\n    }\n    \n    let r={};\n    \n    Object.keys(target).forEach(k=>{\n      if(target.hasOwnProperty(k)) r[k]=target[k];\n    });\n    return r;\n    break;\n  default : \n    console.error(\"clone::copy failed : target => \",target);\n    return target; \n    break\n  }\n}\n\nexport const cloneDeep = function(target){\n  if(typeof target === \"object\"){\n    let d;\n    if(isArray(target)) {\n      if(!isArray(d)) { d = [] };\n      for (var i=0,l=target.length;i<l;i++) d.push( ((typeof target[i] === \"object\" && target[i] !== null ) ? clone(target[i]) : target[i]) )\n        return d;\n    } else {\n      d = {}\n      Object.keys(target).forEach(p=>{\n        (typeof target[p] === \"object\" && target[p] !== null && d[p]) ? clone(target[p],d[p]) : d[p] = target[p];\n      });\n      return d;\n    }\n  } else {\n    return clone(target);\n  }\n};\n\nexport const free = function(datum){\n  const dest = {}\n  Object.keys(datum).forEach(key=>{\n    if(!/^\\$/.test(key)){\n      dest[key] = cloneDeep(datum[key])\n    }\n  });\n  return dest;\n}\n\nconst getKeyWithValue = function(obj,value){\n  if(isArray(obj)){\n    for(var i=0,l=obj.length;i<l;i++) if(obj[i]===value) return i;\n  } \n  if(isObject(obj)){\n    for(var key in obj) if(obj[key]===value) return key;\n  }\n  return undefined;\n};\n\nexport const removeValue = function(obj,value){\n  var detect = true;\n  var array  = isArray(obj);\n\n  while(detect) {\n    var key = getKeyWithValue(obj,value);\n    if(typeof key === \"undefined\"){\n      detect = false;\n    } else {\n      if(array){\n        obj.splice(key,1);\n      } else {\n        delete obj[key];\n      }\n    }\n  }\n\n  return obj;\n};\n\nexport const instance = function(func,proto){\n  var ins,DummyInstance=function(param){ if(typeof param === \"object\") for(var k in param) this[k] = param[k]; };\n  if(typeof func == \"object\"){\n    if(typeof proto === \"object\") DummyInstance.prototype = proto;\n    ins = new DummyInstance(func);\n  }\n  if(typeof func == \"function\"){\n    if(typeof proto === \"object\") func.prototype = proto;\n    ins = (new func());\n  }\n  return ins;\n}\n\nexport const alloc = function(init) {\n  let fn = init();\n  const rn = function(...args) {\n    return fn.apply(this, args);\n  };\n  rn['reset'] = function() { fn = init(rn, rn); };\n  rn['$constructor'] = fn;\n  return rn;\n};\n\nconst syncData = (function(){\n  const ENTER_HOOK  = (newDatum)=>_.assign({}, newDatum);\n  const UPDATE_HOOK = (oldDatum, newDatum)=>_.assign({}, oldDatum, newDatum);\n  \n  return function(oldData, newData, getId, options) {\n    if(!/string|function/.test(typeof getId)) throw new Error(\"syncData need getId\");\n  \n    if(typeof getId === \"string\") {\n      const getIdString = getId;\n      getId = e=>_.get(e, getIdString);\n    }\n\n    oldData = asArray(oldData);\n    newData = asArray(newData);\n\n    const result = [];\n    const hooks  = asObject(options,\"afterEach\")\n    \n    if(typeof hooks[\"enter\"] !== \"function\"){\n      hooks[\"enter\"] = ENTER_HOOK;\n    }\n    \n    if(typeof hooks[\"update\"] !== \"function\"){\n      hooks[\"update\"] = UPDATE_HOOK;\n    }\n    \n    const oldDataMap = _.map(oldData, e=>{\n      return { id: getId(e), ref: e };\n    });\n    \n    \n    asArray(newData).forEach((newDatum, i)=>{\n      const newId = getId(newDatum);\n      let oldDatum = _.get(oldDataMap[_.findIndex(oldDataMap, e=>e.id === newId)], \"ref\");\n      let genDatum;\n      let dirty = false;\n\n      if(oldDatum) {\n        // change is not dirty, modify is dirty\n        if(typeof oldDatum !== typeof newDatum) {\n          dirty = false;\n        } else { // same type\n          const oldOwnKeys = Object.keys(oldDatum).filter(key=>!(key.indexOf(\"$\") === 0));\n          const newOwnKeys = Object.keys(newDatum).filter(key=>!(key.indexOf(\"$\") === 0));\n\n          // inspect key chnage\n          if(_.isEqual(oldOwnKeys, newOwnKeys)) {\n            dirty = !_.isEqual(_.pick(oldDatum, oldOwnKeys), _.pick(newDatum, newOwnKeys));\n          } else {\n            dirty = true;\n          }\n        }\n        \n        if(typeof hooks[\"beforeUpdate\"] === \"function\"){\n          if(hooks[\"beforeUpdate\"](oldDatum, newDatum) === false){\n            return;\n          }\n        }\n        \n        genDatum = hooks[\"update\"](oldDatum, newDatum);\n        \n        if(typeof hooks[\"afterUpdate\"] === \"function\"){\n          genDatum = hooks[\"afterUpdate\"](genDatum, oldDatum, newDatum);\n        }\n      } else {\n        if(typeof hooks[\"beforeEnter\"] === \"function\"){\n          if(hooks[\"beforeEnter\"](newDatum) === false){\n            return;\n          }\n        }\n        \n        genDatum = hooks[\"enter\"](newDatum);\n        \n        if(typeof hooks[\"afterEnter\"] === \"function\"){\n          genDatum = hooks[\"afterEnter\"](genDatum, newDatum);\n        }\n      }\n\n      if(typeof hooks[\"afterEach\"] === \"function\") {\n        hooks[\"afterEach\"](genDatum, i, dirty);\n      }\n\n      result.push(genDatum);\n    });\n\n    return result;\n  }\n}())","import { asArray } from '../../functions';\n\nexport default function RepeatHelper({ key, enter:enterFn, update:updateFn, exit:exitFn }){\n  // {key:string, vm:Component}\n  let oldBag = [];\n  \n  // 모델의 키를 얻는 함수\n  const getKey = typeof key === \"function\" ? key : function(datum){\n    return datum[key];\n  }\n  \n  // ng-repeat, v-for와 같은 리피터 구현체 (d3의 data().enter().exit() 컨샙이 비슷함)\n  const repeater = function(data){\n    let newData = asArray(data);\n    let newBag  = [];\n    \n    //새 데이터를 검사합니다.\n    newData.forEach((datum, index)=>{\n      //키를 추출합니다.\n      const newDatumKey = getKey(datum) || index;\n      \n      //키 샘플입니다.\n      const newMeta = {\n        key:newDatumKey,\n        datum:datum,\n      };\n      \n      //매치되는 오래된 메타를 확인합니다.\n      const matchOldMeta = oldBag.find(old=>old.key === newDatumKey);\n      \n      //오래된 메타가 확인될 시\n      if(matchOldMeta){\n        //exit를 하지 않고 살립니다.\n        newMeta.vm = matchOldMeta.vm;\n        matchOldMeta.$continue = true;\n      }\n      \n      newBag.push(newMeta);\n    });\n    \n    //exit (require)\n    oldBag.forEach(oldMeta=>{\n      if(!oldMeta.$continue){\n        exitFn(oldMeta);\n      }\n    });\n    \n    //메타에 추가 정보 입력 (prevVm)\n    newBag.forEach((newMeta, index)=>{\n      const prevMeta = newBag[index - 1];\n      if(prevMeta && prevMeta[\"vm\"]){\n        newMeta[\"prevVm\"] = prevMeta[\"vm\"];\n      }\n    });\n    \n    //enter (require)\n    newBag.forEach((newMeta, index)=>{\n      if(!newMeta.vm){\n        let result = enterFn(newMeta, index);\n        if(!result){\n          throw new Error(\"enter는 반드시 vm을 리턴해야합니다.\");\n        } else {\n          newMeta[\"vm\"] = result;\n        }\n      }\n    });\n    \n    //update (option)\n    updateFn && newBag.forEach((newMeta, index)=>{\n      updateFn(newMeta, index);\n    });\n    \n    //history change\n    oldBag = newBag;\n  }\n  \n  //컴포넌트에서 정렬된 데이터를 얻기위한 용도로 제작. Component에서 (개발 시간상) 한계로 이곳에서 수행\n  repeater[\"vm\"] = function(){\n    return oldBag.map(d=>d.vm);\n  }\n  \n  return repeater;\n};","import _dragHelper from './helper/dragHelper'\nimport _repeatHelper from './helper/repeatHelper'\n\nexport const dragHelper = _dragHelper;\nexport const repeatHelper = _repeatHelper;","import * as helpers from './dom/index.js'\nconst DEFAULT = { ...helpers }\nexport default DEFAULT;"],"names":["$","require","e","jQuery","Error","e2","fn","extend","containsIn","node","eq","target","i","l","length","find","containsOut","pointerParse","clientX","clientY","x","y","DragHelper","element","option","$element","startFn","moveFn","endFn","dragParams","firstDrag","lastDrag","resetOptions","getOptions","getCurrentPointerDrag","originalEvent","pointerDrag","moveX","moveY","offsetX","offsetY","left","offset","top","dragEnter","elementOffset","offsetAll","pointer","undefined","document","on","dragMove","dragExit","attr","off","removeAttr","isAbsoluteNaN","it","isNone","data","isArray","Array","asArray","defaultArray","toArray","RepeatHelper","key","enterFn","enter","updateFn","update","exitFn","exit","oldBag","getKey","datum","repeater","newData","newBag","forEach","index","newDatumKey","newMeta","matchOldMeta","old","vm","$continue","push","oldMeta","prevMeta","result","map","d","dragHelper","_dragHelper","repeatHelper","_repeatHelper","DEFAULT","helpers"],"mappings":"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"}