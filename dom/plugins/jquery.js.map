{"version":3,"sources":["../../.src/dom/plugins/jquery.js"],"names":["$","window","document","require","e","jsdom","JSDOM","dom","contentType","userAgent","includeNodeLocations","global","fn","extend","containsIn","node","eq","target","i","l","length","find","containsOut","offsetAll","element","result","top","left","width","innerWidth","height","innerHeight","right","bottom","offsetTop","offsetLeft","offsetWidth","offsetHeight"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,MAAIA,CAAJ;;AAEA,MAAI;AACDC,YAAOC,QAAR;AACAF,QAAIG,QAAQ,QAAR,CAAJ;AACD,GAHD,CAGE,OAAMC,CAAN,EAAQ;AAAA,iBACUC,KADV;AAAA,QACAC,KADA,UACAA,KADA;AAER,QAAMC,MAAM,IAAID,KAAJ,CAAU,+DAAV,EAA0E;AACpFE,mBAAa,WADuE;AAEpFC,iBAAW,qBAFyE;AAGpFC,4BAAsB;AAH8D,KAA1E,CAAZ;AAKAC,WAAOV,MAAP,GAAgBM,IAAIN,MAApB;AACAU,WAAOT,QAAP,GAAkBK,IAAIL,QAAtB;AACAF,QAAIG,QAAQ,QAAR,CAAJ;AACD;;AAEDH,IAAEY,EAAF,CAAKC,MAAL,CAAY;AACV;AACAC,cAFU,sBAEEC,IAFF,EAEO;AAAA,kBACEf,EAAEe,IAAF,EAAQC,EAAR,CAAW,CAAX,CADF;AAAA,UACTC,MADS;;AAEf,UAAGA,MAAH,EAAW,KAAI,IAAIC,IAAE,CAAN,EAAQC,IAAE,KAAKC,MAAnB,EAA0BF,IAAEC,CAA5B,EAA8BD,GAA9B,EAAkC;AAC3C,YAAG,KAAKA,CAAL,MAAYD,MAAf,EAAuB,OAAO,IAAP;AACvB,YAAG,KAAKD,EAAL,CAAQE,CAAR,EAAWG,IAAX,CAAgBJ,MAAhB,EAAwBG,MAA3B,EAAmC,OAAO,IAAP;AACpC;AACD,aAAO,KAAP;AACD,KATS;AAUV;AACAE,eAXU,uBAWGP,IAXH,EAWQ;AAChB,aAAO,CAAC,KAAKD,UAAL,CAAgBC,IAAhB,CAAR;AACD,KAbS;AAcVQ,aAdU,uBAcE;AAAA,qBACU,KAAKP,EAAL,CAAQ,CAAR,CADV;AAAA,UACFQ,OADE;;AAEV,UAAIC,MAAJ;;AAEA,UAAG,CAACD,OAAJ,EAAY;AACV;AACD;;AAED,UAAGA,QAAQ,YAAR,CAAH,EAAyB;AACvBC,iBAAS;AACPC,eAAI,CADG;AAEPC,gBAAK,CAFE;AAGPC,iBAAM3B,OAAO4B,UAHN;AAIPC,kBAAO7B,OAAO8B,WAJP;AAKPC,iBAAM/B,OAAO4B,UALN;AAMPI,kBAAOhC,OAAO8B;AANP,SAAT;AAQD,OATD,MASO;AAAA,YACGG,SADH,GACwDV,OADxD,CACGU,SADH;AAAA,YACcC,UADd,GACwDX,OADxD,CACcW,UADd;AAAA,YAC0BC,WAD1B,GACwDZ,OADxD,CAC0BY,WAD1B;AAAA,YACuCC,YADvC,GACwDb,OADxD,CACuCa,YADvC;AAELZ,iBAAS;AACPC,eAAIQ,SADG;AAEPP,gBAAKQ,UAFE;AAGPP,iBAAMQ,WAHC;AAIPN,kBAAOO,YAJA;AAKPL,iBAAMG,aAAaC,WALZ;AAMPH,kBAAOC,YAAYG;AANZ,SAAT;AAQD;;AAED,aAAOZ,MAAP;AACD;AA5CS,GAAZ;iBA+CezB,C","sourcesContent":["let $;\n\ntry {\n  (window,document);\n  $ = require('jquery');\n} catch(e){\n  const { JSDOM } = jsdom;\n  const dom = new JSDOM('<html><head><meta charset=\"utf-8\"></head><body></body></html>',{\n    contentType: \"text/html\",\n    userAgent: \"Mellblomenator/9000\",\n    includeNodeLocations: true\n  });\n  global.window = dom.window;\n  global.document = dom.document;\n  $ = require('jquery');\n}\n\n$.fn.extend({\n  //파라메터 노드가 제이쿼리가 가진 노드 안에 있는지 확인\n  containsIn (node){\n    var [ target ] = $(node).eq(0);\n    if(target) for(var i=0,l=this.length;i<l;i++){\n      if(this[i] === target) return true;\n      if(this.eq(i).find(target).length) return true;\n    }\n    return false;\n  },\n  //파라메터 노드가 제이쿼리가 가진 노드 밖에 있는지 확인\n  containsOut (node){\n    return !this.containsIn(node);\n  },\n  offsetAll (){\n    const [ element ] = this.eq(0);\n    let result;\n    \n    if(!element){\n      return;\n    }\n    \n    if(element[\"innerWidth\"]){\n      result = {\n        top:0,\n        left:0,\n        width:window.innerWidth,\n        height:window.innerHeight,\n        right:window.innerWidth,\n        bottom:window.innerHeight\n      }\n    } else {\n      const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = element;\n      result = {\n        top:offsetTop,\n        left:offsetLeft,\n        width:offsetWidth,\n        height:offsetHeight,\n        right:offsetLeft + offsetWidth,\n        bottom:offsetTop + offsetHeight\n      }\n    }\n    \n    return result;\n  }\n});\n\nexport default $;"],"file":"jquery.js"}