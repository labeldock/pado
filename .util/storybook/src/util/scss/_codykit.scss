@charset "UTF-8";
//CSS Toolkit :: Codykit version : 0.17 (1.0 alpha)
//auther : hojung ahn (https://github.com/labeldock/codykit)
@if global-variable-exists(codykit-hack){ $codykit-hack:$codykit-hack !global; } @else {
	$codykit-hack:false !global;
}
@if global-variable-exists(codykit-disabled-opacity){ $codykit-disabled-opacity:$codykit-disabled-opacity !global; } @else {
	$codykit-disabled-opacity:0.7 !global;
}

//media default option (width start)
@if global-variable-exists(codykit-tablet-width){ $codykit-tablet-width:$codykit-tablet-width !global; } @else {
	$codykit-tablet-width:768px !global;
}
@if global-variable-exists(codykit-desktop-width){ $codykit-desktop-width:$codykit-desktop-width !global; } @else {
	$codykit-desktop-width:1200px !global;
}

//media detail option (width start)
@if global-variable-exists(codykit-mobile-landscape-width){ $codykit-mobile-landscape-width:$codykit-mobile-landscape-width !global; } @else {
	$codykit-mobile-landscape-width:480px !global;
}
@if global-variable-exists(codykit-tablet-landscape-width){ $codykit-tablet-landscape-width:$codykit-tablet-landscape-width !global; } @else {
	$codykit-tablet-landscape-width:992px !global;
}
@if global-variable-exists(codykit-desktop-landscape-width){ $codykit-desktop-landscape-width:$codykit-desktop-landscape-width !global; } @else {
	$codykit-desktop-landscape-width:1920px !global;
}

@if global-variable-exists(codykit-preload-images){ $codykit-preload-images:$codykit-preload-images !global; } @else {
	$codykit-preload-images:"" !global;
}
@if global-variable-exists(codykit-standard-empx){ $codykit-standard-empx:$codykit-standard-empx !global; } @else {
	$codykit-standard-empx:16px !global;
}
@if global-variable-exists(codykit-relative-empx){ $codykit-relative-empx:$codykit-relative-empx !global; } @else {
	$codykit-relative-empx:16px !global;
}

//usage [$mobile-vetical-limit, $mobile-limit, $tablet-vertical-limit, $tablet-limit];
//@include codykit-media-width(480px,768px,992px,1200px);
@mixin codykit-media-width($mobile-vetical-limit, $mobile-limit, $tablet-vertical-limit, $tablet-limit){
	$codykit-mobile-landscape-width:$mobile-vetical-limit !global;
	$codykit-tablet-width:$mobile-limit !global;
	$codykit-tablet-landscape-width:$tablet-vertical-limit !global;
	$codykit-desktop-width:$tablet-limit !global;
	@content;
}


@mixin focus-variant($flag:true,$color:false){
	@if $flag == false {
		&:focus {
			outline: none;
		}
	} @else {
		&:focus {
			@include focus($color);
		}
	}
}

@mixin focus($color:false,$size:false,$inset:false) {
	@if $inset == true or $inset == inset {
		box-shadow:inset 0px 0px ($size or 5px) ($color or rgba(81, 203, 238, 1));
	} @else {
		box-shadow:0px 0px ($size or 5px) ($color or rgba(81, 203, 238, 1));
	}
}

@mixin when($parent,$parent-state) {
	@each $state in $parent-state {
		$rep:selector-replace(&, $parent, #{$parent+$state});
		@at-root #{$rep} {
			
	        @content;
	    }
	}
}

@mixin codykit-standard-fontsize($base-size:false){
	@if $base-size != false {
		$codykit-standard-empx:$base-size !global;
	}
}

@mixin root-fontsize-variant($relative-size:false) {
	@if $relative-size != false {
		$codykit-relative-empx:$relative-size !global;
	}
	font-size:$codykit-relative-empx * ($codykit-relative-empx / $codykit-standard-empx);
}

@mixin rem-variant($font-size:false) {
	@if $font-size == false {
		font-size:1rem;
	} @else {
		font-size:#{$font-size / $codykit-relative-empx}rem;
	}
}

//"width-height" is only use in _codykit.scss
@mixin width-height($width:false,$height:false) {
    @if $width != false  { width:$width; }
    @if $height != false { height:$height; }
}

@mixin align-block($align:left, $width:false, $height:false){
    display:block;
    @if $align == left {
        margin-left:0;
        margin-right:auto;
    }
    @if $align == right {
        margin-left:auto;
        margin-right:0;
    }
    @if $align == center {
        margin-left:auto;
        margin-right:auto;
    }
    @include width-height($width,$height);
}

@mixin block($width:false, $height:false, $align-block:false, $line-height:false){
    @include align-block($align-block, $width, $height);

	@if $line-height {
		line-height:$line-height;
	}

	@content;
}

@mixin inline-block($width:false, $height:false,$vertical-align:false,$line-height:false){
    @if $codykit-hack == true {
        display:inline;
		zoom:1;
    }
    
    display:inline-block;
    
	@include width-height($width,$height);

	@if $vertical-align == false {
		vertical-align:middle;
	} @else {
		vertical-align:$vertical-align;
	}

	@if $line-height {
		line-height:$line-height;
	}
	@content;
}

@mixin flex-flow-variant($direction:row, $wrap:wrap){
	@if $direction == row or $direction == top {
		flex-direction:row;
	}
	@if $direction == row-reverse or $direction == bottom{
		flex-direction:row-reverse;
	}
	@if $direction == column or $direction == left {
		flex-direction:column;
	}
	@if $direction == column-reverse or $direction == right {
		flex-direction:column-reverse;
	}
	justify-content:space-between;

	@if $wrap == wrap or  $wrap == true {
		flex-wrap:wrap;
	}
	@if $wrap == nowrap or  $wrap == false {
		flex-wrap:nowrap;
	}
	@content;
}

@mixin clearfix {
    &:after {
        content:"";
        display:block;
        height:0px;
		width:0px;
        clear:both;
    }
}

@mixin white-space-variant($flag:true,$scroll:false){
	@if $flag == true{
		white-space: normal;
	} @else {
		white-space: nowrap;
	}
	@if $scroll == true {
		max-width:100%;
	} @else {
		max-width:auto;
	}
}

@mixin word-break-variant($flag:true,$text-overflow:clip) {
    @if $flag == true{
	    white-space: normal;
		word-break:break-all;
        text-overflow: initial;
        -o-text-overflow: initial;
        -ms-text-overflow: initial;
    }
    @if $flag == false{
    	white-space: nowrap;
		word-break:keep-all;
	    text-overflow: $text-overflow;
	    -o-text-overflow: $text-overflow;
	    -ms-text-overflow: $text-overflow;
    }
}

@mixin word-wrap-variant($flag:true,$overflow:false,$text-overflow:clip) {
	@if $flag == true{
	    white-space: normal;
		word-break:keep-all;
		//word-break:normal;
	    //word-wrap:normal;
		@if $overflow == false {
			overflow: visible;
		} @else {
			overflow: $overflow;
		}
        text-overflow: initial;
        -o-text-overflow: initial;
        -ms-text-overflow: initial;
	}
	@if $flag == false{
		white-space: nowrap;
		//word-wrap:normal;
		@if $overflow == false {
			overflow: hidden;
		} @else {
			overflow: $overflow;
		}
	    text-overflow: $text-overflow;
	    -o-text-overflow: $text-overflow;
	    -ms-text-overflow: $text-overflow;
	}
}

@mixin ellipsis-variant($flag:true,$overflow:false){
	@if $flag == true {
		@include word-wrap-variant(false,$overflow,ellipsis);
	}
	@if $flag == false {
		@include word-wrap-variant(true);
	}
}

@mixin omission-variant($max-width:100%){
	max-width:$max-width;
	@include ellipsis-variant(true);
}

@mixin user-select-variant($flag:auto) {
	@if $flag == false or $flag == none {
		-webkit-touch-callout: none;
		@include css3f(user-select, none);
	} @else {
		@if $flag == true {
			$flag:auto;
		}
		-webkit-touch-callout: auto;
		@include css3f(user-select, auto);
	}
}

@mixin appearance-variant($flag:true){
	@if $flag == true {
	    @include css3f(appearance,normal);
	    &::-ms-expand { display:normal; }
	} @elseif $flag == false {
	    @include css3f(appearance,none);
	    &::-ms-expand { display:none; }
	} @else {
	    @include css3f(appearance,$flag);
	    &::-ms-expand { display:$flag; }
	}
	@content;
}

@mixin pointer-events-variant($flag:true,$cursor:false){
    @if $flag == false or $flag == none {
        pointer-events: none;
		@if $cursor == true {
			cursor:not-allowed;
		}
		@include user-select-variant(false);
    } @else {
		@if $flag == true {
			$flag:auto;
		}
        pointer-events:$flag;
		@if $cursor == true {
			cursor:auto;
		}
		@include user-select-variant(true);
    }
}

@mixin css3v($name,$value,$fallback:false){
    @if $fallback {
		#{$name}:#{$fallback};
	}
    #{$name} : unquote('-webkit-#{$value}');
    #{$name} : unquote('-moz-#{$value}');
    #{$name} : unquote('-ms-#{$value}');
    #{$name} : $value;
}

@mixin css3f($name,$value){
    -webkit-#{$name} : $value;
    -moz-#{$name}    : $value;
    -ms-#{$name}     : $value;
    #{$name}         : $value;
}

@mixin calc($prop,$initial-value:100%,$value:0px,$fallback:false){
	@if $value < 0px {
		@include css3v($prop,calc(#{$initial-value} - #{$value * -1}),$fallback);
	} @else {
		@include css3v($prop,calc(#{$initial-value} + #{$value}),$fallback);
	}
}

@mixin transform($value){
    @include css3f(transform, $value);
}

@mixin transition($props:"all 0.3s",$timing-function:cubic-bezier(.4,.99,.4,.99)){
	@if $props {
		-webkit-transition:#{$props};
		-webkit-transition-timing-function:$timing-function;
		transition:#{$props};
		transition-timing-function:$timing-function;
	}
}

@mixin delay-transition($delay:0.3s,$props:"all 0.3s",$timing-function:ease-in-out){
	@include transition($props,$timing-function);
	transition-delay:$delay;
	-webkit-transition-delay:$delay;
}

@mixin keyframes($name,$with-webkit:true) {
	@keyframes #{$name} {
		@content;
	}
	@-webkit-keyframes #{$name} {
		@content;
	}
}

@mixin animation($name,$sec:0.3s,$timing-function:false,$repeat:1){
	@if $timing-function == false {
		$timing-function:ease-in-out;
	}
	animation-name: $name;
	animation-duration: $sec;
	animation-timing-function: $timing-function;
	animation-iteration-count: $repeat;
	-webkit-animation-name: $name;
	-webkit-animation-duration: $sec;
	-webkit-animation-timing-function: $timing-function;
	-webkit-animation-iteration-count: $repeat;
}

@mixin animation-to($name,$sec:0.3s,$timing-function:ease-in-out,$repeat:1) {
	@include animation($name,$sec,$timing-function,$repeat);
	animation-fill-mode:forwards;
	-webkit-animation-fill-mode:forwards;
}

@mixin delay-animation($delay:0.3s,$name:false,$sec:0.3s,$timing-function:ease-in-out,$repeat:1){
	@if $name {
		@include animation($name,$sec,$timing-function,$repeat);
		animation-delay: $delay;
		-webkit-animation-delay: $delay;
	}
}

@mixin repeat-animation($name:false,$sec:2s,$timing-function:linear){
	@if $name {
		@include animation($name,$sec,$timing-function,infinite);
	}
}

@mixin animation-reverse($name,$sec:0.3s,$timing-function:false,$repeat:1){
	@include animation($name,$sec,$timing-function,$repeat);
	-webkit-animation-direction: alternate;
	animation-direction: alternate;
}

@mixin animation-reverse-to($name,$sec:0.3s,$timing-function:ease-in-out,$repeat:1) {
	@include animation-to($name,$sec,$timing-function,$repeat);
	-webkit-animation-direction: alternate;
	animation-direction: alternate;
}

@mixin delay-animation-reverse($delay:0.3s,$name:false,$sec:0.3s,$timing-function:ease-in-out,$repeat:1){
	@include delay-animation($delay,$name,$sec,$timing-function,$repeat);
	-webkit-animation-direction: alternate;
	animation-direction: alternate;
}

@mixin disabled-variant($switch:true,$with-shadow:true) {
	@if $switch == true {
	    cursor: not-allowed;
	    pointer-events: none;
		@if $with-shadow == true {
		    -webkit-box-shadow: none;
		    box-shadow: none;
		}
	}
}

@mixin opacity($opacity:1){
  opacity: $opacity;
  // IE8 filter
  filter: alpha(opacity=#{$opacity * 100});
}

@mixin matrix($a:1, $c:0, $b:0, $d:1, $tx:0, $ty:0){
    @include css3f(transform, matrix($a,$c,$b,$d,$tx,$ty));
}

@mixin translateX($x){
    @include css3f(transform, translateX(#{$x}));
}

@mixin translateY($y){
    @include css3f(transform, translateY(#{$y}));
}

@mixin translate($x:false,$y:false){
    @if ($x == false and $y == false) {
        @include css3f(transform, translate(0px,0px));
    } @else if ($x != false and $y != false){
        @include css3f(transform, translate(#{$x},#{$y}));
    } @else if($x == false) {
        @include translateY($y);
    } @else {
        @include translateX($x);
    }
}

@mixin translate3d($x:0,$y:0,$z:0){
    @include css3f(transform, translate3d(#{$x},#{$y},#{$z}));
}

@mixin rotate-varinat($rotate:0) {
    @include css3f(transform, rotate(#{$rotate}));
}

@mixin scale-variant($p1:1,$p2:false){
    @if $p2 == false {$p2:$p1}
    @include css3f(transform, scale($p1,$p2));
}

@mixin translate-center($offset-x:false,$offset-y:false,$position:absolute) {
    position: $position;

    @if $offset-x {
		@include calc(left,50%,$offset-x,50%);
    } @else {
        left: 50%;
    }
    @if $offset-y {
		@include calc(top,50%,$offset-y,50%);
    } @else {
        top: 50%;
    }
    @include translate(-50%,-50%);
	@content;
}

@mixin translate-center-horizontal($offset-x:false,$position:absolute) {
    position: $position;
    @if $offset-x {
		@include calc(left,50%,$offset-x,50%);
    } @else {
        left: 50%;
    }
    @include translateX(-50%);
	@content;
}

@mixin translate-center-vertical($offset-y:false,$position:absolute) {
    position: $position;
    @if $offset-y {
		@include calc(top,50%,$offset-y,50%);
    } @else {
        top: 50%;
    }
    @include translateY(-50%);
	@content;
}

@mixin relative($x:false,$y:false){
	@if $x == auto or $x == initial{
		left:$x;
		top:$x;
		right:$x;
		bottom:$x;
	} @else {
		position:relative;
		@if $x { left:$x; }
		@if $y { top:$y; }
	}
	@content;
}

@mixin relative-center($offset-x:false) {
    @include translate-center-horizontal($offset-x,relative);
	@content;
}

@mixin absolute($x:false,$y:false,$r:false,$b:false){
	position:absolute;

	@if $x == right {
		$right:$y;
		$top:$r;

		@if $right == false { $right:0px; }
		@if $top == false { $top:0px; }

		$x:false;
		$r:$right;
		$y:$top;
	}
	@elseif $x == left {
		$left:$y;
		$top:$r;

		@if $left == false { $left:0px; }
		@if $top == false { $top:0px; }

		$x:$left;
		$y:$top;
		$r:false;
	}
	@elseif $x == top {
		$top:false;
		$left:false;
		$right:false;
		@if $y == full {
			$top:$r or 0px;
			$left:$b or 0px;
			$right:$b or 0px;
		} @elseif $y == center {
			$top:$r or 0px;
			$left:auto;
			$right:auto;
		} @elseif $y == right {
			$top:$r or 0px;
			$left:auto;
			$right:$b or 0px;
		} @elseif $y == left {
			$top:$r or 0px;
			$left:$b or 0px;
			$right:auto;
		} @else {
			$top:$y or 0px;
			$left:$r or 0px;
			$right:auto;
		}

		$x:$left;
		$y:$top;
		$r:$right;
		$b:auto;
	}
	@elseif $x == bottom {

		$bottom:false;
		$left:false;
		$right:false;
		@if $y == full {
			$bottom:$r or 0px;
			$left:$b or 0px;
			$right:$b or 0px;
		} @elseif $y == center {
			$bottom:$r or 0px;
			$left:auto;
			$right:auto;
		} @elseif $y == right {
			$bottom:$r or 0px;
			$left:auto;
			$right:$b or 0px;
		} @elseif $y == left {
			$bottom:$r or 0px;
			$left:$b or 0px;
			$right:auto;
		} @else {
			$bottom:$y or 0px;
			$left:$r or 0px;
			$right:auto;
		}

		$x:$left;
		$y:auto;
		$r:$right;
		$b:$bottom;
	}
	@elseif $x == all or $x == full {
		$x:0px;
		$y:0px;
		$r:0px;
		$b:0px;
	}

	@if $x { left:$x; }
	@if $y { top:$y; }
	@if $r { right:$r; }
	@if $b { bottom:$b; }
	@if $x != false and $r != false {
		width:auto;
	}
	@if $y != false and $b != false {
		height:auto;
	}
	@content;
}

@mixin visibility($flag:true){
	@if $flag == true {
		visibility:visible;
	}
	@if $flag == false {
		visibility:hidden;
	}
}

@mixin shadow-variant($x-shadow:0px,$y-shadow:0px,$blur:false,$color:silver,$spread:false){
	@if $blur == false { $blur : (($x-shadow + $y-shadow) / 2); }
	@if $spread {
		@include css3f(box-shadow, #{$x-shadow} #{$y-shadow} #{$blur} #{$spread} #{$color});
	} @else {
		@include css3f(box-shadow, #{$x-shadow} #{$y-shadow} #{$blur} #{$color});
	}
}

@mixin shadow-inset-variant($x-shadow:0px,$y-shadow:0px,$blur:false,$color:gray,$spread:false){
    @if $blur == false { $blur : (($x-shadow + $y-shadow) / 2); }
    @if $spread {
        @include css3f(box-shadow, inset #{$x-shadow} #{$y-shadow} #{$blur} #{$spread} #{$color});
    } @else {
        @include css3f(box-shadow, inset #{$x-shadow} #{$y-shadow} #{$blur} #{$color});
    }
}

@mixin shadow-border($border-width:1px,$color:#000,$direction:false,$blur:0px){
    @if $direction == left {
		@if $border-width < 0px {
			@include shadow-inset-variant(-$border-width,0px,$blur,$color);
		} @else {
			@include shadow-variant(-$border-width,0px,$blur,$color);
		}
    }
    @if $direction == right {
		@if $border-width < 0px {
			@include shadow-inset-variant($border-width,0px,$blur,$color);
		} @else {
			@include shadow-variant($border-width,0px,$blur,$color);
		}
    }
    @if $direction == top {
		@if $border-width < 0px {
			@include shadow-inset-variant(0px,-$border-width,$blur,$color);
		} @else {
			@include shadow-variant(0px,-$border-width,$blur,$color);
		}
    }
    @if $direction == bottom {
		@if $border-width < 0px {
			@include shadow-inset-variant(0px,$border-width,$blur,$color);
		} @else {
			@include shadow-variant(0px,$border-width,$blur,$color);
		}
    }
    @if $direction == false {
		@if $border-width < 0px {
			@include shadow-inset-variant(0px,0px,$blur,$color,$border-width);
		} @else {
			@include shadow-variant(0px,0px,$blur,$color,$border-width);
		}
    }
    @if $direction == inset {
		@if $border-width < 0px {
			@include shadow-variant(0px,0px,$blur,$color,$border-width);
		} @else {
			@include shadow-inset-variant(0px,0px,$blur,$color,$border-width);
		}

    }
}

@mixin hr-variant($color:gray,$width:1px){
	display:block;
	height:$width;
	margin:0;
	padding:0;
	border-width:0;
	background-color:$color;
	@content;
}

@mixin break-variant($height:10px,$margin:5px,$color:gray,$line-width:1px){
    @include inline-block;
    vertical-align:middle;
    height:20px;
    width:$line-width;
    height:$height;
    margin-left:$margin;
    margin-right:$margin;
    background-color:$color;
}

@mixin clip-path-variant($clip-path){
	//shape-padding:0px;
	//shape-inside:$clip-path;
	-webkit-clip-path:$clip-path;
	clip-path:$clip-path;
}

@mixin inner-image-variant($url:false,$icon-align:left,$icon-offset:false,$icon-offset2:false) {
	background-image:$url;
	background-repeat:no-repeat;
	@if $icon-align == left {
		@if $icon-offset {
			$apply-offset:left #{$icon-offset} !global;
		} @else {
			$apply-offset:left !global;
		}
		@if $icon-offset2 {
			$apply-offset2:center #{$icon-offset2};
		} @else {
			$apply-offset2:center;
		}
		background-position:#{$apply-offset} #{$apply-offset2};
	}
	@if $icon-align == right {
		@if $icon-offset {
			$apply-offset:right #{$icon-offset} !global;
		} @else {
			$apply-offset:right !global;
		}
		@if $icon-offset2 {
			$apply-offset2:center #{$icon-offset2} !global;
		} @else {
			$apply-offset2:center !global;
		}
		background-position:#{$apply-offset} #{$apply-offset2};
	}
	@if $icon-align == top {
		@if $icon-offset2 {
			$apply-offset:center #{$icon-offset} !global;
		} @else {
			$apply-offset:center !global;
		}
		@if $icon-offset {
			$apply-offset2:top #{$icon-offset2} !global;
		} @else {
			$apply-offset2:top !global;
		}
		background-position:#{$apply-offset} #{$apply-offset2};
	}
	@if $icon-align == bottom {
		@if $icon-offset2 {
			$apply-offset:center #{$icon-offset2} !global;
		} @else {
			$apply-offset:center !global;
		}
		@if $icon-offset {
			$apply-offset2:bottom #{$icon-offset} !global;
		} @else {
			$apply-offset2:bottom !global;
		}
		background-position:#{$apply-offset} #{$apply-offset2};
	}
	@if $icon-align == center {
		@if $icon-offset {
			$apply-offset:center #{$icon-offset} !global;
		} @else {
			$apply-offset:center !global;
		}
		@if $icon-offset2 {
			$apply-offset2:center #{$icon-offset2} !global;
		} @else {
			$apply-offset2:center !global;
		}
		background-position:#{$apply-offset} #{$apply-offset2};
	}

	@content;
}

@mixin outer-image-variant($url:false,$icon-align:left,$icon-size:false,$icon-offset:false,$icon-offset2:false){
	@include inner-image-variant($url,$icon-align,$icon-offset,$icon-offset2);
	@if $icon-align == left {
		@if $icon-size {
			@if $icon-offset {
				padding-left:$icon-size + $icon-offset;
			} @else {
				padding-left:$icon-size;
			}
		}
	}
	@if $icon-align == right {
		@if $icon-size {
			@if $icon-offset {
				padding-right:$icon-size + $icon-offset;
			} @else {
				padding-right:$icon-size;
			}
		}
	}
	@if $icon-align == top {
		@if $icon-size {
			@if $icon-offset {
				padding-top:$icon-size + $icon-offset;
			} @else {
				padding-top:$icon-size;
			}
		}
	}
	@if $icon-align == bottom {
		@if $icon-size {
			@if $icon-offset {
				padding-bottom:$icon-size + $icon-offset;
			} @else {
				padding-bottom:$icon-size;
			}
		}
	}
	@content;
}

@mixin icon-variant($url:false,$icon-width:auto,$icon-height:auto,$icon-position:false,$icon-size:false){
    @include inline-block;
    background-image:$url;
	background-repeat:no-repeat;
	@if $icon-position {
		background-position:$icon-position;
	} @else {
		background-position:left center;
	}
    padding-left:$icon-width;
    min-width:$icon-width;
	min-height:$icon-height;
	@if $icon-size != false {
		background-size:$icon-size;
	}
	//with content
	@content;
}

@mixin icon-right-variant($url:false,$icon-width:auto,$icon-height:auto,$icon-position:false,$icon-size:false){
    @include inline-block;
    background:$url;
	background-repeat:no-repeat;
	@if $icon-position {
		background-position:$icon-position;
	} @else {
		background-position:right center;
	}
    padding-right:$icon-width;
    min-width:$icon-width;
    min-height:$icon-height;
	@if $icon-size != false {
		background-size:$icon-size;
	}
	//with content
	@content;
}

@mixin icon-top-variant($url:false,$icon-width:auto,$icon-height:auto,$icon-top:top){
    @include inline-block;
    background:$url;
	background-repeat:no-repeat;
    background-position:center $icon-top;
    padding-top:$icon-height;
    width:$icon-width;
    min-height:$icon-height;
    text-align:center;
	//with content
	@content;
}

@mixin presudo-variant($width:false,$height:false,$content:"",$vertical-align:false){
	content:$content;
	@if type_of($content) == "string" {
		@include inline-block($width,$height,$vertical-align or middle);
	} @else {
		@include inline-block($width,$height,$vertical-align);
	}
	@content;
}

@mixin content-variant($content:"",$width:false,$height:false,$vertical-align:false){
	@include presudo-variant($width,$height,$content,$vertical-align);
	@content;
}

@mixin list-variant($list-style:none,$list-style-position:inside){
    margin:0px;
    padding:0px;
	> li{
        margin:0px;
        @if $list-style {
            list-style:$list-style;
        }
		@if $list-style-position {
			list-style-position:$list-style-position;
		}
    }
	@content;
}

//table cell에 의해 테이블 크기가 결정됩니다.
@mixin cellbase-table-variant($spacing:0px,$table-width:false,$table-layout:auto) {
    display:table;
    @if $table-width { width:$table-width; }
    table-layout:$table-layout;
    @if $spacing > 0px {
        border-spacing:$spacing;
        border-collapse:separate;
    } @else {
        border-spacing:0px;
        border-collapse:collapse;
    }
	@content;
}
//table 크기안에서 셀크기가 결정됩니다.
@mixin fixed-table-variant($spacing:0px,$width:100%) { @include cellbase-table-variant($spacing,$width,fixed); @content; }
@mixin table-variant($spacing:0px,$width:100%) { @include cellbase-table-variant($spacing,$width,fixed); @content; }

@mixin border-radius($dirction,$radius){
	@if $dirction == "top" {
	    border-top-right-radius: $radius;
	     border-top-left-radius: $radius;
	}
	@if $dirction == "right" {
	    border-bottom-right-radius: $radius;
	       border-top-right-radius: $radius;
	}
	@if $dirction == "bottom" {
	    border-bottom-right-radius: $radius;
	     border-bottom-left-radius: $radius;
	}
	@if $dirction == "left" {
	    border-bottom-left-radius: $radius;
	       border-top-left-radius: $radius;
	}
}

@mixin block-variant($width:false,$height:false,$vertical-align:middle,$align-block:false){
	@if $align-block {
		@include block($width,$height,$align-block);
	} @else {
		@include inline-block($width,$height,$vertical-align);
	}
	@content;
}

@mixin label-variant($width:false,$height:false,$ellipsis:true){
	@include inline-block($width,$height);
	@if $ellipsis == true {
		@include ellipsis-variant(true);
	}
	@if $height {
		line-height:$height;
	}
	@content;
}

@mixin circle-variant($diameter){
	width:$diameter;
	height:$diameter;
	line-height:$diameter;
	border-radius:($diameter / 2);
	@content;
}

@mixin badge-variant($width:false,$height:false,$radius:false,$wordwrap:false,$fix-width:false){
	@if $fix-width == true {
		@include inline-block($width,$height);
	} @else {
		@include inline-block(false,$height);
		min-width:$width;
	}

	@if $radius == true {
		@if $height {
			border-radius:($height / 2);
		} @else {
			border-radius:50%;
		}
	} @else if (type-of($radius) == number){
		border-radius:$radius;
	}

	@include word-wrap-variant($wordwrap,visible);

	@if $height {
		line-height:$height;
	}
	text-align:center;
	@content;
}

@mixin anchor-variant($width:false,$height:false,$vertical-align:middle,$align-block:false){
	@include block-variant($width,$height,$vertical-align,$align-block);
	@if $height {
		line-height:$height;
	}
    cursor:pointer;
    text-decoration:inherit;
    &:hover { text-decoration:inherit;color:inherit; }
	@content;
}

@mixin reset-block-variant($width:false,$height:false,$vertical-align:middle,$align-block:false){
	@include block-variant($width,$height,$vertical-align,$align-block);
	margin:0;
	padding:0;
	> * {
		vertical-align:middle;
	}
	@content;
}

@mixin image-text-variant($url,$width:false,$height:false,$position-x:left,$position-y:center){
	@include label-variant($width,$height);
	@include background-image-variant($url,$position-x,$position-y);
    text-indent:-99999px;
	@content;
}

@mixin nody-button-base($appearance-flag:false) {
	@if $appearance-flag == false {
		@include appearance-variant(false);
		border:none;
	}
	@if $appearance-flag == true {
		@include appearance-variant(button);
	}
	cursor:pointer;
	text-align:center;
	@include user-select-variant(false);
	//TODO:TEST ellpisis and  visible
	@include ellipsis-variant(true,visible);
    &:hover{ text-decoration:none; };
    &:active{ text-decoration:none; };
}

@mixin link-variant(){
	background-color:transparent;
	border-color:transparent;
	text-decoration:none;
	@include ellipsis-variant(true,visible);
	&:hover {
		text-decoration:underline;
	}
	@content;
}

@mixin button-variant($width:false,$height:false,$vertical-align:middle,$align-block:false){
	@include nody-button-base;
	@include reset-block-variant($width,$height,$vertical-align,$align-block);
	@if $height {
		line-height:$height;
	} @else {
		line-height:100%;
	}
	@content;
}

//nok
@mixin image-button-variant($url,$width:false,$height:false,$vertical-align:middle,$align-block:false){
	@include nody-button-base;
	@include block-variant($width,$height,$vertical-align,$align-block);
	background-image:$url;
	background-repeat:no-repeat;
    background-position:center center;
    text-indent:-99999px;
	@content;
}

@mixin input-variant($width:false,$height:false,$vertical-align:middle,$align-block:false){
	@include reset-block-variant($width,$height,$vertical-align,$align-block);
	padding:0 10px;
	//webkit cursor fix
	line-height:100%;
	@content;
}

@mixin position-variant($axis:false,$width:auto,$height:auto,$offset-x:false,$offset-y:false){
    position: absolute;
    @if $offset-x == false { $offset-x : 0; }
    @if $offset-y == false { $offset-y : 0; }
    @if $axis == left {
        left: $offset-x;
        top: $offset-y;
        @if $height == false or $height == auto {
            bottom: 0;
        }
    } @else if $axis == right {
        right: -$offset-x;
        top: $offset-y;
        @if $height == false or $height == auto {
            bottom: 0;
        }
    } @else if $axis == top {
        left: $offset-x;
        top: $offset-y;
        @if $width == false or $width == auto {
            right: 0;
        }
    } @else if $axis == bottom {
        left: $offset-x;
        bottom: -$offset-y;
        @if $width == false or $width == auto {
            right: 0;
        }
    } @else {
        top: $offset-x;
        left: $offset-y;
        @if $height == false or $height == auto {
            bottom: -$offset-y;
        }
        @if $width == false or $width== auto {
            right: -$offset-x;
        }
    }
    @if $width { width:$width; }
    @if $height { height:$height; }
}
//test not complete
@mixin outside-position-variant($side,$start,$width,$height,$offset-x:false,$offset-y:false){
    position: absolute;
    @if $offset-x == false { $offset-x : 0px; }
    @if $offset-y == false { $offset-y : 0px; }
	//side
    @if $side == left {
		left: (-$width + $offset-x);
    } @else if $side == right {
		right: (-$width - $offset-x);
    } @else if $side == top {
		top: (-$height + $offset-y);
    } @else if $side == bottom {
        bottom: (-$height - $offset-y);;
    }
	//start position
	@if $side == left or $side == right {
		@if $start == bottom {
			bottom:(0px - $height - $offset-y);
			top:auto;
			@include translateY(0%);
		} @else if $start == center {
			@if $offset-y != 0px {
				@include css3v(top,calc(50% + #{$offset-y}));
			} @else {
				top:50%;
			}
			@include translateY(-50%);
		} @else {
			@if $offset-y != 0px {
				@include css3v(top,calc(0% - #{$offset-y}),0%);
			} @else {
				top:0%;
			}
			@include translateY(0%);
		}
	}
	@if $side == top or $side == bottom {
		@if $start == right {
			right:(0px - $offset-x);
		} @else if $start == center {
			@if $offset-x != 0px {
				@include css3v(left,calc(50% + #{$offset-y}));
			} @else {
				left:50%;
			}
			@include translateX(-50%);
		} @else {
			@if $offset-x != 0px {
				@include css3v(left,calc(0% - #{$offset-y}));
			} @else {
				left:0%;
			}
			@include translateX(0%);
		}
	}
	width:$width;
	height:$height;
}

@mixin svg-parent-variant($width,$height:false) {
	@if $width == left or $width == false{
		svg {
			max-width:auto;
			max-height:auto;
			@if $width == left or $width == false {
				top:0;
				left:0;
				@include translate(0px,0px);
			}
		}
	} @else {
		@include centered-frame-variant(svg,$width,$height){
			svg {
				max-width:100%;
				max-height:100%;
			}
			@content;
		};
	}
}

@mixin placeholder-variant {
	&::-webkit-input-placeholder { /* WebKit browsers */
		@content;
	}
	&:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
		opacity:  1;
		@content;
	}
	&::-moz-placeholder { /* Mozilla Firefox 19+ */
		opacity:  1;
		@content;
	}
	&:-ms-input-placeholder { /* Internet Explorer 10+ */
		@content;
	}
	&:placeholder-shown {
		@content;
	}
}

@mixin scrollbar-width-variant($width:17px) {
	-webkit-overflow-scrolling:touch;
	&::-webkit-scrollbar {
	    width: $width;
		height:$width;
	}
	&::-webkit-scrollbar-thumb {
		border-radius:$width;
	}
}

@mixin scrollbar-variant($thumb:false,$track:white,$hover:#e6e6e6,$width:17px,$radius:2px) {
	@if $thumb == false {
		$thumb:#eee;
	}
	
	// ms scroll bar 
	-ms-overflow-style: scrollbar;
	scrollbar-base-color: $track;
	scrollbar-arrow-color: $thumb;

	// webkit scroll bar
	@include scrollbar-width-variant($width);
	
	&::-webkit-scrollbar-track {
	    background-color:$track;
	}
	@if $thumb == auto {
		&::-webkit-scrollbar-thumb {
			background-color:transparent;
			margin:2px;
			border:2px solid $track;
			border-radius:$radius;
		}
		&:hover {
			&::-webkit-scrollbar-thumb {
				background-color:$hover;
			}
		}
	} @else {
		&::-webkit-scrollbar-thumb {
			background-color:$thumb;
			border:2px solid $track;
			border-radius:$radius;
		}
	}
	&::-webkit-scrollbar-thumb:hover {
	    background-color:$hover;
	}
}

@mixin screen-variant {
	@include scrollbar-variant;
	max-width:100%;
	max-height:100%;
	overflow:auto;
	width:100%;
	height:100%;
	@content;
}

@mixin arrow-variant($direction:left,$arrow-size:10px,$arrow-color:#ccc,$arrow-length:false){
	border-style:solid;
    width :0;
    height:0;
    @if $arrow-length == false{
        $arrow-length:$arrow-size;
    }
	@if $direction == left {
	    border-width: #{$arrow-size / 2} $arrow-length #{$arrow-size / 2} 0;
	    border-color: transparent $arrow-color transparent transparent;
	}
	@if $direction == right {
	    border-width: #{$arrow-size / 2} 0 #{$arrow-size / 2} $arrow-length;
	    border-color: transparent transparent transparent $arrow-color;
	}
	@if $direction == top or $direction == up {
	    border-width: 0 #{$arrow-size / 2} $arrow-length #{$arrow-size / 2};
	    border-color: transparent transparent $arrow-color transparent;
	}
	@if $direction == bottom or $direction == down {
	    border-width: $arrow-length #{$arrow-size / 2} 0 #{$arrow-size / 2};
	    border-color: $arrow-color transparent transparent transparent;
	}
	@content;
}

@mixin media-over-width($over:false, $addition-queries:false) {
	@if $over {
		$query:"(min-width: #{$over})";

		@if $addition-queries {
			$query:($addition-queries + " and " + $query);
		}

		@media #{$query} {
			@content;
		}
	}
}

@mixin media-less-width($less:false, $addition-queries:false) {
	@if $less {
		$query:"(max-width: #{$less - 1})";

		@if $addition-queries {
			$query:($addition-queries + " and " + $query);
		}

		@media #{$query} {
			@content;
		}
	}
}
@mixin media-not-over-width($over:false, $addition-queries:false) {
	@if $over {
		$query:"(min-width: #{$over})";

		@if $addition-queries {
			$query:($addition-queries + " and " + $query);
		}

		@media not all and #{$query} {
			@content;
		}
	}
}
@mixin media-not-less-width($less:false, $addition-queries:false) {
	@if $less {
		$query:"(max-width: #{$less - 1})";

		@if $addition-queries {
			$query:($addition-queries + " and " + $query);
		}

		@media not all and #{$query} {
			@content;
		}
	}
}
@mixin media-inner-width($less:false, $over:false, $addition-queries:false) {
	@if $less and $over {
		$query:"(min-width: #{$less - 1}) and (max-width: #{$over})";

		@if $addition-queries {
			$query:($addition-queries + " and " + $query);
		}

		@media #{$query} {
			@content;
		}
	}
}
@mixin media-outer-width($less:false, $over:false, $addition-queries:false) {
	@if $less and $over {
		$query:"(min-width: #{$less - 1}) and (max-width: #{$over})";

		@if $addition-queries {
			$query:($addition-queries + " and " + $query);
		}

		@media not all and #{$query} {
			@content;
		}
	}
}
@mixin media-over-height($over:false, $addition-queries:false) {
	@if $over {
		$query:"(min-height: #{$over})";

		@if $addition-queries {
			$query:($addition-queries + " and " + $query);
		}

		@media #{$query} {
			@content;
		}
	}
}
@mixin media-less-height($less:false, $addition-queries:false) {
	@if $less {
		$query:"(max-height: #{$less - 1})";

		@if $addition-queries {
			$query:($addition-queries + " and " + $query);
		}

		@media #{$query} {
			@content;
		}
	}
}
@mixin media-inner-height($less:false, $over:false, $addition-queries:false) {
	@if $less and $over {
		$query:"(min-height: #{$less - 1}) and (max-height: #{$over})";

		@if $addition-queries {
			$query:($addition-queries + " and " + $query);
		}

		@media #{$query} {
			@content;
		}
	}
}
//coding style helper
@mixin media-default($ratio:false) {
	@if $ratio {
		@media (-webkit-min-device-pixel-ratio:#{$ratio}), (min-resolution: #{96 * $ratio}dpi) {
			@content;
		}
	} @else {
		@content;
	}
}
@mixin media-mobile-portrait($ratio:false) {
	@if $ratio {
		@include media-less-width($codykit-mobile-landscape-width,"(-webkit-min-device-pixel-ratio:#{$ratio}) and (min-resolution: #{96 * $ratio}dpi)"){ @content; };
	} @else {
		@include media-less-width($codykit-mobile-landscape-width){ @content; };
	}
}
@mixin media-mobile-landscape($ratio:false) {
	@if $ratio {
		@include media-inner-width($codykit-mobile-landscape-width,$codykit-tablet-width,"(-webkit-min-device-pixel-ratio:#{$ratio}) and (min-resolution: #{96 * $ratio}dpi)"){ @content; };
	} @else {
		@include media-inner-width($codykit-mobile-landscape-width,$codykit-tablet-width){ @content; };
	}
}
@mixin media-mobile($ratio:false) {
	@if $ratio {
		@include media-less-width($codykit-tablet-width,"(-webkit-min-device-pixel-ratio:#{$ratio}) and (min-resolution: #{96 * $ratio}dpi)"){ @content; };
	} @else {
		@include media-less-width($codykit-tablet-width){ @content; };
	}
}
@mixin media-mobile-gt($ratio:false) {
	@if $ratio {
		@include media-over-width($codykit-tablet-width,"(-webkit-min-device-pixel-ratio:#{$ratio}) and (min-resolution: #{96 * $ratio}dpi)"){ @content; };
	} @else {
		@include media-over-width($codykit-tablet-width){ @content; };
	}
}
@mixin media-tablet-portrait($ratio:false) {
	@if $ratio {
		@include media-inner-width($codykit-tablet-width,$codykit-tablet-landscape-width,"(-webkit-min-device-pixel-ratio:#{$ratio}) and (min-resolution: #{96 * $ratio}dpi)"){ @content; };
	} @else {
		@include media-inner-width($codykit-tablet-width,$codykit-tablet-landscape-width){ @content; };
	}
}
@mixin media-tablet-landscape($ratio:false) {
	@if $ratio {
		@include media-inner-width($codykit-tablet-landscape-width,"(-webkit-min-device-pixel-ratio:#{$ratio}) and (min-resolution: #{96 * $ratio}dpi)"){ @content; };
	} @else {
		@include media-inner-width($codykit-tablet-landscape-width,$codykit-desktop-width){ @content; };
	}
}
@mixin media-tablet($ratio:false) {
	@if $ratio {
		@include media-inner-width($codykit-tablet-width,$codykit-desktop-width,"(-webkit-min-device-pixel-ratio:#{$ratio}) and (min-resolution: #{96 * $ratio}dpi)"){ @content; };
	} @else {
		@include media-inner-width($codykit-tablet-width,$codykit-desktop-width){ @content; };
	}
}
@mixin media-tablet-portrait-gt($ratio:false) {
	@if $ratio {
		@include media-over-width($codykit-tablet-landscape-width,"(-webkit-min-device-pixel-ratio:#{$ratio}) and (min-resolution: #{96 * $ratio}dpi)"){ @content; };
	} @else {
		@include media-over-width($codykit-tablet-landscape-width){ @content; };
	}
}
@mixin media-tablet-landscape-lt($ratio:false) {
	@if $ratio {
		   @include media-less-width($codykit-tablet-landscape-width,"(-webkit-min-device-pixel-ratio:#{$ratio}) and (min-resolution: #{96 * $ratio}dpi)"){ @content; };
	} @else {
		   @include media-less-width($codykit-tablet-landscape-width){ @content; };
	}
}
@mixin media-desktop($ratio:false) {
	@if $ratio {
		@include media-over-width($codykit-desktop-width,"(-webkit-min-device-pixel-ratio:#{$ratio}) and (min-resolution: #{96 * $ratio}dpi)"){ @content; };
	} @else {
		@include media-over-width($codykit-desktop-width){ @content; };
	}
}
@mixin media-desktop-lt($ratio:false) {
	@if $ratio {
		@include media-less-width($codykit-desktop-width,"(-webkit-min-device-pixel-ratio:#{$ratio}) and (min-resolution: #{96 * $ratio}dpi)"){ @content; };
	} @else {
		@include media-less-width($codykit-desktop-width){ @content; };
	}
}
@mixin media-desktop-wide($ratio:false) {
	@if $ratio {
		@include media-over-width($codykit-desktop-landscape-width,"(-webkit-min-device-pixel-ratio:#{$ratio}) and (min-resolution: #{96 * $ratio}dpi)"){ @content; };
	} @else {
		@include media-over-width($codykit-desktop-landscape-width){ @content; };
	}
}
@mixin media-desktop-wide-lt($ratio:false) {
	@if $ratio {
		@include media-less-width($codykit-desktop-landscape-width,"(-webkit-min-device-pixel-ratio:#{$ratio}) and (min-resolution: #{96 * $ratio}dpi)"){ @content; };
	} @else {
		@include media-less-width($codykit-desktop-landscape-width){ @content; };
	}
}
@mixin pt-variant($photoshop-pt:0, $origin:72){
    font-size:(($photoshop-pt / $origin) * 96)px;
}
@mixin scroll-y-variant($overflow:auto) {
    @if $overflow == true or $overflow == auto or $overflow == scroll{
        overflow-y:$overflow;
		-webkit-overflow-scrolling:touch;
		-ms-overflow-style:scroll;
        overflow-scrolling:touch;
    } @else {
        overflow-y:hidden;
		-webkit-overflow-scrolling:none;
		-ms-overflow-style:none;
        overflow-scrolling:none;
    }
}
@mixin scroll-x-variant($overflow:auto) {
    @if $overflow == true or $overflow == auto or $overflow == scroll{
        overflow-x:$overflow;
		-webkit-overflow-scrolling:touch;
		-ms-overflow-style:scroll;
        overflow-scrolling:touch;

    } @else if $overflow == false {
        overflow-x:hidden;
		-webkit-overflow-scrolling:none;
		-ms-overflow-style:none;
        overflow-scrolling:none;
    }
}
@mixin scroll-variant($y:auto,$x:false) {
    @include scroll-x-variant($x);
    @include scroll-y-variant($y);
}
@mixin grab-variant {
    cursor: -webkit-grab;
    cursor: -moz-grab;
    &:active {
        cursor: -webkit-grabbing;
        cursor: -moz-grabbing;
    }
}
@mixin response-section($response-horizental-padding:10px,$response-vertical-padding:0px,$response-outer-margin:0px){
	@include clearfix;
	display:block;
	width:auto;
	box-sizing:border-box !important;
	margin-left: -($response-horizental-padding/2);
	margin-right: -($response-horizental-padding/2);
	padding-left:$response-outer-margin;
	padding-right:$response-outer-margin;
	$response-horizental-padding:$response-horizental-padding !global;
	$response-vertical-padding:$response-vertical-padding !global;
	//margin-top:-$response-vertical-padding;

	@if $response-vertical-padding != 0px {
		margin-bottom:-$response-vertical-padding !important;
	} @else {
		margin-bottom:$response-vertical-padding;
	}

	@content;
}
@mixin response-column($width:auto,$height:false){
	position:relative;
	display:block;
	float:left;
	list-style:none;
	box-sizing:border-box !important;
	min-height:1px;
	width:$width;
	@if $height {
		height:$height;
	}
	margin-left:0;
	margin-right:0;
	padding-left: ($response-horizental-padding / 2);
	padding-right: ($response-horizental-padding / 2);

	@if $response-vertical-padding != 0px {
		margin-bottom:$response-vertical-padding !important;
	} @else {
		margin-bottom:$response-vertical-padding;
	}

	@content;
}
@mixin response-content{
	margin:0 auto;
	width:100%;
	height:100%;
}
@mixin columns-section($gap:10px,$count:1){
	-webkit-column-gap: $gap;
	-moz-column-gap: $gap;
	column-gap: $gap;

	//column-width:$min-width;

	-webkit-column-count: $count;
	-moz-column-count: $count;
	column-count: $count;
}
@mixin columns-item(){
	@include inline-block(100%);
	-webkit-column-break-inside:avoid;
	-moz-column-break-inside:avoid;
	column-break-inside: avoid;
}

@mixin response-column-count($count:1,$main-content:false){
	@include response-column( (100% / $count) ,$main-content){
		@content;
	}
}
@mixin codykit-box-sizing($target:"*") {
    #{$target}{
        &,&:before,&:after {
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
        }
    }
}
@mixin codykit-font-smooth($target:"html,body") {
    #{$target}{
        text-rendering: optimizeLegibility;
        -webkit-font-smoothing: antialiased;
        font-smoothing: antialiased;
        font-smooth: always;
		//-webkit-text-stroke: 0.1px;
    }
}
@mixin codykit-text-basic($vertical-align:middle) {
	@if $vertical-align == false {
		$vertical-align:baseline;
	}
	//block text
    h1,h2,h3,h4,h5,h6,p {
		margin:0px;
		font-size:inherit;
		vertical-align:$vertical-align;
	}
	//inline text
    img {
		vertical-align:$vertical-align;
    }
    span, tt, code, kbd, samp, var, em, s, q, b, strong, cite, dfn, i, time, mark, address {
        display:inline;
        font-family:inherit;
        font-style: inherit;
		color:inherit;
        text-decoration:inherit;
        font-weight:inherit;
        padding:0;
        margin:0;
		//test
		//vertical-align:$vertical-align;
		//vertical-align:inherit;
		&:after, &:before {
			content:none;
		};
    }

	*:after, *:before { vertical-align:baseline; };

	a {
        display:inline;
        font-family:inherit;
        font-style: inherit;
		color:inherit;
        font-weight:inherit;
		cursor:pointer;
		vertical-align:$vertical-align;
	}
}

@mixin codykit-document-basic($min-width:false) {
	/* codykit-document-basic -- start */
    html,body {
		position:relative;
        margin:0px;
        padding:0px;
		@if $min-width == false {
			min-width:320px;
		} @else {
			min-width:$min-width;
		}
		font-family: Sans-Serif;
    }
    img {
        border:none;
    }
    section, article, header, footer, aside, details, summary, dialog, figcaption, figure, hgroup, main, nav, command, fieldset {
        display:block;
		margin:0;
    }
	section, article, header, footer, aside {
		position:relative;
	}
	//chrome user agent styleseet fix
	dialog {
		position:static;
		width:auto;
		height:auto;
		margin:initial;
		padding:initial;
		border:none;
		background-color:white;
	}

    audio,canvas,progress,video {
        @include inline-block;
		margin:0;
    }
	script, style, template, .hidden, [hidden] {
		display:none !important;
	}
	[disabled] {
		@include disabled-variant;
	}
    input,button,select,textarea {
        font-family: inherit;  font-size: inherit;
    }
	input,button,select {
		@include inline-block;
	}
	ul, menu, ol {
		display:block;
		padding:0;
		margin:0;
		> li {
			list-style-position:inside;
		}
	}
	ol {
		> li {
			list-style-type:decimal;
		}
	}
	menu > li {
		list-style:none;
		cursor:pointer;
	}
	dl,dd,dt {
		margin:0;
		text-indent:0;
	}
    label {
        cursor:inherit;
    }
	.no-transition {
		transition-duration:0.001s !important;
		transition-delay:0.001s !important;
		*, *:before, *:after {
			transition-duration:0.001s !important;
			transition-delay:0.001s !important;
		}
	}
	.no-animation {
		-webkit-animation-duration:0.001s !important;
		animation-duration:0.001s !important;
		*, *:before, *:after {
			-webkit-animation-duration:0.001s !important;
			animation-duration:0.001s !important;
		}
	}
	table {
		@include table-variant;
		td,th{
			font-weight:normal;
			padding:0;
			vertical-align:middle;
			word-break:break-all;
		}
	}
	[media-only~="mobile"]{
		@include media-mobile-gt {
			display:none !important;
		}

	}
	[media-only~="tablet"]{
		@include media-outer-width($codykit-tablet-width,$codykit-desktop-width){
			display:none !important;
		}
	}
	[media-only~="desktop"]{
		@include media-desktop-lt {
			display:none !important;
		}
	}
	[media-not~="mobile"]{
		@include media-mobile {
			display:none !important;
		}
	}
	[media-not~="tablet"]{
		@include media-tablet {
			display:none !important;
		}
	}
	[media-not~="desktop"]{
		@include media-desktop {
			display:none !important;
		}
	}
	/* codykit-document-basic -- end */
}
@mixin modal-variant($background-color:rgba(0,0,0,0.65)) {
    -ms-overflow-style: none;
    position: fixed;
    top: 0;
    right: -18px;
    bottom: 0;
    left: -18px;
    z-index: 10000;
    display: none;
    overflow: hidden;
    outline: 0;
	background-color:$background-color;
	-webkit-overflow-scrolling: touch;
    &::-webkit-scrollbar {
        width: 0 !important;
    }
    &.open-modal, &[open] {
        overflow-x: hidden;
        overflow-y: auto;
        display: block;
    }
}
@mixin dialog-variant($width:50%,$height:auto,$top:50px) {
    position: relative;
    margin: $top auto;
    width: $width;
	height:$height;
	background-color:white;
}
@mixin codykit-block-variant {
    display:block;
	margin:0;
	width:auto;
	position:relative;
}
@mixin codykit-inlineblock-variant {
	@include inline-block;
	@include word-wrap-variant(false,visible);
	position:relative;
	margin:0;
}
@mixin codykit-hidden-block-variant {
    display:none;
	&.active, &[active], &[ng-switch-when], &[ng-switch-default], &[ng-if], &[ng-show], &[ng-hide], &[todo] {
		display:block;
	}
}
@mixin codykit-media-trace {
	body {
		&:after {
			content:"media trace";
			position:fixed;
			display:block;
			right:0;
			bottom:0;
			background-color:black;
			color:black;
			padding:3px 5px;
			z-index:10000;
			@include media-mobile {
				content:("media-mobile (portrait) [ lt" + $codykit-mobile-landscape-width + "]");
				background-color:#ffeda0;
			}
			@include media-mobile-landscape {
				content:("media-mobile (landscape) [" $codykit-mobile-landscape-width + " ~ " + $codykit-tablet-width + "]");
				background-color:#feb24c;
			}
			@include media-tablet {
				content:("media-tablet (portrait) [" + $codykit-tablet-width + " ~ " + $codykit-tablet-landscape-width + "]");
				background-color:#addd8e;

			}
			@include media-tablet-landscape {
				content:("media-tablet (landscape) [" + $codykit-tablet-landscape-width + "~" + $codykit-desktop-width + "]");
				background-color:#31a354;
			}
			@include media-desktop {
				content:("media-desktop (normal) [ gt " + $codykit-desktop-width + "]");
				background-color:#7fcdbb;
			}
			@include media-desktop-wide {
				content:("media-desktop (wide) [ gt " + $codykit-desktop-landscape-width + "]");
				background-color:#bcbddc;
			}
		}
	}
}
@mixin codykit-extend-tag($custom-block-elements:false,$custom-inlineblock-elements:false,$codykit-setup:false){
	@if $codykit-setup {
		//content : header,footer외의 컨텐츠 요소의 부족한 정의 보충
		//frieze : 섹션이나 컨텐츠의 동질적이거나 연속적인 구간을 나누기 위한 장식 또는 구간
		//bar   : 섹션의 유틸리티 그룹
		//inventory : deck이나 item의 집합
		//sign   : 내용이 없는 시각적인 컨텐츠
		//context : 필요에 의해 위치가 변경되는 그룹
		//controls : input과 같은 폼컨트롤러 집합
		//part : 조립 가능한 부분적이고 반복적인 '스타일요소'
		//band : 여러 태그 단위를 하나로 묶는 역할
		//cover : 단지 스타일을 위한 껍데기를 나타내는 태그
		//item  : 하나의 모델에 대한 아이템
		//detail  : 평소에 보이지 않다가 특정상황에 사용자에게 제공되는 부가적인 내용
		//message : 평소에 보이지 않다가 특정상황에 사용자에게 강조하는 부가적인 내용

		content,cover,frieze,bar,group,context,controls,inventory,flow,item,part,message,band,sign,switch,case,modal,detail,screen,noscreen,nocontent {
			@include codykit-block-variant;
		}

		detail {
			display:none;
		}

		message {
			@include codykit-hidden-block-variant;
		}

		detail {
			@include codykit-hidden-block-variant;
		}

		[open] > detail {
			display:block;
		}

		tab {
			@include list-variant;
			@include clearfix;
			> li {
				cursor:pointer;
			}
		}

		switch {
			> case {
				@include codykit-hidden-block-variant;
			}
		}

		modal {
			@include modal-variant;

		}

		screen {
			@include screen-variant;
		}

		noscreen {
			padding-right:17px;
			+ screen {
				overflow-y:scroll;
			}
			html.msie &{
				padding-right:17px;
			}
		}

		nocontent {
			display:none;
			text-align:center;
			overflow:hidden;
			width:0%;
			height:0%;
			tbody:empty + &, content:empty + &, &[ng-switch-when], &[ng-switch-default], &[ng-if], &[ng-show], &[ng-hide], &.active, &[todo] {
				display:block;
				width:100%;
				height:auto;
			}
		}

		// format : inline-text-group
		badge,unit,om{
			@include codykit-inlineblock-variant;
		}
		
		format {
			> * {
				@include inline-block;
			}
		}
		badge {
			text-align:center;
		}
		//omission text
		om {
			@include omission-variant(100%);
		}
	}

	@if $custom-block-elements {
		#{$custom-block-elements} {
	        @include codykit-block-variant;
	    }
	}

	@if $custom-inlineblock-elements {
		#{$custom-inlineblock-elements} {
			@include codykit-inlineblock-variant;
		}
	}
}
@mixin codykit-document-basic-config($hack:true, $min-width:false, $font-smooth:false){
    @include codykit-document-basic($min-width);
    @include codykit-text-basic;
    @include codykit-box-sizing;
	@include codykit-extend-tag(false,false,true);
    $codykit-hack:$hack !global;
	@if $font-smooth == true {
		@include codykit-font-smooth;
	}
}
//deprecated
@mixin codykit-document-basic-all($hack:true, $min-width:false) {
	@include codykit-document-basic-config($hack,$min-width);
}
//deprecated
@mixin codykit-document-basic-advence($hack:true, $min-width:false, $font-smooth:true) {
	@include codykit-document-basic-config($hack,$min-width,$font-smooth);
}
@mixin codykit-document-fullscreen($main-wrapper:false) {
	html,body {
		@include scroll-variant(false,false);
        width:100%;
        height:100%;
		max-width:100%;
		max-height:100%;
	}
	body {
	    @if $main-wrapper {
	        #{$main-wrapper} {
				width:100%;
				height:100%;
				position:absolute;
				top:0;
				left:0;
	            overflow-x:hidden;
	            overflow-y:auto;
	        }
	    }
	}
}

@function preload-url($url){
	$codykit-preload-images:#{$codykit-preload-images} url(#{$url}) !global;
	@return url($url);
}
@mixin codykit-preload-image {
	body:after {
		content:$codykit-preload-images;
		display:block;
		visibility:hidden;
		overflow:hidden;
		height:0px;
		width:0px;
	}
}

// this is beta

@mixin flex($width:false, $height:false, $direction:row, $wrap:wrap){
	display: -webkit-flex;
	display: flex;
	@include width-height($width,$height);
	@include flex-flow-variant($direction,$wrap);
	@content;
}

@mixin inline-flex($width:false, $height:false, $direction:row, $wrap:wrap){
	display: -webkit-inline-flex;
	display: inline-flex;
	vertical-align:middle;

	@include width-height($width,$height);
	@include flex-flow-variant($direction,$wrap);
	@content;
}

@mixin flex-align($horizontal-align:center,$vertical-align:center){
	-webkit-align-items: $horizontal-align;
	align-items: $horizontal-align;
	-webkit-justify-content: $vertical-align;
	justify-content: $vertical-align;
}

@mixin flex-item($width:false,$height:false) {
	@if $width {
		//flex-grow:2;
		width:$width;
	} @else {
		//equal size in container
		flex-grow:1;
		flex-basis:0;
	}
	@if $height {
		height:$height;
	}
	flex-shrink:1;
	@content;
}

@mixin flex-item-count($count:1){
	@include flex-item((100% / $count),false);
	@content;
}

@mixin flex-response-section($margin:10px) {
	@include flex(false,false,row);
	$flex-response-margin:$margin !global;
	margin-left:-($flex-response-margin / 2);
	margin-right:-($flex-response-margin / 2);
	@content;
}
@mixin inline-flex-response-section($margin:10px) {
	@include inline-flex(false,false,row);
	$flex-response-margin:$margin !global;
	margin-left:-($flex-response-margin / 2);
	margin-right:-($flex-response-margin / 2);
	@content;
}

@mixin flex-response-item($width:false,$height:false){
	@include flex-item($width,$height);
	margin-left:($flex-response-margin / 2);
	margin-right:($flex-response-margin / 2);
}

@mixin flex-response-item-count($count:1) {
	@include flex-item-count($count);
	margin-left:($flex-response-margin / 2);
	margin-right:($flex-response-margin / 2);
	@content;
}

