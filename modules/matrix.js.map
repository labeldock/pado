{"version":3,"sources":["../.src/modules/matrix.js"],"names":["PlainMatrix","data","column","row","forEach","push","datum","Object","defineProperties","enumerable","value","prototype","eachColumn","eachRow","toMatrix","eachResultHook","result","undefined","index","colIndex","rowIndex","dataResult","multiply","makeMatrixArray","eachHook","matrixProto"],"mappings":";;;;;;;;;;;;;;;;;;;;AAIO,MAAMA,cAAe,YAAU;AACpC,QAAMA,cAAc,SAAdA,WAAc,CAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA2B;AAAA;;AAC7C,yBAAQF,IAAR,EAAcG,OAAd,CAAsB,iBAAO;AAAE,cAAKC,IAAL,CAAUC,KAAV;AAAmB,OAAlD;AACAC,aAAOC,gBAAP,CAAwB,IAAxB,EAA6B;AAC3BN,gBAAO;AACLO,sBAAW,KADN;AAELC,iBAAMR;AAFD,SADoB;AAK3BC,aAAI;AACFM,sBAAW,KADT;AAEFC,iBAAMP;AAFJ;AALuB,OAA7B;AAUD,KAZD;;AAcAH,gBAAYW,SAAZ,GAAwB;AACtBC,gBADsB,wBACT,CAEZ,CAHqB;AAItBC,aAJsB,qBAIZ,CAET,CANqB;AAOtBC,cAPsB,oBAOZC,cAPY,EAOG;AAAA;;AACvB,YAAMC,SAAS,EAAf;AACAD,yBAAiB,OAAOA,cAAP,KAA0B,UAA1B,GAAuCA,cAAvC,GAAwDE,SAAzE;AAEA,+BAAM,KAAKf,MAAL,GAAc,KAAKC,GAAzB,EAA6B,UAACe,KAAD,EAAS;AAAA,0BACL,oBAASA,KAAT,EAAgB,OAAKhB,MAArB,CADK;AAAA,cAC5BiB,QAD4B;AAAA,cAClBC,QADkB;;AAEpC,cAAG,CAACJ,OAAOI,QAAP,CAAJ,EAAsBJ,OAAOX,IAAP,CAAY,EAAZ;AACtB,cAAMgB,aAAaN,iBAAiBA,eAAed,IAAf,EAAoBiB,KAApB,EAA0BC,QAA1B,EAAmCC,QAAnC,CAAjB,GAAgEnB,IAAnF;AACAe,iBAAOI,QAAP,EAAiBf,IAAjB,CAAsBgB,UAAtB;AACD,SALD;AAMA,eAAOL,MAAP;AACD,OAlBqB;AAmBtBM,cAnBsB,sBAmBX,CAEV;AArBqB,KAAxB;AAwBA,WAAOtB,WAAP;AACD,GAxC0B,EAApB;;;;AA0CA,MAAMuB,kBAAkB,SAAlBA,eAAkB,CAASrB,MAAT,EAAgBC,GAAhB,EAAoBqB,QAApB,EAA6B;AAC1D,QAAMC,cAAc,uBAAMvB,SAAOC,GAAb,EAAiB,UAACe,KAAD,EAAS;AAAA,uBACb,oBAASA,KAAT,EAAgBhB,MAAhB,CADa;AAAA,UACpCiB,QADoC;AAAA,UAC1BC,QAD0B;;AAE5C,aAAOI,SAASN,KAAT,EAAgBC,QAAhB,EAA0BC,QAA1B,CAAP;AACD,KAHmB,CAApB;AAIA,WAAO,IAAIpB,WAAJ,CAAgByB,WAAhB,EAA4BvB,MAA5B,EAAmCC,GAAnC,CAAP;AACD,GANM","sourcesContent":["import { asArray } from '../functions/cast';\nimport { times } from '../functions/enumerable';\nimport { turnTime } from '../functions/nice';\n\nexport const PlainMatrix = (function(){\n  const PlainMatrix = function(data, column, row){\n    asArray(data).forEach(datum=>{ this.push(datum); });\n    Object.defineProperties(this,{\n      column:{\n        enumerable:false,\n        value:column\n      },\n      row:{\n        enumerable:false,\n        value:row\n      }\n    })\n  };\n\n  PlainMatrix.prototype = {\n    eachColumn (){\n    \n    },\n    eachRow (){\n    \n    },\n    toMatrix (eachResultHook){\n      const result = [];\n      eachResultHook = typeof eachResultHook === \"function\" ? eachResultHook : undefined;\n      \n      times(this.column * this.row,(index)=>{\n        const [ colIndex, rowIndex ] = turnTime(index, this.column);\n        if(!result[rowIndex]) result.push([]);\n        const dataResult = eachResultHook ? eachResultHook(data,index,colIndex,rowIndex) : data;\n        result[rowIndex].push(dataResult);\n      });\n      return result;\n    },\n    multiply (){\n    \n    }\n  };\n  \n  return PlainMatrix;\n})();\n\nexport const makeMatrixArray = function(column,row,eachHook){\n  const matrixProto = times(column*row,(index)=>{\n    const [ colIndex, rowIndex ] = turnTime(index, column);\n    return eachHook(index, colIndex, rowIndex);\n  });\n  return new PlainMatrix(matrixProto,column,row);\n};"],"file":"matrix.js"}