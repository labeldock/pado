{"version":3,"sources":["../.src/modules/matrix.js"],"names":["MatrixArray","data","column","row","forEach","datum","push","Object","defineProperties","enumerable","value","length","prototype","assign","toMatrix","eachResultHook","result","undefined","index","colIndex","rowIndex","dataResult","toArray","Array","from","eachColumn","eachFn","rows","columns","colData","map","eachRow","multiply","makeMatrixArray","eachHook","matrixProto","matrixArray"],"mappings":"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","sourcesContent":["import { asArray } from '../functions/cast'\nimport { times } from '../functions/enumerable'\nimport { turnTime } from '../functions/nice'\n\nexport const MatrixArray = (function (){\n  const MatrixArray = function (data, column, row){\n    asArray(data).forEach(datum=>{ this.push(datum) })\n    \n    Object.defineProperties(this, {\n      column: {\n        enumerable: false,\n        value     : column\n      },\n      row: {\n        enumerable: false,\n        value     : row\n      },\n      length: {\n        enumerable: false\n      }\n    })\n  }\n\n  MatrixArray.prototype = Object.assign([], {\n    toMatrix (eachResultHook){\n      const result = []\n      eachResultHook = typeof eachResultHook === \"function\" ? eachResultHook : undefined\n\n      times(this.column * this.row, (index)=>{\n        const [ colIndex, rowIndex ] = turnTime(index, this.column)\n        const data       = this[index]\n        const dataResult = eachResultHook ? eachResultHook(data, index, colIndex, rowIndex) : data\n        if(!result[rowIndex]) result[rowIndex] = []\n        result[rowIndex].push(dataResult)\n      })\n      \n      return result\n    },\n    toArray (){\n      return Array.from(this)\n    },\n    eachColumn (eachFn){\n      const rows = this.toMatrix()\n      const columns = times(this.column, colIndex=>{\n        const colData = []\n        rows.forEach(row=>colData.push(row[colIndex]))\n        return colData\n      })\n      \n      return typeof eachFn === \"function\" ? columns.map(eachFn) : columns\n    },\n    eachRow (eachFn){\n      const rows = this.toMatrix()\n      return typeof eachFn === \"function\" ? rows.map(eachFn) : rows\n    },\n    multiply (){\n      //TODO\n    }\n  })\n  \n  return MatrixArray\n})()\n\nexport const makeMatrixArray = function (column, row, eachHook){\n  const matrixProto = times(column * row, (index)=>{\n    const [ colIndex, rowIndex ] = turnTime(index, column)\n    return eachHook(index, colIndex, rowIndex) || [colIndex, rowIndex]\n  })\n  \n  const matrixArray = new MatrixArray(matrixProto, column, row)\n  return matrixArray\n}\n"],"file":"matrix.js"}