{"version":3,"sources":["../../packages/pado/modules/promise/promiseFunctions.js"],"names":["promisify","asyncErrCallbackfn","argumentNames","slice","promisified","args","Array","from","arguments","Promise","resolve","reject","applyParams","concat","error","callbakArgs","length","reduce","dest","name","index","apply","until","tasks","option","PromiseFunction","Error","some","e","finished","defer","limit","parseInt","taskLength","wheelTick","resetScope","nextWheelTick","tick","value","tickScope","nowAction","isActiveFn","nextTickFn","passValue","next","isActive","Math","floor","setTimeout","thenStack","abort","catchStack","deferReset","resetTick","stop","forEach","fn","promise","then","catch","start","reset","wheelControls","push","batch","funcArray","opts","concurrent","Number","POSITIVE_INFINITY","interval","repeat","sequanceTaskEntries","fill","sequanceLength","sequanceComplete","sequanceReseult","output","entry","timeout","limitOutput","operate","input","result","abortMessage","Object","defineProperty","get","notifyConsole","undefined","PromiseClass","console","warn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUO,MAAMA,SAAS,GAAG,SAAZA,SAAY,CAAUC,kBAAV,EAA6B;AACpD,QAAMC,aAAa,GAAG,2BAAgBD,kBAAhB,EAAoCE,KAApC,CAA0C,CAA1C,CAAtB;;AACA,QAAMC,WAAW,GAAK,SAAhBA,WAAgB,GAAW;AAAA;;AAC/B,UAAMC,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAWC,SAAX,CAAb;AACA,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;AACpC,YAAMC,WAAW,GAAGP,IAAI,CAACQ,MAAL,CAAY,YAAW;AAAA,4BACTP,KAAK,CAACC,IAAN,CAAWC,SAAX,CADS;AAAA,cAClCM,KADkC;AAAA,cACxBC,WADwB;;AAEzC,cAAGD,KAAH,EAAS;AACPH,YAAAA,MAAM,CAACG,KAAD,CAAN;AACD,WAFD,MAEO,IAAGZ,aAAa,CAACc,MAAd,IAAwBD,WAAW,CAACC,MAAZ,GAAqB,CAAhD,EAAkD;AACvDN,YAAAA,OAAO,CAACR,aAAa,CAACe,MAAd,CAAqB,UAACC,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAqB;AAChDF,cAAAA,IAAI,CAACC,IAAD,CAAJ,GAAaJ,WAAW,CAACK,KAAD,CAAxB;AACA,qBAAOF,IAAP;AACD,aAHO,EAGL,EAHK,CAAD,CAAP;AAID,WALM,MAKA;AACLR,YAAAA,OAAO,CAACK,WAAW,CAAC,CAAD,CAAZ,CAAP;AACD;AACF,SAZmB,CAApB;AAaAd,QAAAA,kBAAkB,CAACoB,KAAnB,CAAyB,KAAzB,EAA+BT,WAA/B;AACD,OAfM,CAAP;AAgBD,KAlBD;;AAmBA,WAAO,YAAW;AAChB,aAAOR,WAAW,CAACiB,KAAZ,CAAkB,IAAlB,EAAwBf,KAAK,CAACC,IAAN,CAAWC,SAAX,CAAxB,CAAP;AACD,KAFD;AAGD,GAxBM;;;;AA0BA,MAAMc,KAAK,GAAG,SAARA,KAAQ,CAAUC,KAAV,EAAiBC,MAAjB,EAAwB;AAC3C,QAAG,EAAED,KAAK,YAAYjB,KAAnB,CAAH,EAA6B;AAC3B,aAAOmB,iBAAgBd,MAAhB,CAAuB,IAAIe,KAAJ,CAAU,qBAAV,CAAvB,CAAP;AACD;;AAED,QAAG,CAACH,KAAK,CAACP,MAAP,IAAiB,CAACO,KAAK,CAACI,IAAN,CAAW,UAAAC,CAAC;AAAA,aAAE,OAAOA,CAAP,KAAa,UAAf;AAAA,KAAZ,CAArB,EAA4D;AAC1D,aAAOH,iBAAgBd,MAAhB,CAAuB,IAAIe,KAAJ,CAAU,4BAAV,CAAvB,CAAP;AACD;;AAED,QAAG,CAACH,KAAK,CAACI,IAAN,CAAW,UAAAC,CAAC;AAAA,aAAG,OAAOA,CAAP,KAAa,UAAb,IAA2B,OAAOA,CAAP,KAAa,QAA3C;AAAA,KAAZ,CAAJ,EAAsE;AACpE,aAAOH,iBAAgBd,MAAhB,CAAuB,IAAIe,KAAJ,CAAU,+CAAV,CAAvB,CAAP;AACD;;AAED,QAAG,OAAOF,MAAP,KAAkB,QAArB,EAA8B;AAC5BA,MAAAA,MAAM,GAAG,EAAT;AACD;;AAED,QAAIK,QAAQ,GAAG,KAAf;AACA,QAAIC,KAAJ;AACA,QAAMC,KAAK,GAAI,OAAOP,MAAM,CAACO,KAAd,KAAwB,QAAxB,IAAoCP,MAAM,CAACO,KAAP,GAAe,CAApD,GAAyDC,QAAQ,CAACR,MAAM,CAACO,KAAR,EAAe,EAAf,CAAjE,GAAsF,KAApG;AACA,QAAME,UAAU,GAAGV,KAAK,CAACP,MAAzB;AACA,QAAIkB,SAAS,GAAG,CAAhB;AACA,QAAIC,UAAU,GAAG,CAAjB;;AACA,QAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAOC,KAAP,EAAcC,SAAd,EAA0B;AAC9C,UAAMC,SAAS,GAAGjB,KAAK,CAAC,gBAAKc,IAAL,EAAWJ,UAAX,EAAuB,CAAvB,CAAD,CAAvB;;AAEA,UAAMQ,UAAU,GAAG,SAAbA,UAAa,GAAI;AACrB,eAAOF,SAAS,KAAKJ,UAArB;AACD,OAFD;;AAIA,UAAMO,UAAU,GAAG,SAAbA,UAAa,CAAAC,SAAS,EAAE;AAC5B;AACA,YAAG,CAACF,UAAU,EAAd,EAAkB,OAFU,CAG5B;;AACA,YAAGP,SAAS,GAAGH,KAAf,EAAqB;AACnB,iBAAOD,KAAK,CAACnB,MAAN,CAAa,IAAIe,KAAJ,CAAU,OAAV,CAAb,CAAP;AACD;;AACD,YAAGG,QAAQ,KAAK,KAAhB,EAAsB;AACpBO,UAAAA,aAAa,CAACF,SAAS,EAAV,EAAcS,SAAd,EAAyBJ,SAAzB,CAAb;AACD;AACF,OAVD;;AAYA,UAAG,OAAOC,SAAP,KAAqB,UAAxB,EAAmC;AACjCA,QAAAA,SAAS,CACP;AACEF,UAAAA,KAAK,EAALA,KADF;AAEEM,UAAAA,IAAI,EAAMF,UAFZ;AAGEG,UAAAA,QAAQ,EAAEJ,UAHZ;AAIE/B,UAAAA,OAAO,EAAGoB,KAAK,CAACpB,OAJlB;AAKEC,UAAAA,MAAM,EAAImB,KAAK,CAACnB;AALlB,SADO,EAQPmC,IAAI,CAACC,KAAL,CAAWV,IAAI,GAAGd,KAAK,CAACP,MAAxB,CARO,EASPqB,IATO,CAAT;AAWD,OAZD,MAYO,IAAG,OAAOG,SAAP,KAAqB,QAAxB,EAAiC;AACtCQ,QAAAA,UAAU,CAAC,YAAI;AAAEN,UAAAA,UAAU,CAACJ,KAAD,CAAV;AAAmB,SAA1B,EAA4BE,SAA5B,CAAV;AACD;AACF,KAlCD;;AAoCA,QAAMS,SAAS,GAAI,CACjB,UAAArB,CAAC,EAAE;AACD,UAAGC,QAAQ,KAAK,IAAhB,EAAsB,OAAOqB,KAAK,EAAZ;AACtBrB,MAAAA,QAAQ,GAAG,IAAX;AACA,aAAOD,CAAP;AACD,KALgB,CAAnB;AAOA,QAAMuB,UAAU,GAAG,CACjB,UAAAvB,CAAC,EAAE;AACD,UAAGC,QAAQ,KAAK,IAAhB,EAAsB,OAAOqB,KAAK,EAAZ;AACtBrB,MAAAA,QAAQ,GAAG,IAAX;AACA,aAAOJ,iBAAgBd,MAAhB,CAAuBiB,CAAvB,CAAP;AACD,KALgB,CAAnB;;AAQA,QAAMwB,UAAU,GAAG,SAAbA,UAAa,CAACC,SAAD,EAAa;AAC9BvB,MAAAA,KAAK,IAAIA,KAAK,CAACwB,IAAN,EAAT,CAD8B,CAE9B;;AACAxB,MAAAA,KAAK,GAAGL,iBAAgBK,KAAhB,EAAR;AACAmB,MAAAA,SAAS,CAACM,OAAV,CAAkB,UAAAC,EAAE;AAAA,eAAE1B,KAAK,CAAC2B,OAAN,CAAcC,IAAd,CAAmBF,EAAnB,CAAF;AAAA,OAApB;AACAL,MAAAA,UAAU,CAACI,OAAX,CAAmB,UAAAC,EAAE;AAAA,eAAE1B,KAAK,CAAC2B,OAAN,CAAcE,KAAd,CAAoBH,EAApB,CAAF;AAAA,OAArB,EAL8B,CAO9B;;AACA1B,MAAAA,KAAK,CAACwB,IAAN,GAAa,YAAI;AACfzB,QAAAA,QAAQ,GAAG,IAAX;AACAM,QAAAA,UAAU,IAAI,CAAd;AACD,OAHD;;AAKAL,MAAAA,KAAK,CAAC8B,KAAN,GAAc,UAACP,SAAD,EAAa;AACzB,YAAGxB,QAAQ,KAAK,IAAhB,EAAqB;AACnBA,UAAAA,QAAQ,GAAG,KAAX;AACAK,UAAAA,SAAS,GAAG,OAAOmB,SAAP,KAAqB,QAArB,GAAgCA,SAAhC,GAA4C,CAAxD;AACAjB,UAAAA,aAAa,CAACF,SAAS,EAAV,EAAcV,MAAM,CAACc,KAArB,EAA4BH,UAA5B,CAAb;AACD;AACF,OAND,CAb8B,CAoB9B;;;AACAL,MAAAA,KAAK,CAAC+B,KAAN,GAAcT,UAAd,CArB8B,CAsB9B;;AACAvB,MAAAA,QAAQ,GAAG,IAAX;AACAC,MAAAA,KAAK,CAAC8B,KAAN,CAAYP,SAAZ;AACD,KAzBD;;AA2BAD,IAAAA,UAAU,CAAC,CAAD,CAAV;;AAEA,QAAMU,aAAa,qBACdhC,KADc;AAEjB4B,MAAAA,IAFiB,gBAEXF,EAFW,EAER;AACP1B,QAAAA,KAAK,CAAC2B,OAAN,CAAcC,IAAd,CAAmBF,EAAnB;AACAP,QAAAA,SAAS,CAACc,IAAV,CAAeP,EAAf;AACA,eAAOM,aAAP;AACD,OANgB;AAOjBH,MAAAA,KAPiB,kBAOVH,EAPU,EAOP;AACR1B,QAAAA,KAAK,CAAC2B,OAAN,CAAcE,KAAd,CAAoBH,EAApB;AACAL,QAAAA,UAAU,CAACY,IAAX,CAAgBP,EAAhB;AACA,eAAOM,aAAP;AACD;AAXgB,MAAnB;;AAcA,WAAOA,aAAP;AACD,GAtHM;;;;AAwHA,MAAME,KAAK,GAAG,SAARA,KAAQ,CAAUC,SAAV,EAAqBC,IAArB,EAA0B;AAC7C,WAAO,+BAAW,UAAUxD,OAAV,EAAkB;AAClC,UAAMc,MAAM,GAAG,oBAAS0C,IAAT,EAAe,YAAf,CAAf;;AAEA,UAAG1C,MAAM,CAAC2C,UAAP,KAAsB,IAAzB,EAA8B;AAC5B3C,QAAAA,MAAM,CAAC2C,UAAP,GAAoBC,MAAM,CAACC,iBAA3B;AACD,OAFD,MAEO,IAAG,CAAC,sBAAS7C,MAAM,CAAC2C,UAAhB,CAAD,IAAgC3C,MAAM,CAAC2C,UAAP,GAAoB,CAAvD,EAAyD;AAC9D3C,QAAAA,MAAM,CAAC2C,UAAP,GAAoB,CAApB;AACD;;AAED,UAAG,CAAC,sBAAS3C,MAAM,CAAC8C,QAAhB,CAAD,IAA8B9C,MAAM,CAAC8C,QAAP,GAAkB,CAAC,CAApD,EAAsD;AACpD9C,QAAAA,MAAM,CAAC8C,QAAP,GAAkB,CAAC,CAAnB;AACD;;AAED,UAAG,CAAC,sBAAS9C,MAAM,CAAC+C,MAAhB,CAAD,IAA4B/C,MAAM,CAAC+C,MAAP,GAAgB,CAA/C,EAAiD;AAC/C/C,QAAAA,MAAM,CAAC+C,MAAP,GAAgB,CAAhB;AACD,OAfiC,CAiBlC;;;AACA,UAAMC,mBAAmB,GAAGlE,KAAK,CAACkB,MAAM,CAAC+C,MAAR,CAAL,CAC3BE,IAD2B,CACtB,mBAAQR,SAAR,CADsB,EAE3BhD,MAF2B,CAEpB,UAACC,IAAD,EAAOK,KAAP,EAAe;AACrBA,QAAAA,KAAK,CAACgC,OAAN,CAAc,UAACC,EAAD,EAAKpC,KAAL;AAAA,iBAAaF,IAAI,CAAC6C,IAAL,CAAU,CAAC3C,KAAD,EAAQoC,EAAR,CAAV,CAAb;AAAA,SAAd;AACA,eAAOtC,IAAP;AACD,OAL2B,EAKzB,EALyB,CAA5B;AAOA,UAAMwD,cAAc,GAAGF,mBAAmB,CAACxD,MAA3C;AACA,UAAI2D,gBAAgB,GAAG,CAAvB;AACA,UAAMC,eAAe,GAAGtE,KAAK,CAACkE,mBAAmB,CAACxD,MAArB,CAA7B;AAEA,4BAAQ;AACN6D,QAAAA,MAAM;AAAA;AAAA;AAAA,kCAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,oBAAAA,KAAT,QAASA,KAAT;;AAAA,0BACHtD,MAAM,CAAC8C,QAAP,GAAkB,CAAC,CADhB;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAEE7C,iBAAgBsD,OAAhB,CAAwBvD,MAAM,CAAC8C,QAA/B,CAFF;;AAAA;AAAA,qDAICQ,KAJD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,WADA;AAONE,QAAAA,WAAW,EAAE;AAPP,OAAR,EASCC,OATD,CASS;AACPd,QAAAA,UAAU,EAAE3C,MAAM,CAAC2C,UADZ;AAEPe,QAAAA,KAAK;AAAA;AAAA;AAAA,kCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAASJ,oBAAAA,KAAT,SAASA,KAAT;AACV;AACO1D,oBAAAA,KAFG,GAEU0D,KAFV,KAEItB,EAFJ,GAEUsB,KAFV;AAAA,mCAGVA,KAHU;AAAA;AAAA,2BAGOtB,EAAE,EAHT;;AAAA;AAAA;;AAAA,iCAGJO,IAHI;;AAAA,sDAIHe,KAJG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;;AAAA;AAAA;AAAA;;AAAA;AAAA,WAFE;AAQPD,QAAAA,MAAM,EAAE,uBAAa;AAAA,cAAVC,KAAU,SAAVA,KAAU;AACnB;AADmB,cAEZ1D,KAFY,GAES0D,KAFT;AAAA,cAELtB,EAFK,GAESsB,KAFT;AAAA,cAEDK,MAFC,GAESL,KAFT;AAInBF,UAAAA,eAAe,CAACxD,KAAD,CAAf,GAAyB+D,MAAzB;AACAR,UAAAA,gBAAgB;;AAEhB,cAAGA,gBAAgB,KAAKD,cAAxB,EAAuC;AACrChE,YAAAA,OAAO,CAACkE,eAAD,CAAP;AACD;AACF;AAlBM,OATT,EA6BC/D,MA7BD,CA6BQ2D,mBA7BR;AA8BD,KA3DM,CAAP;AA4DD,GA7DM,C,CAgEP;;;;AACA,MAAMY,YAAY,GAAG,IAAI,YAAW;AAClCC,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,SAA5B,EAAuC;AACrCC,MAAAA,GAAG,EAAE;AAAA,eAAI,QAAJ;AAAA;AADgC,KAAvC;AAGAF,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,OAA5B,EAAqC;AACnCC,MAAAA,GAAG,EAAE;AAAA,eAAI,IAAJ;AAAA;AAD8B,KAArC;AAGD,GAPoB,EAArB;;AASO,MAAMrC,KAAK,GAAG,SAARA,KAAQ,CAAUsC,aAAV,EAAoC;AAAA,QAA1BA,aAA0B;AAA1BA,MAAAA,aAA0B,GAAVC,SAAU;AAAA;;AACvD,WAAO,IAAIC,2BAAJ,CAAiB,UAAChF,OAAD,EAAUC,MAAV,EAAmB;AACzC,UAAG6E,aAAa,KAAK,IAArB,EAA0B;AACxBG,QAAAA,OAAO,CAACC,IAAR,CAAa,eAAb;AACD;;AACDjF,MAAAA,MAAM,CAACyE,YAAD,CAAN;AACD,KALM,CAAP;AAMD,GAPM","sourcesContent":["// promise utils\nimport { PromiseClass, newPromise } from './promiseEngine'\nimport { promise as PromiseFunction } from './promise'\nimport { asArray, asObject } from '../../functions/cast'\nimport { isNumber } from '../../functions/isLike'\nimport { turn } from '../../functions/nice'\nimport { argumentNamesBy } from '../../functions/hack'\n\nimport { operate } from '../operate'\n\nexport const promisify = function (asyncErrCallbackfn){\n  const argumentNames = argumentNamesBy(asyncErrCallbackfn).slice(1)\n  const promisified   = function (){\n    const args = Array.from(arguments)\n    return new Promise((resolve, reject)=>{\n      const applyParams = args.concat(function (){\n        const [error, ...callbakArgs] = Array.from(arguments)\n        if(error){\n          reject(error)\n        } else if(argumentNames.length && callbakArgs.length > 1){\n          resolve(argumentNames.reduce((dest, name, index)=>{\n            dest[name] = callbakArgs[index]\n            return dest\n          }, {}))\n        } else {\n          resolve(callbakArgs[0])\n        }\n      })\n      asyncErrCallbackfn.apply(this, applyParams)\n    })\n  }\n  return function (){\n    return promisified.apply(this, Array.from(arguments))\n  }\n}\n\nexport const until = function (tasks, option){\n  if(!(tasks instanceof Array)){\n    return PromiseFunction.reject(new Error(\"tasks must be array\"))\n  }\n\n  if(!tasks.length || !tasks.some(e=>typeof e === \"function\")){\n    return PromiseFunction.reject(new Error(\"not found wheel executable\"))\n  }\n\n  if(!tasks.some(e=>(typeof e !== \"function\" || typeof e !== \"number\"))){\n    return PromiseFunction.reject(new Error(\"wheel task only function or number executable\"))\n  }\n\n  if(typeof option !== \"object\"){\n    option = {}\n  }\n\n  let finished = false\n  let defer\n  const limit = (typeof option.limit === \"number\" && option.limit > 0) ? parseInt(option.limit, 10) : 10000\n  const taskLength = tasks.length\n  let wheelTick = 0\n  let resetScope = 0\n  const nextWheelTick = (tick, value, tickScope)=>{\n    const nowAction = tasks[turn(tick, taskLength, 1)]\n\n    const isActiveFn = ()=>{\n      return tickScope === resetScope\n    }\n\n    const nextTickFn = passValue=>{\n      // if reset called\n      if(!isActiveFn()) return\n      // if over tick\n      if(wheelTick > limit){\n        return defer.reject(new Error(\"limit\"))\n      }\n      if(finished === false){\n        nextWheelTick(wheelTick++, passValue, tickScope)\n      }\n    }\n\n    if(typeof nowAction === \"function\"){\n      nowAction(\n        {\n          value,\n          next    : nextTickFn,\n          isActive: isActiveFn,\n          resolve : defer.resolve,\n          reject  : defer.reject\n        },\n        Math.floor(tick / tasks.length),\n        tick\n      )\n    } else if(typeof nowAction === \"number\"){\n      setTimeout(()=>{ nextTickFn(value) }, nowAction)\n    }\n  }\n  \n  const thenStack  = [\n    e=>{\n      if(finished === null) return abort()\n      finished = true\n      return e\n    }\n  ]\n  const catchStack = [\n    e=>{\n      if(finished === null) return abort()\n      finished = true\n      return PromiseFunction.reject(e)\n    }\n  ]\n  \n  const deferReset = (resetTick)=>{\n    defer && defer.stop()\n    //\n    defer = PromiseFunction.defer()\n    thenStack.forEach(fn=>defer.promise.then(fn))\n    catchStack.forEach(fn=>defer.promise.catch(fn))\n    \n    //\n    defer.stop = ()=>{\n      finished = null\n      resetScope += 1\n    }\n    \n    defer.start = (resetTick)=>{\n      if(finished === null){\n        finished = false\n        wheelTick = typeof resetTick === \"number\" ? resetTick : 0\n        nextWheelTick(wheelTick++, option.value, resetScope)\n      }\n    }\n    //\n    defer.reset = deferReset\n    //\n    finished = null\n    defer.start(resetTick)\n  }\n  \n  deferReset(0)\n  \n  const wheelControls = {\n    ...defer,\n    then (fn){\n      defer.promise.then(fn)\n      thenStack.push(fn)\n      return wheelControls\n    },\n    catch (fn){\n      defer.promise.catch(fn)\n      catchStack.push(fn)\n      return wheelControls\n    }\n  }\n  \n  return wheelControls\n}\n\nexport const batch = function (funcArray, opts){\n  return newPromise(function (resolve){\n    const option = asObject(opts, \"concurrent\")\n      \n    if(option.concurrent === true){\n      option.concurrent = Number.POSITIVE_INFINITY\n    } else if(!isNumber(option.concurrent) || option.concurrent < 1){\n      option.concurrent = 1\n    }\n      \n    if(!isNumber(option.interval) || option.interval < -1){\n      option.interval = -1\n    }\n      \n    if(!isNumber(option.repeat) || option.repeat < 1){\n      option.repeat = 1\n    }\n      \n    //set task with repeat\n    const sequanceTaskEntries = Array(option.repeat)\n    .fill(asArray(funcArray))\n    .reduce((dest, tasks)=>{\n      tasks.forEach((fn, index)=>dest.push([index, fn]))\n      return dest\n    }, [])\n      \n    const sequanceLength = sequanceTaskEntries.length\n    let sequanceComplete = 0\n    const sequanceReseult = Array(sequanceTaskEntries.length)\n      \n    operate({\n      output: async ({ entry })=>{\n        if(option.interval > -1){\n          await PromiseFunction.timeout(option.interval)\n        }\n        return entry\n      },\n      limitOutput: 1\n    })\n    .operate({\n      concurrent: option.concurrent,\n      input     : async ({ entry })=>{\n        // eslint-disable-next-line no-unused-vars\n        const [index, fn] = entry\n        entry.push(await fn())\n        return entry\n      },\n      output: ({ entry })=>{\n        // eslint-disable-next-line no-unused-vars\n        const [index, fn, result] = entry\n        \n        sequanceReseult[index] = result\n        sequanceComplete++\n        \n        if(sequanceComplete === sequanceLength){\n          resolve(sequanceReseult)\n        }\n      }\n    })\n    .concat(sequanceTaskEntries)\n  })\n}\n\n\n// abort is deprecated\nconst abortMessage = new function (){\n  Object.defineProperty(this, \"message\", {\n    get: ()=>\":abort\"\n  })\n  Object.defineProperty(this, \"abort\", {\n    get: ()=>true\n  })\n}()\n\nexport const abort = function (notifyConsole = undefined){\n  return new PromiseClass((resolve, reject)=>{\n    if(notifyConsole === true){\n      console.warn(\"abort promise\")\n    }\n    reject(abortMessage)\n  })\n}\n"],"file":"promiseFunctions.js"}