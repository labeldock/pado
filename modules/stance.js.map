{"version":3,"sources":["../.src/modules/stance.js"],"names":["likePoint","p","hasOwnProperty","Point","x","y","z","w","meta","__ref","__meta","__matrix","__computed","matrixVersion","computedVersion","memoizeRef","memoizeOutput","compute","key","needCompute","newMemoizeRef","newComputedMatrix","reduce","dest","matrix","Object","defineProperties","enumerable","get","length","set","v","it","rx","rangeWidth","range","width","ry","rangeHeight","height","addMatrix","value","Error","push","prototype","addMeta","obj","assign","clone","call","fn","toJSON","withMeta","json","pull","angle","xHalf","Vertex","vertexWith","destPoint","points","unshift","rectWith","largeX","smallX","largeY","smallY","Rect","pointArray","forEach","point","classFunction","methods","keys","start","end","result","eq","index","join","joins","refp","i","newp","splice","order","px","py","pz","pw","sx","sy","sz","sw","ex","ey","ez","ew","transform","rect","useRect","left","top","originX","originY","translate","newValue","oldValue","right","bottom","splitCountParser","split","columnOrder","rowOrder","column","parseInt","row","findPoint","findWord","trim","lineFind","pointFind","vertex","inheritMeta","perspective","perspectiveOrigin","middleY","centerX","piecesWithCount","splitCount","eachResultHook","pieceWidth","pieceHeight","undefined","pacResult","colIndex","rowIndex","pacMeta","coords","fit","WHRatio","transformRatio","sort","sticky","position","refX","refY","refWidth","refHeight","valid"],"mappings":"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","sourcesContent":["import { isArray, isNumber } from '../functions/isLike'\nimport { asArray } from '../functions/cast'\nimport { asMatrix, validMatrix, multiplyMatrix } from '../functions/matrix'\nimport { makeMatrixArray } from './matrix'\n\n\nconst likePoint = function (p){\n  return typeof p === \"object\" && p.hasOwnProperty(\"x\") && p.hasOwnProperty(\"y\")\n}\n\n\nconst Point = function (x = 0, y = 0, z = 0, w = 1, meta){\n  // base point config\n  const __ref = { x, y, z, w }\n  let __meta\n  \n  // compute matrix\n  const __matrix   = []\n  const __computed = {\n    matrixVersion  : 0,\n    computedVersion: 0,\n    memoizeRef     : null,\n    memoizeOutput  : null\n  }\n  \n  const compute = (key)=>{\n    const { matrixVersion, computedVersion } = __computed\n    //why un used?\n    //const { memoizeRef } = __computed;\n    \n    let needCompute = !__computed.memoizeRef || matrixVersion !== computedVersion || !(\n      __computed.memoizeRef.x === __ref.x &&\n      __computed.memoizeRef.y === __ref.y &&\n      __computed.memoizeRef.z === __ref.z &&\n      __computed.memoizeRef.w === __ref.w \n    )\n    \n    if(needCompute){\n      const newMemoizeRef = {\n        x: __ref.x,\n        y: __ref.y,\n        z: __ref.z,\n        w: __ref.w\n      }\n      const newComputedMatrix = __matrix.reduce(\n        (dest, matrix)=>multiplyMatrix(matrix, dest),\n        asMatrix([newMemoizeRef.x, newMemoizeRef.y, newMemoizeRef.z, newMemoizeRef.w], 1)\n      )\n      //\n      __computed.memoizeOutput = {\n        x: newComputedMatrix[0][0],\n        y: newComputedMatrix[0][1],\n        z: newComputedMatrix[0][2],\n        w: newComputedMatrix[0][3]\n      }\n      __computed.memoizeRef = newMemoizeRef\n      __computed.computedVersion = matrixVersion\n    } \n    //else {\n    //  console.log(`compute cache ${key}`);\n    //}\n    return key && __computed.memoizeOutput[key] || __computed.memoizeOutput\n  }\n  \n  Object.defineProperties(this, {\n    x   : { enumerable: true, get: ()=>(__matrix.length && compute('x') || __ref.x), set: v=>__ref.x = v},\n    y   : { enumerable: true, get: ()=>(__matrix.length && compute('y') || __ref.y), set: v=>__ref.y = v},\n    z   : { enumerable: true, get: ()=>(__matrix.length && compute('z') || __ref.z), set: v=>__ref.z = v},\n    w   : { enumerable: true, get: ()=>(__matrix.length && compute('w') || __ref.w), set: v=>__ref.w = v},\n    meta: {\n      enumerable: false, \n      get (){ return __meta },\n      set (it){ __meta = typeof it === \"object\" ? it : null; return __meta }\n    },\n    rx: { enumerable: false,\n      get       : ()=>{\n        const rangeWidth = (this.meta && this.meta.range && this.meta.range.width) || 0\n        return this.x / rangeWidth\n      }\n    },\n    ry: { \n      enumerable: false,\n      get       : ()=>{\n        const rangeHeight = (this.meta && this.meta.range && this.meta.range.height) || 0\n        return this.y / rangeHeight\n      }\n    },\n    addMatrix: {\n      enumerable: false,\n      value     : function (matrix){\n        if(!validMatrix(matrix)) throw new Error(\"invalid addMatrix param\")\n        __matrix.push(matrix)\n        __computed.matrixVersion += 1\n        return this\n      }\n    }\n  })\n  this.meta = meta\n}\n\nPoint.prototype = {\n  addMeta (obj){\n    if(typeof obj === \"object\") this.meta = Object.assign(this.meta && this.meta || {}, obj)\n    return this\n  },\n  clone (){\n    return new Point(this.x, this.y, this.z, this.w, this.meta)\n  },\n  call (fn){\n    if(typeof fn === \"function\"){\n      return fn(this) || this\n    }\n    return this\n  },\n  toJSON (withMeta){\n    const json = { x: this.x, y: this.y, z: this.z, w: this.w }\n    if(withMeta === true && this.meta) json.meta = this.meta\n    return json\n  },\n  pull (width = 0, angle = \"horizontal\"){\n    const { x, y, z, w } = this\n    switch (angle){\n      case \"h\": case \"horizontal\":\n        const xHalf = width <= 0 ? 0 : width / 2\n        return new Vertex([{x: x - xHalf, y, z, w}, {x: x + xHalf, y, z, w}])\n      default:\n    }\n  },\n  vertexWith (destPoint){\n    const points = asArray(destPoint)\n    points.unshift(this)\n    return new Vertex(points)\n  },\n  rectWith ({x, y}){\n    const [largeX, smallX] = this.x > x ? [ this.x, x ] : [ x, this.x ]\n    const [largeY, smallY] = this.y > y ? [ this.y, y ] : [ y, this.y ]\n    return new Rect(smallX, smallY, largeX - smallX, largeY - smallY, 0, 0)\n  }\n}\n\nconst Vertex = function (pointArray, meta){\n  let __meta\n  \n  Object.defineProperties(this, {\n    meta: {\n      enumerable: false, \n      get (){ return __meta },\n      set (it){ __meta = typeof it === \"object\" ? it : null; return __meta }\n    }\n  })\n  \n  this.meta = meta\n  \n  asArray(pointArray).forEach(point=>{\n    if(!likePoint(point)) return\n    const {x, y, z, w} = point\n    this.push(new Point(x, y, z, w, __meta))\n  })\n};\n\n(function (classFunction, methods){\n  const prototype = []\n  \n  classFunction.prototype = prototype\n  \n  Object.keys(methods).forEach(key=>{\n    prototype[key] = methods[key]\n  })\n  \n  Object.defineProperties(prototype, {\n    start: {\n      enumerable: false,\n      get (){\n        return this[0]\n      }\n    },\n    end: {\n      enumerable: false,\n      get (){\n        return !this.length ? void 0 : this[this.length - 1]\n      }\n    }\n  })\n}(Vertex, {\n  addMeta (obj){\n    if(typeof obj === \"object\") this.meta = Object.assign(this.meta && this.meta || {}, obj)\n    return this\n  },\n  toJSON (withMeta){\n    const result = []\n    this.forEach(p=>result.push(p.toJSON(withMeta)))\n    return result\n  },\n  clone (){\n    return new Vertex(this)\n  },\n  eq (index){\n    return this[index]\n  },\n  join: function (fn){\n    const joins = []\n    this.forEach((refp, i)=>{\n      joins.push(refp)\n      if(!this[i + 1]) return\n      const newp = fn(refp, this[i + 1], i)\n      if(!likePoint(newp)) return\n      const {x, y, z, w, meta} = newp\n      joins.push(new Point(x, y, z, w, meta))\n    })\n    this.splice(0, this.length)\n    joins.forEach(p=>this.push(p))\n    return this\n  },\n  point (order){\n    switch (order){\n      case \"e\": case \"end\":\n      case \"d\": case \"down\": case \"r\": case \"right\":\n        const { x:px, y:py, z:pz, w:pw } = this.end\n        return new Point(\n          px,\n          py,\n          pz,\n          pw,\n          this.meta\n        )\n      case \"c\": case \"m\": case \"center\": case \"middle\":\n        const { x:sx, y:sy, z:sz, w:sw } = this.start\n        const { x:ex, y:ey, z:ez, w:ew } = this.end\n        return new Point(\n          sx / 2 + ex / 2,\n          sy / 2 + ey / 2,\n          sz / 2 + ez / 2,\n          sw / 2 + ew / 2,\n          this.meta\n        )\n      case \"s\": case \"start\":\n      case \"u\": case \"up\": case \"l\": case \"left\":\n      default:\n        const { x, y, z, w } = this.start\n        return new Point(\n          x,\n          y,\n          z,\n          w,\n          this.meta\n        )\n    }\n  },\n  transform (transform, rect){\n    const useRect = !!rect\n    \n    if(useRect){\n      const { left, top, width, height } = rect\n      \n      //rotateOrigin\n      const originX = left + width / 2\n      const originY = top + height / 2\n      \n      this.forEach(point=>{\n        point.translate({ x: -originX, y: -originY })\n        point.transform(transform)\n        point.translate({ x: originX, y: originY })\n      })\n    } else {\n      this.forEach(point=>{\n        point.transform(transform)\n      })\n    }\n    return this\n  }\n}))\n\n\nconst Rect = function (left = 0, top = 0, width = 0, height = 0, meta = null){\n  const __ref = { left, top, width, height }\n  let __meta\n  Object.defineProperties(this, {\n    width: { \n      enumerable: true, \n      get (){ return __ref.width },\n      set (newValue){\n        const oldValue = __ref.width\n        __ref.width = newValue\n        __ref.right += newValue - oldValue\n        return newValue\n      }\n    },\n    height: { \n      enumerable: true, \n      get (){ return __ref.height },\n      set (newValue){\n        const oldValue = __ref.height\n        __ref.height = newValue\n        __ref.bottom += newValue - oldValue\n        return newValue\n      }\n    },\n    left  : { enumerable: true, get (){ return __ref.left } },\n    top   : { enumerable: true, get (){ return __ref.top } },\n    right : { enumerable: true, get (){ return this.left + this.width } },\n    bottom: { enumerable: true, get (){ return this.top + this.height } },\n    meta  : {\n      enumerable: false, \n      get (){ return __meta },\n      set (it){ \n        __meta = typeof it === \"object\" ? it : null \n        return __meta\n      }\n    }\n  })\n  \n  this.meta = meta\n}\n\nconst splitCountParser = (split)=>{\n    //splitCount [ horizental, vertical ]\n    //1 = [ 1 ]\n    //[1, 2] = [1, 2]\n  const [ columnOrder, rowOrder ] = asArray(split)\n  return {\n    column: isNumber(columnOrder) && columnOrder > 0 ? parseInt(columnOrder, 10) : 1,\n    row   : isNumber(rowOrder) && rowOrder > 0 ? parseInt(rowOrder, 10) : 1\n  }\n}\n\nRect.prototype = {\n  addMeta (obj){\n    if(typeof obj === \"object\") this.meta = Object.assign(this.meta && this.meta || {}, obj)\n    return this\n  },\n  clone (){\n    return new Rect(this.left, this.top, this.width, this.height, this.meta)\n  },\n  toJSON (withMeta){\n    const json = {width: this.width, height: this.height, left: this.left, top: this.top, right: this.right, bottom: this.bottom }\n    if(withMeta === true && this.meta) json.meta = this.meta\n    return json\n  },\n  findPoint (findWord){\n    const [ lineFind, pointFind ] = isArray(findWord) ? findWord : findWord.trim().split(/\\s+/)\n    return this.vertex(lineFind).point(pointFind)\n  },\n  vertex (order){\n    const inheritMeta = Object.assign({\n      perspective      : 0,\n      perspectiveOrigin: {\n        x: this.left + (this.width / 2),\n        y: this.top + (this.top / 2),\n        z: 0\n      }\n    }, this.meta)\n    \n    switch (order){\n      case \"right\": case \"r\":\n        return new Vertex([{x: this.right, y: this.top, z: 0, w: 0}, {x: this.right, y: this.bottom, z: 0, w: 0}], inheritMeta)\n      case \"bottom\": case \"b\":\n        return new Vertex([{x: this.left, y: this.bottom, z: 0, w: 0}, {x: this.right, y: this.bottom, z: 0, w: 0}], inheritMeta)\n      case \"left\": case \"l\":\n        return new Vertex([{x: this.left, y: this.top, z: 0, w: 0}, {x: this.left, y: this.bottom, z: 0, w: 0}], inheritMeta)\n      case \"top\": case \"t\":\n        return new Vertex([{x: this.left, y: this.top, z: 0, w: 0}, {x: this.right, y: this.top, z: 0, w: 0}], inheritMeta)\n      case \"middle\": case \"m\":\n        const middleY = this.height / 2 + this.top\n        return new Vertex(\n          [\n            {x: this.left, y: middleY, z: 0, w: 0},\n            {x: this.right, y: middleY, z: 0, w: 0}\n          ],\n          inheritMeta\n        )\n      case \"center\": case \"c\":\n        const centerX = this.width / 2 + this.x\n        return new Vertex(\n          [\n            {x: centerX, y: this.top, z: 0, w: 0},\n            {x: centerX, y: this.bottom, z: 0, w: 0}\n          ],\n          inheritMeta\n        )\n      default:\n        return new Vertex(\n          [\n            {x: this.left, y: this.top, z: 0, w: 0},\n            {x: this.left, y: this.bottom, z: 0, w: 0},\n            {x: this.right, y: this.bottom, z: 0, w: 0},\n            {x: this.right, y: this.top, z: 0, w: 0}\n          ],\n          inheritMeta\n        )\n    }\n  },\n  piecesWithCount (splitCount, eachResultHook){\n    const { column, row } = splitCountParser(splitCount)\n    const width = this.width\n    const height = this.height\n    const pieceWidth = width / column\n    const pieceHeight = height / row\n    eachResultHook = typeof eachResultHook === \"function\" ? eachResultHook : undefined\n    \n    const pacResult = makeMatrixArray(column, row, (index, colIndex, rowIndex)=>{\n      const pacMeta = { \n        column: colIndex,\n        row   : rowIndex,\n        coords: [colIndex, rowIndex], \n        range : { width, height }\n      }\n      const result = new Rect(colIndex * pieceWidth, rowIndex * pieceHeight, pieceWidth, pieceHeight, pacMeta)\n      return eachResultHook ? eachResultHook(result, index, colIndex, rowIndex) : result\n    })\n    \n    return pacResult\n  },\n  fit (rect){\n    if(typeof rect !== \"object\"){ throw new Error(\"fit::argument[0] is not object\") }\n    const { width, height } = rect\n    \n    if(!isNumber(width) || !isNumber(height)){ throw new Error(\"fit::argument[0] is not { width:Number, height:Number }\") }\n    const WHRatio = [ width / this.width, height / this.height ]\n    const transformRatio = WHRatio.sort()[0]\n    \n    this.width = (this.width * transformRatio) || 0\n    this.height = (this.height * transformRatio) || 0\n    \n    return this\n  },\n  //TODO : incompleted sticky(parent, position, offset);\n  sticky ({left:refX, top:refY, width:refWidth, height:refHeight}, position = \"bottom left\"){\n    const { left, top, width, height } = this\n    switch (position){\n      case \"bl\": case \"obl\": case \"bottom left\": case \"outer bottom left\":\n        return rect({\n          left: refX,\n          top : refY + refHeight,\n          width,\n          height\n        })\n      case \"c\": case \"m\": case \"mc\": case \"center\": case \"middle\": case \"middle center\":\n        return rect({\n          left: refX + refWidth / 2 - width / 2,\n          top : refY + refHeight / 2 - height / 2,\n          width,\n          height\n        })\n      default:\n        return rect({ left, top, width, height })\n    }\n  }\n}\n\nexport const point = function (x, y, z, w){\n  return typeof x === \"object\" \n    ? new Point(x.x, x.y, x.z, x.w) \n    : new Point(x, y, z, w)\n}\n\nexport const vertex = function (start, end){\n  return new Vertex([{x: start.x, y: start.y, z: start.z, w: start.w}, {x: end.x, y: end.y, z: end.z, w: end.w}])\n}\n\nexport const rect = function (left, top, width, height, x, y, valid){\n  return typeof left === \"object\"\n    ? new Rect(left.left, left.top, left.width, left.height, left.x, left.y, left.valid)\n    : new Rect(left, top, width, height, x, y, valid)\n}\n"],"file":"stance.js"}