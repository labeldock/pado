{"version":3,"sources":["../.src/src/modules/makeup.js"],"names":["awaitLeadOnly","func","alloc","$pending","args","resolve","reject","apply","then","catch","e","awaitCompose","funcArgs","composeFuncs","asArray","forEach","f","push","payload","iterator","d","i","l","length","doWhile","taskPayload","proc","value","done","call","next","nextPayload","watchChange","changeValue","watchman","newValue","countScope","$count","destOldValue","_cloneDeep","$setter","effect","$oldValue","Watchman","equalityLogic","undefined","$equalityLogic","prototype","setter","changeListeners","fn","change","_isEqual","watch"],"mappings":"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","sourcesContent":["import {\n  promise,\n  defer as _defer,\n  timeout as _timeout,\n  valueOf as _valueOf,\n  abort as _abort,\n  reject as _reject\n} from './promise';\n\nexport const awaitLeadOnly = function(func) {\n  return alloc(function() {\n    let $pending = false;\n    return function(...args) {\n      if($pending === true) {\n        return _abort();\n      } else {\n        $pending = true;\n        return promise((resolve, reject)=>{\n          return _valueOf(func.apply(this, args)).then(resolve).catch(reject);\n        })\n        .then(e=>{\n          $pending = false;\n          return e;\n        })\n        .catch(e=>{\n          $pending = false;\n          return _reject(e);\n        });\n      }\n    };\n  });\n};\n\nexport const awaitCompose = function(funcArgs) {\n  return alloc(function() {\n    const composeFuncs = [];\n\n    asArray(funcArgs).forEach(f=>{ typeof f === \"function\" && composeFuncs.push(f); });\n\n    return function(payload) {\n      return promise((resolve, reject)=>{\n        function* iterator() {\n          for(let d = composeFuncs, i = 0, l = d.length; i < l; i++) {\n            yield d[i];\n          }\n        }\n\n        const doWhile = ({ value: proc, done }, taskPayload)=>{\n          if(done) {\n            resolve(taskPayload);\n          } else {\n            _valueOf(proc.call(this, taskPayload))\n            .then(nextPayload=>{\n              doWhile(iterator.next(), nextPayload);\n            })\n            .catch(reject);\n          }\n        };\n\n        doWhile.apply(iterator.next(), payload);\n      });\n    };\n  });\n};\n\n/*\n  수동 watch로직 입니다.\n  let watcher = watchChange(newValue=>{ doSomething... })\n  watcher.change(\"newValue\")\n*/\nexport const watchChange = (function(){\n  const changeValue = function(watchman,newValue){\n    const countScope   = watchman.$count;\n    const destOldValue = _cloneDeep(newValue);\n    \n    watchman.$setter.forEach(effect=>{\n      effect(newValue, watchman.$oldValue, countScope);\n    })\n    \n    watchman.$oldValue = destOldValue;\n  }\n  \n  var Watchman = function(equalityLogic){\n    this.$setter   = [];\n    this.$oldValue = undefined;\n    this.$count    = 0;\n    this.$equalityLogic = equalityLogic;\n  };\n  \n  Watchman.prototype = {\n    setter (changeListeners){\n      asArray(changeListeners).forEach(fn=>{\n        if(typeof fn === \"function\"){\n          this.$setter.push(fn);\n        }\n      });\n    },\n    change (newValue){\n      var newValue;\n      if(this.$equalityLogic){\n        if(!_isEqual(this.$oldValue,newValue)){\n          changeValue(this,newValue);\n        }\n      } else {\n        if(this.$oldValue != newValue){\n          changeValue(this,newValue);\n        }\n      }\n    }\n  }\n  return function(effect,equalityLogic){\n    const watch = new Watchman(equalityLogic);\n    watch.setter(effect);\n    return watch;\n  }\n})\n"],"file":"makeup.js"}