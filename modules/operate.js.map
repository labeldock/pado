{"version":3,"sources":["../.src/modules/operate.js"],"names":["operate","PARENT_OUTPUT_UPDATED","input","output","concurrent","rescue","limitInput","limitOutput","parent","undefined","children","inputs","outputs","Number","POSITIVE_INFINITY","current","Object","defineProperty","get","limit","length","inputOutput","kickStart","avaliableQueLength","avaliableOutputCount","Array","fill","forEach","entry","shift","outputHandle","formInputDataum","push","child","emit","value","pushData","d","eventName","payload","avaliablePullCount","pullData","pull","datum","pullLength","splice","deep","parentOperate","cloneOperate","operateFunction","clone","prototype","append","remove","index","indexOf","option","assign"],"mappings":"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","sourcesContent":["import { \n  asArray,\n  isNumber\n} from '../functions'\n\nexport const operate = (function (){\n  const PARENT_OUTPUT_UPDATED = \"ParentOutputUpdated\"\n  \n  const operate = function ({ input, output, concurrent, rescue, limitInput, limitOutput }){\n    this.parent = undefined\n    this.children = []\n    this.inputs = []\n    this.outputs = []\n    this.limitInput = isNumber(limitInput) || limitInput > 0 ? limitInput : Number.POSITIVE_INFINITY\n    this.limitOutput = isNumber(limitOutput) || limitOutput > 0 ? limitOutput : Number.POSITIVE_INFINITY\n    \n    //\n    let current = 0\n    concurrent = isNumber(concurrent) || concurrent > 0 ? concurrent : 1\n    \n    Object.defineProperty(this, \"avaliablePullCount\", {\n      get: ()=>{\n        let limit = this.limitInput - this.inputs.length\n        if(limit < 0) limit = 0\n        return limit\n      }\n    })\n    \n    Object.defineProperty(this, \"avaliableOutputCount\", {\n      get: ()=>{\n        return this.limitOutput + current + this.outputs.length\n      }\n    })\n    \n    const inputOutput = { input, output }\n    \n    const kickStart = ()=>{\n      let avaliableQueLength = concurrent - current\n      \n      // 작동가능한 큐\n      if(avaliableQueLength < 1){\n        return\n      }\n      \n      // input의 길이로 확인하여 실행 가능한 큐\n      if(avaliableQueLength > this.inputs.length){\n        avaliableQueLength = this.inputs.length\n      }\n      \n      // output의 제한을 확인하여 사용 가능한 큐\n      if(avaliableQueLength > this.avaliableOutputCount){\n        avaliableQueLength = this.avaliableOutputCount\n      }\n      \n      if(avaliableQueLength < 1){\n        return\n      }\n      \n      Array(avaliableQueLength).fill(inputOutput).forEach(async ({input, output})=>{\n        let entry = this.inputs.shift()\n        current++\n        \n        const outputHandle = async (formInputDataum)=>{\n          /* TODO:lint\n          if(typeof output === \"function\"){\n            const out = await output({ entry: formInputDataum })\n          }\n          */\n          \n          this.outputs.push(formInputDataum)\n          current--\n        \n          this.children.forEach(child=>child.emit(PARENT_OUTPUT_UPDATED))\n          kickStart()\n        }\n        \n        if(input){\n          try {\n            outputHandle(await input({ entry }))\n          } catch (e){\n            if(typeof rescue === \"function\"){\n              rescue(e)\n            } else {\n              throw e\n            }\n            current--\n          }\n        } else {\n          outputHandle(entry)\n        }\n      })\n    }\n\n    Object.defineProperty(this, \"push\", {\n      value: (pushData)=>{\n        this.inputs.push(pushData)\n        kickStart()\n        return this\n      }\n    })\n    \n    Object.defineProperty(this, \"concat\", {\n      value: (pushData)=>{\n        asArray(pushData).forEach(d=>this.inputs.push(d))\n        kickStart()\n        return this\n      }\n    })\n    \n    Object.defineProperty(this, \"emit\", {\n      value: (eventName, payload)=>{\n        switch (eventName){\n          case PARENT_OUTPUT_UPDATED:\n            if(this.avaliablePullCount < 1) return\n            let pullData = this.parent.pull(this.avaliablePullCount)\n            if(pullData.length < 1) return\n            pullData.forEach(datum=>this.inputs.push(datum))\n            kickStart()\n            break\n        }\n      }\n    })\n    \n    Object.defineProperty(this, \"pull\", {\n      value: (pullLength)=>{\n        if(!(isNumber(pullLength) || pullLength == Number.POSITIVE_INFINITY)) return []\n        const pullData = this.outputs.splice(0, pullLength)\n        //pullData.length && kickStart();\n        return pullData\n      }\n    })\n    \n    Object.defineProperty(this, \"clone\", {\n      value: (deep = true, parentOperate)=>{\n        let cloneOperate = operateFunction({ input, output, concurrent, rescue, limitInput, limitOutput })\n        \n        deep === true && this.children.forEach(child=>{\n          child.clone(true, cloneOperate)\n        })\n        \n        return cloneOperate\n      }\n    })\n  }\n  \n  operate.prototype = {\n    append: function (child){\n      child.parent = this\n      this.children.push(child)\n      return this\n    },\n    remove: function (child){\n      let index = this.children.indexOf(child)\n      if(index < 0) return this\n      child.parent = undefined\n      this.children.splice(index, 1)\n    },\n    operate: function (option){\n      return this.append(operateFunction(option))\n    }\n  }\n  \n  const operateFunction = function (option){\n    return new operate(Object.assign({}, option))\n  }\n  \n  return operateFunction\n}())\n"],"file":"operate.js"}