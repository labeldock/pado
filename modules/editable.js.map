{"version":3,"sources":["../.src/modules/editable.js"],"names":["EDITABLE_DEFAULT_KEY","isEditPossibleDataType","model","isEditableState","undefined","editableModelize","putEditModel","destModel","setModel","putModel","Object","keys","forEach","key","cloneCurrentModel","currentModelValues","pushEditModel","pushModel","editableMeta","push","removeEditModel","getOriginalModel","getLastModel","changeHistory","length","isEditable","enterEditable","exitEditable","extendModel","currentExtendModel","cancleEditable","originalModel","commitEditable","changedEditable","beginEditable","historyMeta","beginModel","splice","expandEditable","hasOwnProperty","editable","editableQuery","isChanged","output","free","expand","begin","enter","exit","cancle","commit"],"mappings":"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","sourcesContent":["import { \n  free,\n  cloneDeep     as _cloneDeep,\n  get           as _get,\n  isPlainObject as _isPlainObject,\n  isEqual       as _isEqual\n} from '../functions';\n\nconst EDITABLE_DEFAULT_KEY = \"$editable\";\n\nconst isEditPossibleDataType = model=>_isPlainObject(model)\n\nconst isEditableState = model=>model[EDITABLE_DEFAULT_KEY] !== undefined\n\nconst editableModelize = function(model){\n  model[EDITABLE_DEFAULT_KEY] = [];\n  return model;\n}\n\nconst putEditModel = function(destModel, setModel){\n  const putModel = _cloneDeep(setModel);\n  \n  Object.keys(destModel).forEach(key=>{\n    if(key !== EDITABLE_DEFAULT_KEY){\n      destModel[key] = undefined;\n    }\n  });\n\n  Object.keys(putModel).forEach(key=>{\n    if(key !== EDITABLE_DEFAULT_KEY){\n      destModel[key] = putModel[key];\n    }\n  });\n  \n  return destModel;\n};\n\nconst cloneCurrentModel = function(model){\n  const currentModelValues = {};\n  Object.keys(model).forEach(key=>{\n    if(key !== EDITABLE_DEFAULT_KEY){\n      currentModelValues[key] = model[key];\n    }\n  });\n  return _cloneDeep(currentModelValues);\n}\n\nconst pushEditModel = function(model,pushModel){\n  if(!isEditableState(model)){\n    editableModelize(model)\n  }\n  const editableMeta = model[EDITABLE_DEFAULT_KEY];\n  editableMeta.push(cloneCurrentModel(pushModel));\n  return model;\n}\n\nconst removeEditModel = function(model){\n  if(isEditPossibleDataType(model) && isEditableState(model)){\n    model[EDITABLE_DEFAULT_KEY] = undefined;\n  }\n  return model\n}\n\nconst getOriginalModel = function(model){\n  return _get(model,`[${EDITABLE_DEFAULT_KEY}][0]`);\n}\n\nconst getLastModel = function(model){\n  const changeHistory = _get(model,`[${EDITABLE_DEFAULT_KEY}]`);\n  return changeHistory && changeHistory[changeHistory.length - 1];\n}\n\nexport const isEditable = function(model){\n  if(!isEditPossibleDataType(model)) return false;\n  return isEditableState(model);\n}\n\nexport const enterEditable = function(model){\n  if(!isEditPossibleDataType(model)) return model;\n  if(model[EDITABLE_DEFAULT_KEY] !== undefined){\n    return model;\n  } else {\n    return pushEditModel(model,model);\n  }\n}\n\nexport const exitEditable = function(model, extendModel=undefined){\n  if(!isEditPossibleDataType(model)) return model;\n  if(isEditPossibleDataType(extendModel)){\n    const currentExtendModel = cloneCurrentModel(extendModel);\n    Object.keys(currentExtendModel).forEach(key=>{\n      model[key] = currentExtendModel[key]\n    });\n  }\n  removeEditModel(model);\n  return model;\n}\n\nexport const cancleEditable = function(model){\n  if(!isEditPossibleDataType(model)) return model;\n  const originalModel = getOriginalModel(model);\n  removeEditModel(model);\n  putEditModel(model, originalModel);\n}\n\nexport const commitEditable = function(model){\n  if(!isEditPossibleDataType(model)) return model;\n  return pushEditModel(model,model);\n}\n\nexport const changedEditable = function(model){\n  if(!isEditPossibleDataType(model) || !isEditable(model)) return false;\n  return !_isEqual(cloneCurrentModel(model),getLastModel(model));\n}\n\nexport const beginEditable = function(model){\n  if(!isEditPossibleDataType(model)) return model;\n  if(!isEditableState(model)){\n    enterEditable(model);\n  } else {\n    const historyMeta = model[EDITABLE_DEFAULT_KEY];\n    const beginModel  = historyMeta[0];\n    \n    historyMeta.splice(0,historyMeta.length,beginModel);\n    putEditModel(model,beginModel);\n  }\n  return model;\n}\n\nexport const expandEditable = function(model){\n  if(!model.hasOwnProperty(EDITABLE_DEFAULT_KEY)){\n    model[EDITABLE_DEFAULT_KEY] = undefined;\n  }\n  return model;\n}\n\nexport const editable = function(model){\n  const editableQuery = {\n    isEditable:()=>isEditable(model),\n    isChanged :()=>changedEditable(model),\n    output    :()=>cloneCurrentModel(model),\n    free      :()=>free(model),\n    expand    :()=>expandEditable(model),\n    begin:()=>{\n      beginEditable(model);\n      return editableQuery;\n    },\n    enter:()=>{\n      enterEditable(model);\n      return editableQuery;\n    },\n    exit:(extendModel=undefined)=>{\n      exitEditable(model,extendModel)\n      return editableQuery;\n    },\n    cancle:()=>{\n      cancleEditable(model);\n      return editableQuery;\n    },\n    commit:()=>{\n      commitEditable(model)\n      return editableQuery;\n    }\n  }\n  \n  return editableQuery;\n};"],"file":"editable.js"}