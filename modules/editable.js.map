{"version":3,"sources":["../.src/modules/editable.js"],"names":["EDITABLE_DEFAULT_KEY","isEditPossibleDataType","model","isEditableState","undefined","editableModelize","putEditModel","destModel","setModel","putModel","Object","keys","forEach","key","cloneCurrentModel","currentModelValues","pushEditModel","pushModel","editableMeta","push","removeEditModel","getOriginalModel","getLastModel","changeHistory","length","isEditable","enterEditable","exitEditable","extendModel","currentExtendModel","cancleEditable","originalModel","commitEditable","changedEditable","beginEditable","historyMeta","beginModel","splice","expandEditable","hasOwnProperty","editable","editableQuery","isChanged","output","free","expand","begin","enter","exit","cancle","commit"],"mappings":"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","sourcesContent":["import { \n  free,\n  cloneDeep as _cloneDeep,\n  get as _get,\n  isPlainObject as _isPlainObject,\n  isEqual as _isEqual\n} from '../functions'\n\nconst EDITABLE_DEFAULT_KEY = \"$editable\"\n\nconst isEditPossibleDataType = model=>_isPlainObject(model)\n\nconst isEditableState = model=>model[EDITABLE_DEFAULT_KEY] !== undefined\n\nconst editableModelize = function (model){\n  model[EDITABLE_DEFAULT_KEY] = []\n  return model\n}\n\nconst putEditModel = function (destModel, setModel){\n  const putModel = _cloneDeep(setModel)\n  \n  Object.keys(destModel).forEach(key=>{\n    if(key !== EDITABLE_DEFAULT_KEY){\n      destModel[key] = undefined\n    }\n  })\n\n  Object.keys(putModel).forEach(key=>{\n    if(key !== EDITABLE_DEFAULT_KEY){\n      destModel[key] = putModel[key]\n    }\n  })\n  \n  return destModel\n}\n\nconst cloneCurrentModel = function (model){\n  const currentModelValues = {}\n  Object.keys(model).forEach(key=>{\n    if(key !== EDITABLE_DEFAULT_KEY){\n      currentModelValues[key] = model[key]\n    }\n  })\n  return _cloneDeep(currentModelValues)\n}\n\nconst pushEditModel = function (model, pushModel){\n  if(!isEditableState(model)){\n    editableModelize(model)\n  }\n  const editableMeta = model[EDITABLE_DEFAULT_KEY]\n  editableMeta.push(cloneCurrentModel(pushModel))\n  return model\n}\n\nconst removeEditModel = function (model){\n  if(isEditPossibleDataType(model) && isEditableState(model)){\n    model[EDITABLE_DEFAULT_KEY] = undefined\n  }\n  return model\n}\n\nconst getOriginalModel = function (model){\n  return _get(model, `[${EDITABLE_DEFAULT_KEY}][0]`)\n}\n\nconst getLastModel = function (model){\n  const changeHistory = _get(model, `[${EDITABLE_DEFAULT_KEY}]`)\n  return changeHistory && changeHistory[changeHistory.length - 1]\n}\n\nexport const isEditable = function (model){\n  if(!isEditPossibleDataType(model)) return false\n  return isEditableState(model)\n}\n\nexport const enterEditable = function (model){\n  if(!isEditPossibleDataType(model)) return model\n  if(model[EDITABLE_DEFAULT_KEY] !== undefined){\n    return model\n  } else {\n    return pushEditModel(model, model)\n  }\n}\n\nexport const exitEditable = function (model, extendModel = undefined){\n  if(!isEditPossibleDataType(model)) return model\n  if(isEditPossibleDataType(extendModel)){\n    const currentExtendModel = cloneCurrentModel(extendModel)\n    Object.keys(currentExtendModel).forEach(key=>{\n      model[key] = currentExtendModel[key]\n    })\n  }\n  removeEditModel(model)\n  return model\n}\n\nexport const cancleEditable = function (model){\n  if(!isEditPossibleDataType(model)) return model\n  const originalModel = getOriginalModel(model)\n  removeEditModel(model)\n  putEditModel(model, originalModel)\n}\n\nexport const commitEditable = function (model){\n  if(!isEditPossibleDataType(model)) return model\n  return pushEditModel(model, model)\n}\n\nexport const changedEditable = function (model){\n  if(!isEditPossibleDataType(model) || !isEditable(model)) return false\n  return !_isEqual(cloneCurrentModel(model), getLastModel(model))\n}\n\nexport const beginEditable = function (model){\n  if(!isEditPossibleDataType(model)) return model\n  if(!isEditableState(model)){\n    enterEditable(model)\n  } else {\n    const historyMeta = model[EDITABLE_DEFAULT_KEY]\n    const beginModel  = historyMeta[0]\n    \n    historyMeta.splice(0, historyMeta.length, beginModel)\n    putEditModel(model, beginModel)\n  }\n  return model\n}\n\nexport const expandEditable = function (model){\n  if(!model.hasOwnProperty(EDITABLE_DEFAULT_KEY)){\n    model[EDITABLE_DEFAULT_KEY] = undefined\n  }\n  return model\n}\n\nexport const editable = function (model){\n  const editableQuery = {\n    isEditable: ()=>isEditable(model),\n    isChanged : ()=>changedEditable(model),\n    output    : ()=>cloneCurrentModel(model),\n    free      : ()=>free(model),\n    expand    : ()=>expandEditable(model),\n    begin     : ()=>{\n      beginEditable(model)\n      return editableQuery\n    },\n    enter: ()=>{\n      enterEditable(model)\n      return editableQuery\n    },\n    exit: (extendModel = undefined)=>{\n      exitEditable(model, extendModel)\n      return editableQuery\n    },\n    cancle: ()=>{\n      cancleEditable(model)\n      return editableQuery\n    },\n    commit: ()=>{\n      commitEditable(model)\n      return editableQuery\n    }\n  }\n  \n  return editableQuery\n}\n"],"file":"editable.js"}