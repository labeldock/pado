{"version":3,"sources":["../.src/modules/promise.js"],"names":["PromiseClass","Promise","resolveFn","resolve","rejectFn","reject","newPromise","fn","r","c","maybeAwaiter","then","catch","PromiseFunction","promise","all","timeout","time","setTimeout","valueOf","maybeQ","abortMessage","Object","defineProperty","get","abort","notifyConsole","undefined","console","warn","defer","arguments","promisify","asyncErrCallbackfn","argumentNames","slice","promisified","args","Array","from","apply","concat","err","error","callbakArgs","length","reduce","dest","name","index","wheel","tasks","option","Error","some","e","finished","limit","parseInt","taskLength","wheelTick","resetScope","nextWheelTick","tick","value","tickScope","nowAction","isActiveFn","nextTickFn","passValue","next","isActive","Math","floor","thenStack","catchStack","deferReset","resetTick","stop","forEach","start","reset","wheelControls","push","sequance","funcArray","opts","concurrent","Number","POSITIVE_INFINITY","interval","repeat","sequanceTaskEntries","fill","sequanceLength","sequanceComplete","sequanceReseult","sequanceOperator","output","entry","limitOutput","operate","input","result"],"mappings":"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","sourcesContent":["import { asArray, asObject, isNumber, likePromise, turn, argumentNamesBy } from '../functions';\nimport { operate } from './operate';\n\nconst PromiseClass = Promise;\n\nconst resolveFn = PromiseClass.resolve;\nconst rejectFn = PromiseClass.reject;\n\nexport const newPromise=(fn)=>(new PromiseClass((r,c)=>{\n  const maybeAwaiter = fn(r,c);\n  likePromise(maybeAwaiter) && maybeAwaiter.then(r).catch(c);\n}));\n\nconst PromiseFunction = (fn)=>newPromise(fn);\n\nexport const promise = PromiseFunction;\nexport const all     = PromiseFunction.all = Promise.all;\nexport const resolve = PromiseFunction.resolve = resolveFn;\nexport const reject  = PromiseFunction.reject = rejectFn;\n\nexport const timeout = PromiseFunction.timeout = function(fn,time){\n  if(typeof fn === \"number\"){\n    return newPromise( resolve => setTimeout(() => resolve(time), fn) );\n  } else {\n    return newPromise( resolve => setTimeout(() => resolve(typeof fn === \"function\" ? fn() : fn),time) );\n  }\n};\n\nexport const valueOf = PromiseFunction.valueOf = function(maybeQ){\n  return newPromise(function(resolve,reject){\n    likePromise(maybeQ) ?\n    maybeQ.then(resolve).catch(reject) :\n    resolve(maybeQ) ;\n  });\n};\n\nconst abortMessage = new (function() {\n  Object.defineProperty(this, \"message\", {\n    get: ()=>\":abort\"\n  });\n  Object.defineProperty(this, \"abort\", {\n    get: ()=>true\n  });\n})();\n\nexport const abort = PromiseFunction.abort = function(notifyConsole = undefined) {\n  return new PromiseClass((resolve, reject)=>{\n    if(notifyConsole === true) {\n      console.warn(\"abort promise\");\n    }\n    reject(abortMessage);\n  });\n};\n\nexport const defer = PromiseFunction.defer = function(){\n  var resolve, reject;\n  var promise = new PromiseClass(function() {\n    resolve = arguments[0];\n    reject = arguments[1];\n  });\n  return {\n    resolve: resolve,\n    reject: reject,\n    promise: promise\n  };\n};\n\nexport const promisify = PromiseFunction.promisify = function(asyncErrCallbackfn){\n  const argumentNames = argumentNamesBy(asyncErrCallbackfn).slice(1);\n  const promisified   = function(){\n    const args = Array.from(arguments);\n    return new Promise((resolve, reject)=>{\n      asyncErrCallbackfn.apply(this, args.concat(function (err) {\n        const [error, ...callbakArgs] = Array.from(arguments);\n        if (error) {\n          reject(error);\n        } else if (argumentNames.length && callbakArgs.length > 1) {\n          resolve(argumentNames.reduce((dest, name, index)=>{\n            dest[name] = callbakArgs[index];\n            return dest;\n          },{}));\n        } else {\n          resolve(callbakArgs[0]);\n        }\n      }));\n    });\n  };\n  return function(){\n    return promisified.apply(this,Array.from(arguments))\n  };\n};\n\nexport const wheel = PromiseFunction.wheel = function(tasks, option) {\n\n  if(!(tasks instanceof Array)) {\n    return PromiseFunction.reject(new Error(\"tasks must be array\"));\n  }\n\n  if(!tasks.length || !tasks.some(e=>typeof e === \"function\")) {\n    return PromiseFunction.reject(new Error(\"not found wheel executable\"));\n  }\n\n  if(!tasks.some(e=>(typeof e !== \"function\" || typeof e !== \"number\"))) {\n    return PromiseFunction.reject(new Error(\"wheel task only function or number executable\"));\n  }\n\n  if(typeof option !== \"object\") {\n    option = {};\n  }\n\n  let finished = false;\n  let defer;\n  const limit = (typeof option.limit === \"number\" && option.limit > 0) ? parseInt(option.limit, 10) : 10000;\n  const taskLength = tasks.length;\n  let wheelTick = 0;\n  let resetScope = 0;\n  const nextWheelTick = (tick, value, tickScope)=>{\n    const nowAction = tasks[turn(tick, taskLength, 1)];\n\n    const isActiveFn = ()=>{\n      return tickScope === resetScope;\n    };\n\n    const nextTickFn = passValue=>{\n      // if reset called\n      if(!isActiveFn()) return;\n      // if over tick\n      if(wheelTick > limit) {\n        return defer.reject(new Error(\"limit\"));\n      }\n      if(finished === false) {\n        nextWheelTick(wheelTick++, passValue, tickScope);\n      }\n    };\n\n    if(typeof nowAction === \"function\") {\n      nowAction(\n        {\n          value,\n          next    : nextTickFn,\n          isActive: isActiveFn,\n          resolve : defer.resolve,\n          reject  : defer.reject\n        },\n        Math.floor(tick / tasks.length),\n        tick\n      );\n    } else if(typeof nowAction === \"number\") {\n      setTimeout(()=>{ nextTickFn(value); }, nowAction);\n    }\n  };\n  \n  const thenStack  = [\n    e=>{\n      if(finished === null) return PromiseFunction.abort();\n      finished = true;\n      return e;\n    }\n  ];\n  const catchStack = [\n    e=>{\n      if(finished === null) return PromiseFunction.abort();\n      finished = true;\n      return PromiseFunction.reject(e);\n    }\n  ];\n  \n  const deferReset = (resetTick)=>{\n    defer && defer.stop();\n    //\n    defer = PromiseFunction.defer();\n    thenStack.forEach(fn=>defer.promise.then(fn));\n    catchStack.forEach(fn=>defer.promise.catch(fn));\n    \n    //\n    defer.stop = (resetTick)=>{\n      finished = null;\n      resetScope += 1;\n    };\n    \n    defer.start = (resetTick)=>{\n      if(finished === null) {\n        finished = false;\n        wheelTick = typeof resetTick === \"number\" ? resetTick : 0;\n        nextWheelTick(wheelTick++, option.value, resetScope);\n      }\n    };\n    //\n    defer.reset = deferReset;\n    //\n    finished = null;\n    defer.start(resetTick);\n  };\n  \n  deferReset(0);\n  \n  const wheelControls = {\n    ...defer,\n    then (fn){\n      defer.promise.then(fn);\n      thenStack.push(fn);\n      return wheelControls;\n    },\n    catch (fn){\n      defer.promise.catch(fn);\n      catchStack.push(fn);\n      return wheelControls;\n    }\n  };\n  \n  return wheelControls;\n}\n\nexport const sequance = PromiseFunction.sequance = function(funcArray, opts){\n  return newPromise(function(resolve, reject){\n    const option = asObject(opts,\"concurrent\");\n      \n    if(option.concurrent === true){\n      option.concurrent = Number.POSITIVE_INFINITY;\n    } else if(!isNumber(option.concurrent) || option.concurrent < 1){\n      option.concurrent = 1;\n    }\n      \n    if(!isNumber(option.interval) || option.interval < -1){\n      option.interval = -1;\n    }\n      \n    if(!isNumber(option.repeat) || option.repeat < 1){\n      option.repeat = 1;\n    }\n      \n    //set task with repeat\n    const sequanceTaskEntries = Array(option.repeat)\n    .fill(asArray(funcArray))\n    .reduce((dest,tasks)=>{\n      tasks.forEach((fn,index)=>dest.push([index,fn]));\n      return dest;\n    },[]);\n      \n    const sequanceLength = sequanceTaskEntries.length;\n    let sequanceComplete = 0;\n    const sequanceReseult = Array(sequanceTaskEntries.length);\n      \n    const sequanceOperator = operate({\n      output:async ({ entry })=>{\n        if(option.interval > -1){\n          await PromiseFunction.timeout(option.interval);\n        }\n        return entry;\n      },\n      limitOutput:1\n    })\n    .operate({\n      concurrent:option.concurrent,\n      input:async ({ entry })=>{\n        const [index, fn] = entry;\n        entry.push(await fn());\n        return entry;\n      },\n      output:({ entry })=>{\n        const [index, fn, result] = entry;\n        sequanceReseult[index] = result;\n        sequanceComplete++;\n        if(sequanceComplete === sequanceLength){\n          resolve(sequanceReseult);\n        }\n      }\n    })\n    .concat(sequanceTaskEntries);\n  });\n};"],"file":"promise.js"}