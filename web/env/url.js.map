{"version":3,"sources":["../../packages/pado/web/env/url.js"],"names":["readUrl","inputUrl","info","url","window","document","URL","toString","exec","e","console","error","valid","protocol","divider","userinfo","hostname","port","substring","path","query","fragment","filename","host","params","result","substr","split","forEach","onePiece","entry","decodeURI","serialize","obj","transform","invalid","Object","keys","key","value","stringValue","each","val","push","length","join"],"mappings":"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","sourcesContent":["import { isArray } from '../../functions'\n\nexport const readUrl = function (inputUrl){\n  let info\n  let url \n    \n  try {\n    url = inputUrl || window.document.URL.toString()\n    info = /([\\w]+)(\\:[\\/]+)([^/]*\\@|)([\\w\\d\\.\\-\\_\\+]+)(\\:[\\d]+|)(\\/|)([\\w\\d\\.\\/\\-\\_\\;\\=]+|)(\\?[\\d\\w\\=\\&\\%\\,\\.\\/\\(\\)-]+|)(\\#[\\d\\w]*|)/.exec(url)\n  } catch (e){\n    info = null\n  }\n  \n  if(info === null){\n    console.error(\"faild parse url\", inputUrl)\n    return {\n      url  : url || null,\n      valid: false\n    }\n  }\n  \n  const protocol = info[1]\n  const divider = info[2]\n  const userinfo = info[3]\n  const hostname = info[4]\n  const port = info[5].substring(1)\n  const path = info[6] + info[7]\n  const query = info[8]\n  const fragment = info[9]\n  const filename = /(\\/|)([\\w\\d\\.\\-\\_]+|)$/.exec(info[6] + info[7])[2]\n  const host = info[1] + info[2] + info[4] + info[5]\n  const params = (function (){\n    const result = {}\n    if(query){\n      query.substr(1).split(\"&\").forEach((onePiece)=>{\n        const entry = onePiece.split(\"=\")\n        result[decodeURI(entry[0])] = decodeURI(entry[1])\n      })\n    }\n    return result\n  }())\n\n  return {\n    url,\n    protocol,\n    divider,\n    userinfo,\n    hostname,\n    port,\n    path,\n    query,\n    fragment,\n    filename,\n    host,\n    params,\n    valid: true\n  }\n}\n    \nexport const serialize = function (obj, transform){\n  const params = []\n  let invalid  = []\n  \n  Object.keys(obj).forEach(key=>{\n    let value = obj[key]\n    let stringValue = \"\"\n\n    if(typeof value === \"undefined\"){\n      return\n    } else if(value === null){\n      stringValue = \"\"\n    } else if(isArray(value)){\n      return value.each((val)=>{\n        typeof transform === \"function\"\n          ? params.push(transform(key) + \"=\" + transform(val))\n          : params.push(key + \"=\" + val)\n      })\n    } else if(typeof value === \"object\"){\n      return invalid.push(key)\n    } else {\n      stringValue = value + \"\"\n    }\n          \n    typeof transform === \"function\"\n      ? params.push(transform(key) + \"=\" + transform(stringValue))\n      : params.push(key + \"=\" + stringValue)\n  })\n      \n  if(invalid.length){\n    invalid = null\n  }\n  \n  return params.join(\"&\")\n}\n"],"file":"url.js"}