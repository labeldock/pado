{"version":3,"sources":["../../.src/web/helper/dragHelper.js"],"names":["DEVICE_EVENT","window","DocumentTouch","document","TOUCH_DEVICE","START","MOVE","END","dragRetainCount","bindDraggingAttribute","body","setAttribute","removeAttribute","addEventListener","e","preventDefault","passive","touchFixX","touchFixY","pointerParse","clientX","clientY","touches","x","y","touchClientX","touchClientY","DragHelper","element","option","$element","eq","dragElement","startFn","moveFn","endFn","dragParams","firstDrag","lastDrag","resetOptions","getOptions","getCurrentPointerDrag","originalEvent","pointerDrag","moveX","moveY","offsetX","offsetY","leftValue","offset","left","topValue","top","dragEnter","elementOffset","predict","pointer","undefined","event","dragMove","dragExit","removeEventListener"],"mappings":"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","sourcesContent":["import $ from '../plugins/jquery'\nimport { rebase } from '../../functions'\n\n// eslint-disable-next-line no-undef\nconst DEVICE_EVENT = (('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch)\n  ? {\n    TOUCH_DEVICE: true,\n    START       : 'touchstart',\n    MOVE        : 'touchmove',\n    END         : 'touchend'\n  }\n  : {\n    TOUCH_DEVICE: false,\n    START       : 'mousedown',\n    MOVE        : 'mousemove',\n    END         : 'mouseup'\n  }\n\n//\nlet dragRetainCount = 0\n\n//\nconst bindDraggingAttribute = function (){\n  if(dragRetainCount > 0){\n    document.body.setAttribute(\"dragging\", \"\")\n  } else {\n    document.body.removeAttribute(\"dragging\")\n  }\n}\n\n//\nDEVICE_EVENT.TOUCH_DEVICE && window.addEventListener(\"touchmove\", (e)=>{\n  dragRetainCount > 0 && e.preventDefault()\n}, {passive: false})\n\n\n//드래그\nlet touchFixX\nlet touchFixY\nconst pointerParse = ({ clientX, clientY, touches })=>{\n  if(touches){\n    if(!touches[0]){\n      return {\n        x: touchFixX,\n        y: touchFixY\n      }\n    };\n    \n    const { clientX:touchClientX, clientY:touchClientY } = touches[0]\n    touchFixX = touchClientX\n    touchFixY = touchClientY\n    \n    return {\n      x: touchClientX,\n      y: touchClientY\n    }\n  }\n  return {\n    x: clientX,\n    y: clientY\n  }\n}\n\nexport default function DragHelper (element, option){\n  const $element = $(element).eq(0)\n  const [ dragElement ] = $element\n  let startFn\n  let moveFn\n  let endFn\n  \n  let dragParams = null\n  let firstDrag  = null\n  let lastDrag   = null\n  \n  const resetOptions = function (){\n    const getOptions = rebase(typeof option === \"function\" ? option({ element: $element }) : option)\n    startFn = getOptions[\"start\"]\n    moveFn = getOptions[\"move\"]\n    endFn = getOptions[\"end\"]\n  }\n  \n  const getCurrentPointerDrag = function (originalEvent){\n    const pointerDrag = pointerParse(originalEvent)\n  \n    //현재 이동한 거리\n    pointerDrag.moveX = pointerDrag.x - lastDrag.x\n    pointerDrag.moveY = pointerDrag.y - lastDrag.y\n    \n    //처음으로부터 변경된 거리\n    pointerDrag.offsetX = pointerDrag.x - firstDrag.x\n    pointerDrag.offsetY = pointerDrag.y - firstDrag.y\n    \n    //처음으로 부터 변경되어 엘리먼트 오프셋 크기\n    pointerDrag.leftValue = dragParams.offset.left + pointerDrag.offsetX\n    pointerDrag.topValue = dragParams.offset.top + pointerDrag.offsetY\n    \n    pointerDrag.left = pointerDrag.leftValue + \"px\"\n    pointerDrag.top = pointerDrag.topValue + pointerDrag.offsetY + \"px\"\n    \n    return pointerDrag\n  }\n  \n  const dragEnter = function (originalEvent){\n    //init\n    resetOptions()\n    \n    //\n    const elementOffset = $element.predict()\n    const pointerDrag   = pointerParse(originalEvent)\n    \n    firstDrag = pointerDrag\n    lastDrag = pointerDrag\n    \n    dragParams = { offset: elementOffset, pointer: undefined, event: originalEvent }\n    dragParams.pointer = getCurrentPointerDrag(originalEvent)\n    \n    startFn && startFn(dragParams)\n    \n    document.addEventListener(DEVICE_EVENT.MOVE, dragMove)\n    document.addEventListener(DEVICE_EVENT.END, dragExit)\n    \n    dragRetainCount += 1\n    bindDraggingAttribute()\n  }\n  \n  const dragMove = function (originalEvent){\n    const pointerDrag = pointerParse(originalEvent)\n    \n    if(!moveFn){\n      lastDrag = pointerDrag\n      return\n    } else {\n      dragParams.pointer = getCurrentPointerDrag(originalEvent)\n      dragParams.event = originalEvent\n      moveFn(dragParams)\n      lastDrag = pointerDrag\n    }\n  }\n  \n  const dragExit = function (originalEvent){\n    dragParams.pointer = getCurrentPointerDrag(originalEvent)\n    dragParams.event = originalEvent\n    endFn && endFn(dragParams)\n    dragParams = undefined\n    \n    document.removeEventListener(DEVICE_EVENT.MOVE, dragMove)\n    document.removeEventListener(DEVICE_EVENT.END, dragExit)\n    \n    dragRetainCount -= 1\n    bindDraggingAttribute()\n  }\n  \n  dragElement.addEventListener(\"dragstart\", function (e){\n    e.preventDefault()\n  })\n  \n  dragElement.addEventListener(DEVICE_EVENT.START, dragEnter)\n  \n  return $element\n}\n"],"file":"dragHelper.js"}