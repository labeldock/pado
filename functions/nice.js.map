{"version":3,"sources":["../.src/src/functions/nice.js"],"names":["limitOf","limitNumber","number","max","min","Infinity","numbers","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","d","i","l","length"],"mappings":";;;;;;;;;;;;;;;;;;;;AAEO,MAAMA,UAAW,YAAW;AACjC,QAAMC,cAAc,SAAdA,WAAc,CAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA2B;AAC7C,UAAG,OAAOF,MAAP,IAAiB,QAApB,EAA8B;AAC5B,YAAG,2BAAcA,MAAd,KAAyBA,WAAWG,QAAvC,EAAiD;AAC/C,iBAAOD,GAAP;AACD;;AACD,YAAG,sBAASA,GAAT,KAAkBF,SAASE,GAA9B,EAAoC;AAClC,iBAAOA,GAAP;AACD;;AACD,YAAG,sBAASD,GAAT,KAAkBD,SAASC,GAA9B,EAAoC;AAClC,iBAAOA,GAAP;AACD;AACF;;AACD,aAAOD,MAAP;AACD,KAbD;;AAcA,QAAMF,UAAU,SAAVA,OAAU,CAASM,OAAT,EAAkBH,GAAlB,EAAuBC,GAAvB,EAA4B;AAC1C,UAAG,OAAOD,GAAP,KAAe,QAAlB,EAA4B;AAAEA,cAAMI,OAAOC,iBAAb;AAAiC;;AAC/D,UAAG,OAAOJ,GAAP,KAAe,QAAlB,EAA4B;AAC1B,YAAGA,QAAQ,IAAR,IAAgB,2BAAcA,GAAd,CAAnB,EAAuC;AACrCA,gBAAMG,OAAOE,iBAAb;AACD,SAFD,MAEO;AACLL,gBAAM,CAAN;AACD;AACF;;AACD,UAAG,qBAAQE,OAAR,CAAH,EAAqB;AACnB,aAAI,IAAII,IAAIJ,OAAR,EAAiBK,IAAI,CAArB,EAAwBC,IAAIF,EAAEG,MAAlC,EAA0CF,IAAIC,CAA9C,EAAiDD,GAAjD,EAAsD;AACpDD,YAAEC,CAAF,IAAOV,YAAYS,EAAEC,CAAF,CAAZ,EAAkBR,GAAlB,EAAuBC,GAAvB,CAAP;AACD;;AACD,eAAOE,OAAP;AACD,OALD,MAKO;AACL,eAAOL,YAAYK,OAAZ,EAAqBH,GAArB,EAA0BC,GAA1B,CAAP;AACD;AACF,KAjBD;;AAkBA,WAAOJ,OAAP;AACD,GAlCuB,EAAjB","sourcesContent":["import { isNumber, isArray, isAbsoluteNaN } from './isLike';\n\nexport const limitOf = (function() {\n  const limitNumber = function(number, max, min) {\n    if(typeof number == \"number\") {\n      if(isAbsoluteNaN(number) || number === Infinity) {\n        return min;\n      }\n      if(isNumber(min) && (number < min)) {\n        return min;\n      }\n      if(isNumber(max) && (number > max)) {\n        return max;\n      }\n    }\n    return number;\n  };\n  const limitOf = function(numbers, max, min) {\n    if(typeof max !== \"number\") { max = Number.POSITIVE_INFINITY; }\n    if(typeof min !== \"number\") {\n      if(min === null || isAbsoluteNaN(min)) {\n        min = Number.NEGATIVE_INFINITY;\n      } else {\n        min = 0;\n      }\n    }\n    if(isArray(numbers)) {\n      for(var d = numbers, i = 0, l = d.length; i < l; i++) {\n        d[i] = limitNumber(d[i], max, min);\n      }\n      return numbers;\n    } else {\n      return limitNumber(numbers, max, min);\n    }\n  };\n  return limitOf;\n}());"],"file":"nice.js"}