{"version":3,"sources":["../.src/src/functions/reducer.js"],"names":["castString","text","defaultOrder","finder","at","idxs","hist","count","pin","strlen","length","order","next","start","size","findedIndex","indexOf","RegExp","cs","substring","ma","match","string","struct","end","noneCastStruct","nextOrder","push","castPath","pathParam","get","target","path","eval","call","apply","Array","prototype","slice","arguments","hasProperty","hasOwnProperty","hasValueProperty","obj","value","key","i","l","turn","p","ts","abs","Math","floor","max","numberList","result","forEach","n"],"mappings":"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","sourcesContent":["import { \n  isArray,\n  isNumber,\n  isEmpty,\n  likeRegexp,\n  likeString,\n  likeObject\n} from './isLike'\n\nimport {\n  asArray\n} from './cast'\n\nimport {\n  all\n} from './enumerator'\n\nimport _get from 'lodash/get';\n\nexport const castString = function(text,defaultOrder,finder,at){\n  if(typeof text === \"string\" || typeof text === \"number\"){\n    let idxs  = []\n    let hist  = []\n    let count = 0\n    let pin   = (!at || !isNumber(at) || at < 0)?0:at\n    let strlen= text.length\n    let order = defaultOrder\n    let next\n      \n    if(typeof finder !== \"function\"){ \n      finder = void 0\n    }\n      \n    do {\n      let start = void 0;\n      let size  = void 0;\n        \n      if(typeof order === \"string\"){\n        let findedIndex = text.indexOf(order,pin)\n        if(findedIndex !== -1){\n          start = findedIndex\n          size  = order.length\n        }\n      } else if (order instanceof RegExp) {\n        let cs = text.substring(pin || 0);\n        let ma = cs.match(order);\n        if(ma){\n          start = cs.indexOf(ma) + (ma.length - 1)\n          size  = ma.length\n        } \n      }\n        \n      count++;\n        \n      if(typeof start !== \"undefined\"){\n        let string = text.substring(start,start + size);\n        let struct = {string,start,size,end:start + size}\n          \n        //before pin\n        if(pin < start){\n          let noneCastStruct = {\n            string:text.substring(pin,start),\n            start:pin,\n            size:start-pin,\n            end:start\n          }\n          finder && finder(false,noneCastStruct,hist,count)\n        }\n          \n        //now pin\n        pin = start + size;\n\n        //order\n        let nextOrder = finder && finder(true,struct,hist,count);\n        if(likeRegexp(nextOrder)){\n          order = nextOrder\n        } else {\n          order = defaultOrder\n        }\n          \n        //idx\n        idxs.push(start)\n        hist.push({string,start,size})\n          \n        //to be countinue\n        if(pin >= strlen){\n          next = false\n        } else {\n          next = true;\n        }\n      } else {\n        let struct = {\n          string:text.substring(pin,strlen),\n          start:pin,\n          size:start-pin,\n          end:strlen\n        }\n        finder && finder(false,struct,hist,count);\n        next = false;\n      }\n        \n    } while((count > 1000) ? false : next)\n    return idxs;\n  }\n}\n\nexport const castPath = function(pathParam){\n  if(isArray(pathParam)){\n    return pathParam;\n  }\n  if(likeString(pathParam)){\n    if(isNumber(pathParam)){\n      return [pathParam]\n    }\n    if(typeof pathParam === \"string\"){\n      \n    }\n  }\n  return [];\n};\n\nexport const get = function(target,path){\n  if(typeof target === \"object\"){\n    switch(typeof path){\n      case \"number\": path += \"\";\n      case \"string\": return path.indexOf(\"[\") == 0 ? eval(\"target\"+path) : eval(\"target.\"+path);\n      case \"function\": return path.call(this,target);\n    }\n  } else if(typeof target === \"function\"){\n    return target.apply(this,Array.prototype.slice.call(arguments,1));\n  }\n  return target;\n}\n\nexport const hasProperty = function(target,pathParam){\n  return all(castPath(pathParam),path=>{\n    if(likeObject(target) && likeString(path) && target.hasOwnProperty(path)){\n      target = target[path];\n      return true;\n    }\n    return false;\n  });\n}\n\nexport const hasValueProperty = function(obj,value,key){\n  if(arguments.length == 1 && likeObject(obj)) return isEmpty(obj);\n  if(isArray(obj)) for(var i=0,l=obj.length;i<l;i++) if(obj[i] === value) return true;\n  if(likeObject(obj)){\n    if(key){\n      return _get(obj,key) === value;\n    } else {\n      for(var key in obj) if(_get(obj,key) === value) return true;\n    }\n  }\n  return false;\n};\n\nexport const turn = function(i, p, ts) {\n  if(i < 0) { var abs = Math.abs(i / ts); i = p - (abs > p ? abs % p : abs); }\n  ts = ts || 1; i = Math.floor(i / ts);\n  return (p > i) ? i : i % p;\n};\n\nexport const max = function(numberList){\n  let result;\n  asArray(numberList).forEach(n=>{\n    if(isNumber(n)){\n      if(typeof result !== \"number\"){\n        result = n;\n        return;\n      } \n      if(result < n){\n        result = n;\n      }\n    }\n  })\n  return result;\n};"],"file":"reducer.js"}