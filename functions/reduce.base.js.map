{"version":3,"sources":["../.src/functions/reduce.base.js"],"names":["baseCut","collection","cutLength","emptyDefault","useFill","data","rest","length","splice","Number","POSITIVE_INFINITY"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAYO,MAAMA,UAAU,SAAVA,OAAU,CAAUC,UAAV,EAAsBC,SAAtB,EAAiCC,YAAjC,EAA+CC,OAA/C,EAAuD;AAC5E,QAAIC,OAAO,mBAAQJ,UAAR,CAAX;AAAgC,QAAIK,IAAJ;AAChCJ,gBAAY,sBAASA,SAAT,IAAsBA,SAAtB,GAAkC,CAA9C;;AAEA,QAAGG,KAAKE,MAAL,GAAcL,SAAjB,EAA2B;AACzBI,aAAOD,KAAKG,MAAL,CAAYN,SAAZ,EAAuBO,OAAOC,iBAA9B,CAAP;AACA,aAAO,CAACL,IAAD,EAAOC,IAAP,CAAP;AACD;;AAEDF,gBAAY,IAAZ,KAAqBC,OAAO,kBAAKA,IAAL,EAAWH,SAAX,EAAsBC,YAAtB,CAA5B;AACA,WAAO,CAACE,IAAD,EAAO,EAAP,CAAP;AACD,GAXM","sourcesContent":["import { \n  isNumber\n} from './isLike'\n\nimport {\n  asArray\n} from './cast'\n\nimport {\n  fill\n} from './reform'\n\nexport const baseCut = function (collection, cutLength, emptyDefault, useFill){\n  let data = asArray(collection); let rest\n  cutLength = isNumber(cutLength) ? cutLength : 1\n  \n  if(data.length > cutLength){\n    rest = data.splice(cutLength, Number.POSITIVE_INFINITY)\n    return [data, rest]\n  }\n  \n  useFill === true && (data = fill(data, cutLength, emptyDefault))\n  return [data, []]\n}\n"],"file":"reduce.base.js"}