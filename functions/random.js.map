{"version":3,"sources":["../.src/functions/random.js"],"names":["rand64","rand64Token","length","codeAt","codeLength","parseInt","result","i","l","charAt","Math","random","tokenize","seed","digits","floor","abs","sin","Number","replace","s","charCodeAt","toString","randRange","rangeValue","nice","start","end","ceil"],"mappings":";;;;;;;;;;;;;;;;;;;;AAEO,MAAMA,SAAU,YAAU;AAC/B,QAAIC,cAAc,kEAAlB;AACA,WAAO,UAASC,MAAT,EAAgBC,MAAhB,EAAuBC,UAAvB,EAAkC;AACvCF,eAAc,2BAAcA,MAAd,CAAD,GAA0B,CAA1B,GAA8BG,SAASH,MAAT,CAA3C;AACAC,eAAc,2BAAcA,MAAd,CAAD,GAA0B,CAA1B,GAA8BE,SAASF,MAAT,CAA3C;AACAC,mBAAc,2BAAcA,UAAd,CAAD,GAA8B,KAAKD,MAAnC,GAA4CE,SAASD,UAAT,CAAzD;AACA,UAAIE,SAAS,EAAb;;AACA,WAAI,IAAIC,IAAE,CAAN,EAAQC,IAAEN,MAAd,EAAqBK,IAAEC,CAAvB,EAAyBD,GAAzB;AAA8BD,iBAASA,SAASL,YAAYQ,MAAZ,CAAoBN,SAASE,SAASK,KAAKC,MAAL,KAAgBP,UAAzB,CAA7B,CAAlB;AAA9B;;AACA,aAAOE,MAAP;AACD,KAPD;AAQD,GAVsB,EAAhB;;;;AAaA,MAAMM,WAAW,SAAXA,QAAW,CAASC,IAAT,EAAcC,MAAd,EAAqB;AAC3C,WAAOJ,KAAKK,KAAL,CAAYL,KAAKM,GAAL,CAASN,KAAKO,GAAL,CAASC,OAAO,CAACL,OAAO,EAAR,EAAYM,OAAZ,CAAoB,IAApB,EAAyB,UAASC,CAAT,EAAWb,CAAX,EAAa;AAAE,aAAOa,EAAEC,UAAF,CAAa,CAAb,CAAP;AAAyB,KAAjE,CAAP,CAAT,IAAuF,QAAhG,CAAD,GAA8G,QAAzH,EAAmIC,QAAnI,CAA4IR,UAAQ,EAApJ,CAAP;AACD,GAFM;;;;AAKA,MAAMS,YAAY,SAAZA,SAAY,CAASC,UAAT,EAAoBC,IAApB,EAAyB;AAAA,sBACzB,wBAAWD,UAAX,CADyB;AAAA,QACxCE,KADwC,eACxCA,KADwC;AAAA,QACjCC,GADiC,eACjCA,GADiC;;AAEhD,QAAMrB,SAASoB,QAAShB,KAAKC,MAAL,MAAegB,MAAID,KAAnB,CAAxB;AACA,WAAOD,SAAS,IAAT,GAAgBf,KAAKkB,IAAL,CAAUtB,MAAV,CAAhB,GAAoCA,MAA3C;AACD,GAJM","sourcesContent":["import { isAbsoluteNaN } from './isLike'\n\nexport const rand64 = (function(){\n  var rand64Token = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  return function(length,codeAt,codeLength){\n    length     = (isAbsoluteNaN(length)) ? 1 : parseInt(length);\n    codeAt     = (isAbsoluteNaN(codeAt)) ? 0 : parseInt(codeAt);\n    codeLength = (isAbsoluteNaN(codeLength)) ? 62 - codeAt : parseInt(codeLength);\n    var result = \"\";\n    for(var i=0,l=length;i<l;i++) result = result + rand64Token.charAt( codeAt + parseInt(Math.random() * codeLength) );\n    return result;\n  }\n}())\n\n\nexport const tokenize = function(seed,digits){\n  return Math.floor((Math.abs(Math.sin(Number((seed + \"\").replace(/./g,function(s,i){ return s.charCodeAt(0); }))) * 16777215)) % 16777215).toString(digits||16) \n}\n\nimport { rangeModel } from './matrix';\nexport const randRange = function(rangeValue,nice){\n  const { start, end } = rangeModel(rangeValue);\n  const result = start + (Math.random()*(end-start));\n  return nice === true ? Math.ceil(result) : result;\n};"],"file":"random.js"}