{"version":3,"sources":["../.src/functions/hack.js"],"names":["argumentNamesBy","getArgs","fn","args","toString","match","split","map","s","trim","filter","n","scopelizeBy","evalCommand","indexOf","command","scopeBeforeFn","scope","info","params","fnArgs","Object","keys","forEach","key","push","makeFn","Function","apply","func","scoped"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAO,MAAMA,eAAe,GAAG,SAASC,OAAT,CAAkBC,EAAlB,EAAqB;AAClD,QAAG,OAAOA,EAAP,KAAc,UAAjB,EAA6B,OAAO,EAAP,CADqB,CAEhD;AACA;;AACF,QAAIC,IAAI,GAAGD,EAAE,CAACE,QAAH,GAAcC,KAAd,CAAoB,kDAApB,EAAwE,CAAxE,CAAX;AACA,QAAG,CAACF,IAAJ,EAAU,OAAO,EAAP;AACV,WAAOA,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgBC,GAAhB,CAAoB,UAAAC,CAAC;AAAA,aAAEA,CAAC,CAACC,IAAF,EAAF;AAAA,KAArB,EAAiCC,MAAjC,CAAwC,UAAAC,CAAC;AAAA,aAAEA,CAAF;AAAA,KAAzC,CAAP;AACD,GAPM;;;;AASA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAUC,WAAV,EAAsB;AAC/C,QAAGA,WAAW,CAACC,OAAZ,CAAoB,QAApB,KAAiC,CAAC,CAArC,EAAuC;AACrCD,MAAAA,WAAW,iBAAeA,WAA1B;AACD;;AAED,QAAME,OAAO,GAAGF,WAAhB;;AACA,QAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAAUC,KAAV,EAAiBC,IAAjB,EAAsB;AAC1C,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMC,MAAM,GAAG,EAAf;AAEAC,MAAAA,MAAM,CAACC,IAAP,CAAYL,KAAZ,EAAmBM,OAAnB,CAA2B,UAAAC,GAAG,EAAE;AAC9BL,QAAAA,MAAM,CAACM,IAAP,CAAYR,KAAK,CAACO,GAAD,CAAjB;AACAJ,QAAAA,MAAM,CAACK,IAAP,CAAYD,GAAZ;AACD,OAHD;AAKAJ,MAAAA,MAAM,CAACK,IAAP,CAAYV,OAAZ;AAEA,UAAMW,MAAM,GAAGC,QAAQ,CAACC,KAAT,CAAeD,QAAf,EAAyBP,MAAzB,CAAf;;AAEA,UAAG,OAAOF,IAAP,KAAgB,UAAnB,EAA8B;AAC5BA,QAAAA,IAAI,CAAC;AACHW,UAAAA,IAAI,EAAIH,MADL;AAEHvB,UAAAA,IAAI,EAAIiB,MAFL;AAGHD,UAAAA,MAAM,EAAEA;AAHL,SAAD,CAAJ;AAKD;;AAED,aAAOO,MAAM,CAACE,KAAP,CAAa,KAAK,CAAlB,EAAqBT,MAArB,CAAP;AACD,KAtBD;;AAwBAH,IAAAA,aAAa,CAACc,MAAd,GAAuB,YAAW;AAChC,aAAOf,OAAP;AACD,KAFD;;AAIA,WAAOC,aAAP;AACD,GAnCM","sourcesContent":["export const argumentNamesBy = function getArgs (fn){\n  if(typeof fn !== \"function\") return []\n    // normal -  function[^\\(]*?\\(([^)]*)\\)\n    // arrow  -  \\([\\)]*\\)\\s*\\=\\>\\s*\\{\n  var args = fn.toString().match(/function[^\\(]*?\\(([^)]*)\\)|\\([\\)]*\\)\\s*\\=\\>\\s*\\{/)[1]\n  if(!args) return []\n  return args.split(',').map(s=>s.trim()).filter(n=>n)\n}\n\nexport const scopelizeBy = function (evalCommand){\n  if(evalCommand.indexOf(\"return\") == -1){\n    evalCommand = `  return ${evalCommand}`\n  }\n\n  const command = evalCommand\n  const scopeBeforeFn = function (scope, info){\n    const params = []\n    const fnArgs = []\n    \n    Object.keys(scope).forEach(key=>{\n      params.push(scope[key])\n      fnArgs.push(key)\n    })\n    \n    fnArgs.push(command)\n    \n    const makeFn = Function.apply(Function, fnArgs)\n    \n    if(typeof info === \"function\"){\n      info({\n        func  : makeFn,\n        args  : fnArgs,\n        params: params\n      })\n    }\n    \n    return makeFn.apply(void 0, params)\n  }\n  \n  scopeBeforeFn.scoped = function (){\n    return command\n  }\n  \n  return scopeBeforeFn\n}\n\n"],"file":"hack.js"}