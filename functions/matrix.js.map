{"version":3,"sources":["../.src/functions/matrix.js"],"names":["rangeModel","value","step","sizeBase","start","end","reverse","parseFloat","range","stepSize","sizeBaseRange","r","console","warn","i","l","push","domainRangeValue","domain","vs","nice","limit","v","sel","$range","$domain","dSize","sSize","dRate","calc","result","Math","floor","domainRangeInterpolate","_domain","_range","_nice","interpolate","matrixRange","scales","maxLength","length","selectLengthes","scaleIndex","rangeResult","reduce","redu","Array","turnSize","forEach","scaleCase","scaleCaseLength","time","validMatrix","arr","from","some","likeError","undefined","asMatrix","columnSize","rowCount","ceil","column","ci","multiplyMatrix","aMatrix","bMatrix","columnLength","rRowIndex","columnResult","multiplied","dist","num","index","rColumnIndex"],"mappings":"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","sourcesContent":["import { asArray, cloneDeep } from './cast'\nimport { likeArray, isNumber, isAbsoluteNaN } from './isLike'\nimport { top } from './reduce'\nimport { turn, limitNumber } from './nice'\nimport { hashMap, times } from './enumerable'\n\nexport const rangeModel = function (value, step, sizeBase){\n  let start, end, reverse\n  \n  if(typeof value === \"number\"){\n    end = value\n    start = 0\n  } else if(typeof value === \"object\"){\n    start = value[0]\n    end = value[1]\n      \n    if(!step && typeof value[2] === \"number\"){\n      step = value[2]\n    }\n      \n    if(typeof sizeBase !== \"boolean\"){\n      sizeBase = false\n    }\n  }\n  \n  /*\n  if(typeof start !== \"number\" || typeof end !== \"number\"){\n    if(typeof start !== \"number\" && typeof end !== \"number\") return r\n    if(typeof start === \"number\") return r.push(start), r\n    if(typeof end === \"number\") return r.push(end), r\n  }\n  */\n  \n  if(start > end){\n    reverse = end\n    end = start\n    start = reverse\n    reverse = true\n  }\n  \n  end = parseFloat(end)\n  end = isAbsoluteNaN(end) ? 0 : end\n  start = parseFloat(start)\n  start = isAbsoluteNaN(start) ? 0 : start\n  step = parseFloat(step)\n  step = isAbsoluteNaN(step) || step == 0 ? 1 : step\n  \n  return {\n    start,\n    end,\n    step,\n    reverse,\n    sizeBase\n  }\n}\n\nexport const range = function (value, stepSize, sizeBaseRange){\n  let r = []\n  let {\n    start,\n    end,\n    step,\n    reverse,\n    sizeBase\n  } = rangeModel(value, stepSize, sizeBaseRange)\n  \n  if(step <= 0){ return console.warn(\"range::not support minus step\"), r };\n  if(sizeBase == false){ for(var i = start, l = end; i <= l; i = i + step) r.push(i) } else { for(var i = start, l = end; i < l; i = i + step) r.push(i) }\n  return reverse ? r.reverse() : r\n}\n\nexport const domainRangeValue = function (domain, range, vs, nice, limit){\n  return hashMap(cloneDeep(vs), function (v, sel){\n    const $range  = sel ? range[sel] : range\n    const $domain = sel ? domain[sel] : domain\n    if(!$range || !$domain){ return v }\n                    \n    const dSize = $domain[1] - $domain[0]\n    const sSize = $range[1] - $range[0]\n    const dRate = (v - $domain[0]) / dSize\n    const calc  = $range[0] + sSize * dRate\n    const result = nice ? Math.floor(calc) : calc\n    \n    return limit \n      ? $range[1] > $range[0] \n        ? limitNumber(result, $range[1], $range[0])\n        : limitNumber(result, $range[0], $range[1])\n      : result\n  })\n}\n\nexport const domainRangeInterpolate = function (domain, range, nice, limit){\n  let _domain = domain\n  let _range  = range\n  let _nice   = nice\n  \n  const interpolate = (value)=>domainRangeValue(_domain, _range, value, _nice, limit)\n  \n  interpolate.domain = (domain)=>{\n    _domain = domain\n    return interpolate\n  }\n  interpolate.range = (range)=>{\n    _range = range\n    return interpolate\n  }\n  interpolate.nice = (nice)=>{\n    _nice = nice\n    return interpolate\n  }\n  \n  return interpolate\n}\n\n//matrixRange([1],[3]) // [[1], [2], [3]] \n//matrixRange([1,1],[3,3]) // [[1, 1], [2, 1], [3, 1], [1, 2], [2, 2], [3, 2], [1, 3], [2, 3], [3, 3]]\n\nexport const matrixRange = function (start, end, step, sizeBase){\n  var scales = []\n  var maxLength = top([start.length, end.length])\n    \n  var selectLengthes = times(maxLength, function (scaleIndex){\n    const rangeResult = range([start[scaleIndex], end[scaleIndex]], step, sizeBase)\n    scales.push(rangeResult)\n    return rangeResult.length\n  })\n\n  var result = times(selectLengthes.reduce(function (redu, value){\n    return redu * value\n  }, 1), function (){ return new Array(maxLength) })\n    \n  var turnSize = 1\n  \n  \n  asArray(scales).forEach((scaleCase, scaleIndex)=>{\n    var scaleCaseLength = scaleCase.length\n    times(result.length, function (time){\n      result[time][scaleIndex] = scaleCase[turn(time, scaleCaseLength, turnSize)]\n    })\n    turnSize = turnSize * scaleCaseLength\n  })\n    \n  return result\n}\n\n//validate matrix format\nexport const validMatrix = function (arr){\n  // Matrix must be array\n  if(!likeArray(arr)){\n    return false\n  }\n  \n  // Empty is valid\n  if(arr.length === 0){\n    return true\n  }\n  \n  //find some error ( return true => false)\n  return !Array.from(arr).some((v)=>{\n    if(likeArray(v)){\n      //length check\n      if(v.length !== arr.length) return true\n      //type check\n      return v.some(likeError=>!(likeError == undefined || isNumber(likeError)))\n    }\n    return true\n  })\n}\n\n// real matrix model\nexport const asMatrix = function (arr, columnSize){\n  const result = []\n  if(typeof columnSize === \"number\" && columnSize > 0){\n    const rowCount = Math.ceil(arr.length / columnSize)\n    times(rowCount, i=>{\n      const column = []\n      times(columnSize, ci=>{ column.push(arr[i * columnSize + ci]) })\n      result.push(column)\n    })\n  } else {\n    return [arr]\n  }\n  return result\n}\n\nexport const multiplyMatrix = function (aMatrix, bMatrix){\n  if(!validMatrix(aMatrix) && validMatrix(bMatrix)){\n    return null\n  }\n  if(aMatrix[0].length !== bMatrix.length){\n    return null\n  }\n  const result = []\n  times(bMatrix.length, rRowIndex=>{\n    const columnLength = bMatrix[rRowIndex].length\n    const columnResult = []\n    times(columnLength, rColumnIndex=>{\n      //var calcLog = [];\n      const multiplied = aMatrix[rRowIndex].reduce((dist, num, index)=>{\n        //calcLog.push(`${num} * ${bMatrix[index][rColumnIndex]}`)\n        return num * bMatrix[index][rColumnIndex] + dist\n      }, 0)\n      //console.log(\"calcLog\",calcLog.join(\" + \"))\n      columnResult.push(multiplied)\n    })\n    result.push(columnResult)\n  })\n  return result\n}\n"],"file":"matrix.js"}