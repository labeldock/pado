{"version":3,"sources":["../.src/functions/cast.js"],"names":["asArray","data","defaultArray","undefined","toArray","option","Array","prototype","slice","call","split","asObject","defaultKey","toNumber","v","d","vr","replace","dr","cleanObject","splice","length","Object","keys","forEach","key","clone","target","r","i","push","Date","setTime","getTime","hasOwnProperty","k","console","error","cloneDeep","l","p","free","datum","dest","test","getKeyWithValue","obj","value","removeValue","detect","array","instance","func","proto","ins","DummyInstance","param","alloc","init","fn","rn","args","apply"],"mappings":"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","sourcesContent":["import {\n  isArray,\n  isNone,\n  isAbsoluteNaN,\n  isPlainObject,\n  isObject\n} from './isLike'\n\nexport const asArray = function (data, defaultArray = undefined){\n  if(isArray(data)){\n    return data\n  }\n  if(isNone(data)){\n    return isArray(defaultArray) ? defaultArray\n      : isNone(defaultArray) ? [] : [defaultArray]\n  }\n  if(typeof data === \"object\" && typeof data.toArray === \"function\"){\n    return data.toArray()\n  }\n  return [data]\n}\n\nexport const toArray = function (data, option){\n  if(typeof data === \"undefined\" || data === null || isAbsoluteNaN(data)) return []\n  if(isArray(data)) return Array.prototype.slice.call(data)\n  if(typeof data === \"object\" && typeof data.toArray === \"function\") return data.toArray()\n  if(typeof data === \"string\" && typeof option === \"string\") return data.split(option)\n  return [data]\n}\n\nexport const asObject = function (data, defaultKey = \"default\"){\n  if(isPlainObject(data)){\n    return data\n  } else {\n    return { [defaultKey]: data }\n  }\n}\n\nexport const toNumber = function (v, d){\n  switch (typeof v){ case \"number\":return v; case \"string\":const vr = v.replace(/[^.\\d\\-]/g, \"\") * 1; return isAbsoluteNaN(vr) ? 0 : vr; break }\n  switch (typeof d){ case \"number\":return d; case \"string\":const dr = d * 1; return isAbsoluteNaN(dr) ? 0 : dr; break }\n  return 0\n}\n\nexport const cleanObject = function (data){\n  if(data instanceof Array){\n    Array.prototype.splice.call(data, 0, data.length)\n  } else if(typeof data == \"object\"){\n    Object.keys(data).forEach(key=>{ delete data[key] })\n  }\n  return data\n}\n\nexport const clone = function (target){\n  switch (typeof target){\n    case \"undefined\": case \"function\": case \"boolean\": case \"number\": case \"string\": return target; break\n    case \"object\":\n      if(target === null) return target\n    \n      if(isArray(target)){\n        let r = []\n        for(let i = 0, length = target.length; i < length; i++)r.push(target[i])\n        return r\n      }\n    \n      if(!isPlainObject(target)){\n        if(target instanceof Date){\n          let r = new Date()\n          r.setTime(target.getTime())\n          return r\n        }\n        return target\n      }\n    \n      let r = {}\n    \n      Object.keys(target).forEach(k=>{\n        if(target.hasOwnProperty(k)) r[k] = target[k]\n      })\n      return r\n      break\n    default : \n      console.error(\"clone::copy failed : target => \", target)\n      return target \n      break\n  }\n}\n\nexport const cloneDeep = function (target){\n  if(typeof target === \"object\"){\n    let d\n    if(isArray(target)){\n      if(!isArray(d)){ d = [] };\n      for(var i = 0, l = target.length; i < l; i++) d.push(((typeof target[i] === \"object\" && target[i] !== null) ? clone(target[i]) : target[i]))\n      return d\n    } else {\n      d = {}\n      Object.keys(target).forEach(p=>{\n        (typeof target[p] === \"object\" && target[p] !== null && d[p]) ? clone(target[p], d[p]) : d[p] = target[p]\n      })\n      return d\n    }\n  } else {\n    return clone(target)\n  }\n}\n\nexport const free = function (datum){\n  const dest = {}\n  Object.keys(datum).forEach(key=>{\n    if(!/^\\$/.test(key)){\n      dest[key] = cloneDeep(datum[key])\n    }\n  })\n  return dest\n}\n\nconst getKeyWithValue = function (obj, value){\n  if(isArray(obj)){\n    for(var i = 0, l = obj.length; i < l; i++) if(obj[i] === value) return i\n  } \n  if(isObject(obj)){\n    for(var key in obj) if(obj[key] === value) return key\n  }\n  return undefined\n}\n\nexport const removeValue = function (obj, value){\n  var detect = true\n  var array  = isArray(obj)\n\n  while(detect){\n    var key = getKeyWithValue(obj, value)\n    if(typeof key === \"undefined\"){\n      detect = false\n    } else {\n      if(array){\n        obj.splice(key, 1)\n      } else {\n        delete obj[key]\n      }\n    }\n  }\n\n  return obj\n}\n\nexport const instance = function (func, proto){\n  var ins; var DummyInstance = function (param){ if(typeof param === \"object\") for(var k in param) this[k] = param[k] }\n  if(typeof func == \"object\"){\n    if(typeof proto === \"object\") DummyInstance.prototype = proto\n    ins = new DummyInstance(func)\n  }\n  if(typeof func == \"function\"){\n    if(typeof proto === \"object\") func.prototype = proto\n    ins = (new func())\n  }\n  return ins\n}\n\nexport const alloc = function (init){\n  let fn = init()\n  const rn = function (...args){\n    return fn.apply(this, args)\n  }\n  rn['reset'] = function (){ fn = init(rn, rn) }\n  rn['$constructor'] = fn\n  return rn\n}\n\n// TODO\n/*\nconst syncData = (function (){\n  const ENTER_HOOK  = (newDatum)=>Object.assign({}, newDatum)\n  const UPDATE_HOOK = (oldDatum, newDatum)=>Object.assign({}, oldDatum, newDatum)\n  \n  return function (oldData, newData, getId, options){\n    if(!/string|function/.test(typeof getId)) throw new Error(\"syncData need getId\")\n  \n    if(typeof getId === \"string\"){\n      const getIdString = getId\n      getId = e=>_.get(e, getIdString)\n    }\n\n    oldData = asArray(oldData)\n    newData = asArray(newData)\n\n    const result = []\n    const hooks  = asObject(options, \"afterEach\")\n    \n    if(typeof hooks[\"enter\"] !== \"function\"){\n      hooks[\"enter\"] = ENTER_HOOK\n    }\n    \n    if(typeof hooks[\"update\"] !== \"function\"){\n      hooks[\"update\"] = UPDATE_HOOK\n    }\n    \n    const oldDataMap = _.map(oldData, e=>{\n      return { id: getId(e), ref: e }\n    })\n    \n    \n    asArray(newData).forEach((newDatum, i)=>{\n      const newId = getId(newDatum)\n      \n      let oldDatum = _.get(oldDataMap[_.findIndex(oldDataMap, e=>e.id === newId)], \"ref\")\n      let genDatum\n      let dirty = false\n      // eslint-disable-next-line no-undef\n      if(oldDatum){\n        // change is not dirty, modify is dirty\n        if(typeof oldDatum !== typeof newDatum){\n          dirty = false\n        } else { // same type\n          const oldOwnKeys = Object.keys(oldDatum).filter(key=>!(key.indexOf(\"$\") === 0))\n          const newOwnKeys = Object.keys(newDatum).filter(key=>!(key.indexOf(\"$\") === 0))\n\n          // inspect key chnage\n          if(_.isEqual(oldOwnKeys, newOwnKeys)){\n            dirty = !_.isEqual(_.pick(oldDatum, oldOwnKeys), _.pick(newDatum, newOwnKeys))\n          } else {\n            dirty = true\n          }\n        }\n        \n        if(typeof hooks[\"beforeUpdate\"] === \"function\"){\n          if(hooks[\"beforeUpdate\"](oldDatum, newDatum) === false){\n            return\n          }\n        }\n        \n        genDatum = hooks[\"update\"](oldDatum, newDatum)\n        \n        if(typeof hooks[\"afterUpdate\"] === \"function\"){\n          genDatum = hooks[\"afterUpdate\"](genDatum, oldDatum, newDatum)\n        }\n      } else {\n        if(typeof hooks[\"beforeEnter\"] === \"function\"){\n          if(hooks[\"beforeEnter\"](newDatum) === false){\n            return\n          }\n        }\n        \n        genDatum = hooks[\"enter\"](newDatum)\n        \n        if(typeof hooks[\"afterEnter\"] === \"function\"){\n          genDatum = hooks[\"afterEnter\"](genDatum, newDatum)\n        }\n      }\n\n      if(typeof hooks[\"afterEach\"] === \"function\"){\n        hooks[\"afterEach\"](genDatum, i, dirty)\n      }\n\n      result.push(genDatum)\n    })\n\n    return result\n  }\n}())\n*/\n"],"file":"cast.js"}