{"version":3,"file":"static/preview.39ddfa42e0abec759e23.bundle.js","sources":["webpack:///./src/component/mixins/HighOrderRect.js"],"sourcesContent":["import { likeNumber } from '../../../../../.src/functions';\n/*\n  usage \n  HighOrderRect([[\"width\",\"height\",\"size\",\"rect\"],[20,20]])\n  this.width = 20\n  this.height = 20\n  this.size\n  this.sizeValue\n  this.rectValue\n*/\n// \n// \nconst DEFAULT_RECT_SIZE_VALUE = 20;\nexport default function(...options){\n  if(!options.length){\n    options=[[[],[]]];\n  }\n  const props={};\n  const computed={};\n  \n  options.forEach(([ keys=[], defaultValues=[] ])=>{\n    const [widthKey=\"width\", heightKey=\"height\", sizeKey=\"size\", rectKey=\"rect\"] =  keys;\n    const [widthParam=DEFAULT_RECT_SIZE_VALUE, heightParam=DEFAULT_RECT_SIZE_VALUE] = defaultValues;\n    \n    Object.assign(props,{\n      [ widthKey ] : { default:widthParam },\n      [ heightKey ] : { default:heightParam },\n      [ sizeKey ] : {}\n    });\n    \n    const sizeValueKey = sizeKey + \"Value\";\n    const rectValueKey = rectKey + \"Value\";\n    \n    Object.assign(computed,{\n      [ sizeValueKey ]:function(){\n        return likeNumber(this[sizeKey]) ? parseFloat(this[sizeKey]) : undefined;\n      },\n      [ rectValueKey ]:function(){\n        const width  = typeof this[sizeValueKey] === \"number\" ? this[sizeValueKey] : parseInt(this[widthKey], 10);\n        const height = typeof this[sizeValueKey] === \"number\" ? this[sizeValueKey] : parseInt(this[heightKey], 10);\n        return { width, height };\n      }\n    })\n  });\n  \n  const highOrderMixins = { props, computed };\n  return highOrderMixins;\n}"],"mappings":"AAYA","sourceRoot":""}